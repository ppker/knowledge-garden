---
description: 
globs: 
alwaysApply: true
---
# Obsidian 数字花园 Cursor Rule

## 1. 总览与定位
- 本仓库为个人 Obsidian 数字花园，核心理念为"原子化笔记、双链、MOC（Map of Content） 导航、动态索引"。
- 采用 Zettelkasten、ACCESS目录结构、PARA 等 PKM 方法论，强调知识南.md 。

## 2. 目录结构约定
- `🍀 花园导览/`：知识库导航入口、MOC、结构说明、方法论、发布指南等。
- `📥 Inbox/`：收集箱，临时笔记、灵anvas（可视化）、Dataviews（动态索引）、Draws（绘图）等。详见 @Atlas.md。
- `Cards/`：卡片笔记区，存放包含每日笔记、周报、月报、年报等。
- `Extras/`：附加区，包含文档、媒体、模板、软件配置等。
- `Sources/`：外部资料区，包含文章、书籍、剪藏等。
- `Sp @PARA.md组织，例如 `Spaces/0-PReadme.md 。

## 3. 文件命名与内容规范
- 支持 Obsidian 的 `[[双链]]`、`#标签`、YAML frontmatter 头信息（如 title、tags、filetype、data created 等）。
- 永久笔记应原子化表达一个核心思想，临时/文献/索引笔记分开管理并互链。
- 如果完全从0开始生成一个新文件，则记得加上 frontmattert字段： `tags: [AI生成]`，注意使用数组格式。
- 当你创建新的md文档，需要引用其他md文件时，记得直接使用最简洁的[[]]语法。

## 4. 插件与自动化
- 推荐插件：Dataview（动态索引/查询）、Canvas、Calendar、Tag Pane 等。
- Dataview 查询集中存放于 @Atlas/Dataviews/+ Dataviews Readme.md。
- 支持 YAML 属性、自动化索引、任务/项目追踪。
- dataview和datacore暂时先不用，因为现在官方出了@∑ BASE.md插件，可以完全平替s Functions.md。

## 5. 工作流与方法论
- 参考 ACCESS、PARA、CODE 等 PKM 流程。
- 日常流程：收集（Inbox/Sources/Clippings）→ 处理（整理/转化为永久笔记）→ 链接（建立关联）→ 索引（MOC/Dataview）→ 回顾（定期复习/优化）。
- 强调链接优先，鼓励笔记间多建立双链，形成知识网络。双链的语法是`[[时候，请务必使用双链语法，将多个文件串联。倾向于尽可能地使用[[]]语法，引用已经存在的文档（md、canvas、base、excalidraw等均可），当然不要瞎编不存在的文档。
- 详见 @∑ 本库 ACCESS 工作流汇总.md 。

## 6. 兼容性与开放性
- 纯 Markdown 语法，兼容 Obsidian、VSCode和Cursor（需 foam 插件）等。
- 支持 frontmatter YAML 头信息，便于自动化处理和插件扩展。
- 结构开放，便于迁移、发布、二次开发。

## 7. Obsidian Canvas 规范（JSON Canvas 1.0 简要说明）
- Obsidian Canvas 文件，由于使用了Advanced Canvas插件 ，所以遵循 @Obsidian advanced canvas 规范.md  。
- 主要结构：
  - `nodes`：节点数组，支持 text（文本）、file（文件/图片）、link（外链）、group（分组）等类型。
  - `edges`：边数组，连接节点。
- 主要字段：
  - 节点（node）：`id`（唯一标识，不能有`-`短横杆）、`type`、`x`、`y`、`width`、`height`、`color`（可选）、type-specific 字段（如 text、file、url、label 等）。file可以引用其他除了md以外的canvas、bases、excalidraw等文件
  - 边（edge）：`id`、`fromNode`、`toNode`、`fromSide`/`toSide`（可选）、`fromEnd`/`toEnd`（可选）、`color`（可选）、`label`（可选）。
  - 颜色（color）：支持 hex 代码或 1-6 预设色（1=红，2=橙，3=黄，4=绿，5=青，6=紫）。
- **重要提醒：** 在 `nodes` 的 `text` 字段中，如果文本内容本身包含双引号 (`"`)，必须使用反斜杠 (`\`) 进行转义，即写为 `\"`，以确保 JSON 格式的有效性。如果要换行，则需要在每行末尾加2个空格再用\n换行的markdown严格换行模式。生成canvas的node时，需要依据text文本长度，给一个合适的width、x、y的值。