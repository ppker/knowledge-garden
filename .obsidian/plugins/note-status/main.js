/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var _=Object.defineProperty;var dt=Object.getOwnPropertyDescriptor;var ht=Object.getOwnPropertyNames;var gt=Object.prototype.hasOwnProperty;var mt=(o,t)=>{for(var e in t)_(o,e,{get:t[e],enumerable:!0})},St=(o,t,e,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of ht(t))!gt.call(o,i)&&i!==e&&_(o,i,{get:()=>t[i],enumerable:!(s=dt(t,i))||s.enumerable});return o};var vt=o=>St(_({},"__esModule",{value:!0}),o);var Dt={};mt(Dt,{default:()=>q});module.exports=vt(Dt);var G=require("obsidian");var f=[{id:"colorful",name:"Colorful workflow",description:"A colorful set of workflow statuses with descriptive icons",statuses:[{name:"idea",icon:"\u{1F4A1}",color:"#FFEB3B"},{name:"draft",icon:"\u{1F4DD}",color:"#E0E0E0"},{name:"inProgress",icon:"\u{1F527}",color:"#FFC107"},{name:"editing",icon:"\u{1F58A}\uFE0F",color:"#2196F3"},{name:"pending",icon:"\u23F3",color:"#9C27B0"},{name:"onHold",icon:"\u23F8",color:"#9E9E9E"},{name:"needsUpdate",icon:"\u{1F504}",color:"#FF5722"},{name:"completed",icon:"\u2705",color:"#4CAF50"},{name:"archived",icon:"\u{1F4E6}",color:"#795548"}]},{id:"minimal",name:"Minimal workflow",description:"A simplified set of essential workflow statuses",statuses:[{name:"todo",icon:"\u{1F4CC}",color:"#F44336"},{name:"inProgress",icon:"\u2699\uFE0F",color:"#2196F3"},{name:"review",icon:"\u{1F440}",color:"#9C27B0"},{name:"done",icon:"\u2713",color:"#4CAF50"}]},{id:"academic",name:"Academic research",description:"Status workflow for academic research and writing",statuses:[{name:"research",icon:"\u{1F50D}",color:"#2196F3"},{name:"outline",icon:"\u{1F4D1}",color:"#9E9E9E"},{name:"draft",icon:"\u270F\uFE0F",color:"#FFC107"},{name:"review",icon:"\u{1F52C}",color:"#9C27B0"},{name:"revision",icon:"\u{1F4DD}",color:"#FF5722"},{name:"final",icon:"\u{1F4DA}",color:"#4CAF50"},{name:"published",icon:"\u{1F393}",color:"#795548"}]},{id:"project",name:"Project management",description:"Status workflow for project management and tracking",statuses:[{name:"planning",icon:"\u{1F5D3}\uFE0F",color:"#9E9E9E"},{name:"backlog",icon:"\u{1F4CB}",color:"#E0E0E0"},{name:"ready",icon:"\u{1F6A6}",color:"#8BC34A"},{name:"inDevelopment",icon:"\u{1F468}\u200D\u{1F4BB}",color:"#2196F3"},{name:"testing",icon:"\u{1F9EA}",color:"#9C27B0"},{name:"review",icon:"\u{1F441}\uFE0F",color:"#FFC107"},{name:"approved",icon:"\u{1F44D}",color:"#4CAF50"},{name:"live",icon:"\u{1F680}",color:"#3F51B5"}]}],st=["colorful"];var it={statusColors:{active:"var(--text-success)",onHold:"var(--text-warning)",completed:"var(--text-accent)",dropped:"var(--text-error)",unknown:"var(--text-muted)"},showStatusBar:!0,autoHideStatusBar:!1,customStatuses:[],showStatusIconsInExplorer:!0,hideUnknownStatusInExplorer:!1,collapsedStatuses:{},compactView:!1,enabledTemplates:st,useCustomStatusesOnly:!1,useMultipleStatuses:!0,tagPrefix:"obsidian-note-status",strictStatuses:!1,excludeUnknownStatus:!0,quickStatusCommands:["active","completed"]};var j=require("obsidian");var D=class{constructor(t,e){this.allStatuses=[];this.app=t,this.settings=e,this.updateAllStatuses()}updateSettings(t){this.settings=t,this.updateAllStatuses()}updateAllStatuses(){if(this.allStatuses=[...this.settings.customStatuses],!this.settings.useCustomStatusesOnly){let t=this.getTemplateStatuses();for(let e of t)this.allStatuses.findIndex(i=>i.name.toLowerCase()===e.name.toLowerCase())===-1?this.allStatuses.push(e):e.color&&(this.settings.statusColors[e.name]||(this.settings.statusColors[e.name]=e.color))}}getTemplateStatuses(){return this.settings.enabledTemplates.map(t=>f.find(e=>e.id===t)).filter(Boolean).flatMap(t=>t?t.statuses:[])}getAllStatuses(){return this.allStatuses}getFileStatuses(t){let e=this.app.metadataCache.getFileCache(t);if(!(e!=null&&e.frontmatter))return["unknown"];let s=e.frontmatter[this.settings.tagPrefix];if(!s)return["unknown"];let i=[];if(Array.isArray(s))for(let n of s)if(this.settings.strictStatuses)this.addValidStatus(n.toString(),i);else{let a=n.toString().trim();a&&i.push(a)}else if(this.settings.strictStatuses)this.addValidStatus(s.toString(),i);else{let n=s.toString().trim();n&&i.push(n)}return i.length>0?i:["unknown"]}addValidStatus(t,e){let s=t.toLowerCase(),i=this.allStatuses.find(n=>n.name.toLowerCase()===s);i&&e.push(i.name)}getStatusIcon(t){let e=this.allStatuses.find(s=>s.name.toLowerCase()===t.toLowerCase());return e?e.icon:"\u2753"}insertStatusMetadataInEditor(t){let e=t.getValue(),s=e.match(/^---\n([\s\S]+?)\n---/),i=new RegExp(`${this.settings.tagPrefix}:\\s*\\[?[^\\]]*\\]?`,"m");if(s){if(s[1].match(i))return;let a=["unknown"],r=`${this.settings.tagPrefix}: ${JSON.stringify(a)}`;this.insertIntoExistingFrontmatter(t,e,s,r)}else{if(e.match(i))return;let n=["unknown"],a=`${this.settings.tagPrefix}: ${JSON.stringify(n)}`;this.createFrontmatterWithStatus(t,e,a)}}insertIntoExistingFrontmatter(t,e,s,i){let n=s[1],a=new RegExp(`${this.settings.tagPrefix}:\\s*\\[?[^\\]]*\\]?`,"m"),r=n.match(a)?n.replace(a,i):`${n}
${i}`,l=e.replace(/^---\n([\s\S]+?)\n---/,`---
${r}
---`);t.setValue(l)}createFrontmatterWithStatus(t,e,s){let i=`---
${s}
---

${e.trim()}`;t.setValue(i)}getMarkdownFiles(t=""){let e=this.app.vault.getMarkdownFiles();if(!t)return e;let s=t.toLowerCase();return e.filter(i=>i.basename.toLowerCase().includes(s))}groupFilesByStatus(t=""){let e={};for(let i of this.allStatuses)e[i.name]=[];e.unknown=e.unknown||[];let s=this.getMarkdownFiles(t);for(let i of s){let n=this.getFileStatuses(i);for(let a of n)e[a]&&e[a].push(i)}return e}async modifyNoteStatus(t){let{operation:e,showNotice:s=!0}=t,i=Array.isArray(t.files)?t.files:[t.files],n=Array.isArray(t.statuses)?t.statuses:[t.statuses];if(i.length===0){s&&new j.Notice("No files selected");return}let a=i.map(async r=>{if(!r||r.extension!=="md")return;let l=this.getFileStatuses(r),u=[];switch(e){case"set":u=[...n];break;case"add":u=[...new Set([...l.filter(c=>c!=="unknown"),...n])];break;case"remove":u=l.filter(c=>!n.includes(c));break;case"toggle":u=[...l];for(let c of n)l.includes(c)?u=u.filter(p=>p!==c):u=[...u.filter(p=>p!=="unknown"),c];break}u.length===0&&(u=["unknown"]),await this.app.fileManager.processFrontMatter(r,c=>{c[this.settings.tagPrefix]=u}),this.notifyStatusChanged(u,r)});if(await Promise.all(a),s&&i.length>1){let r=n.length===1?n[0]:`${n.length} statuses`,l=e==="set"?"updated":e==="add"?"added to":e==="remove"?"removed from":"toggled on";new j.Notice(`${r} ${l} ${i.length} files`)}}async handleStatusChange(t){let{files:e,statuses:s,isMultipleSelection:i=!1,allowMultipleStatuses:n=this.settings.useMultipleStatuses,operation:a,showNotice:r=i}=t,l=Array.isArray(e)?e:[e],u=Array.isArray(s)?s:[s],c;if(a)c=a;else if(i){let p=u[0];c=l.filter(m=>this.getFileStatuses(m).includes(p)).length>l.length/2?"remove":"add"}else n?c="toggle":c="set";await this.modifyNoteStatus({files:l,statuses:u,operation:c,showNotice:r})}notifyStatusChanged(t,e){window.dispatchEvent(new CustomEvent("note-status:status-changed",{detail:{statuses:t,file:e==null?void 0:e.path}}))}};var A=class{constructor(t){this.settings=t,this.initializeDynamicStyles()}updateSettings(t){this.settings=t,this.updateDynamicStyles()}initializeDynamicStyles(){this.dynamicStyleEl||(this.dynamicStyleEl=document.createElement("style"),document.head.appendChild(this.dynamicStyleEl)),this.updateDynamicStyles()}updateDynamicStyles(){if(!this.dynamicStyleEl){this.initializeDynamicStyles();return}let t=this.getAllStatusColors(),e=this.generateColorCssRules(t);this.dynamicStyleEl.textContent=e}getAllStatusColors(){let t={...this.settings.statusColors};if(this.settings.useCustomStatusesOnly)return t;for(let e of this.settings.enabledTemplates){let s=f.find(i=>i.id===e);if(s)for(let i of s.statuses)i.color&&!t[i.name]&&(t[i.name]=i.color)}return t}generateColorCssRules(t){let e="";for(let[s,i]of Object.entries(t))e+=`
        .status-${s} {
            color: ${i} !important;
        }
        .note-status-bar .note-status-${s},
        .nav-file-title .note-status-${s} {
            color: ${i} !important;
        }
      `;return e}unload(){this.dynamicStyleEl&&(this.dynamicStyleEl.remove(),this.dynamicStyleEl=void 0)}};var w=require("obsidian"),b=class{constructor(t,e,s){this.iconUpdateQueue=new Set;this.isProcessingQueue=!1;this.fileItemsWasUndefined=!1;this.app=t,this.settings=e,this.statusService=s,this.ui=new J(t,e,s,()=>{this.fileItemsWasUndefined=!0}),this.debouncedUpdateAll=(0,w.debounce)(this.processUpdateQueue.bind(this),100,!0),this.app.workspace.on("layout-change",()=>{this.checkFileExplorerAvailability()})}checkFileExplorerAvailability(){if(!this.settings.showStatusIconsInExplorer)return;let t=this.ui.findFileExplorerView();t!=null&&t.fileItems&&this.fileItemsWasUndefined&&(this.fileItemsWasUndefined=!1,setTimeout(()=>this.updateAllFileExplorerIcons(),100))}updateSettings(t){let e=this.settings.showStatusIconsInExplorer!==t.showStatusIconsInExplorer||this.settings.hideUnknownStatusInExplorer!==t.hideUnknownStatusInExplorer;this.settings={...t},this.ui.updateSettings(t),e?(this.ui.removeAllFileExplorerIcons(),t.showStatusIconsInExplorer&&setTimeout(()=>this.updateAllFileExplorerIcons(),50)):t.showStatusIconsInExplorer&&this.updateAllFileExplorerIcons()}updateFileExplorerIcons(t){if(!t||!this.settings.showStatusIconsInExplorer||t.extension!=="md")return;let e=this.app.workspace.getActiveFile();(e==null?void 0:e.path)===t.path&&this.ui.updateSingleFileIconDirectly(t,this.statusService),this.queueFileUpdate(t)}updateAllFileExplorerIcons(){if(!this.settings.showStatusIconsInExplorer){this.ui.removeAllFileExplorerIcons();return}this.processFilesInBatches()}getSelectedFiles(){return this.ui.getSelectedFiles()}queueFileUpdate(t){!this.settings.showStatusIconsInExplorer||t.extension!=="md"||(this.iconUpdateQueue.add(t.path),this.debouncedUpdateAll())}async processUpdateQueue(){if(!(this.isProcessingQueue||this.iconUpdateQueue.size===0)){this.isProcessingQueue=!0;try{let t=this.ui.findFileExplorerView();if(!t||!t.fileItems){this.fileItemsWasUndefined=!0,setTimeout(()=>this.debouncedUpdateAll(),200);return}let e=Array.from(this.iconUpdateQueue),s=50;for(let i=0;i<e.length;i+=s)await this.processBatch(e.slice(i,i+s),t),i+s<e.length&&await new Promise(n=>setTimeout(n,0))}catch(t){console.error("Note Status: Error processing file update queue",t)}finally{this.isProcessingQueue=!1,this.iconUpdateQueue.size>0&&this.debouncedUpdateAll()}}}async processBatch(t,e){for(let s of t){let i=this.app.vault.getFileByPath(s);i instanceof w.TFile&&this.ui.updateSingleFileIcon(i,e,this.statusService),this.iconUpdateQueue.delete(s)}}async processFilesInBatches(){let t=this.app.vault.getMarkdownFiles(),e=100;for(let s=0;s<t.length;s+=e)t.slice(s,s+e).forEach(i=>this.queueFileUpdate(i)),s+e<t.length&&await new Promise(i=>setTimeout(i,0))}unload(){this.ui.removeAllFileExplorerIcons(),this.debouncedUpdateAll.cancel()}},J=class{constructor(t,e,s,i){this.app=t,this.settings=e,this.onFileItemsUndefined=i}updateSettings(t){this.settings=t}findFileExplorerView(){let t=this.app.workspace.getLeavesOfType("file-explorer")[0];if(t!=null&&t.view)return t.view;for(let e of this.app.workspace.getLeavesOfType(""))if(e.view&&"fileItems"in e.view)return e.view;return null}updateSingleFileIcon(t,e,s){if(!(!this.settings.showStatusIconsInExplorer||t.extension!=="md"))try{if(!e.fileItems){this.onFileItemsUndefined();return}let i=e.fileItems[t.path];if(!i)return;let n=i.titleEl||i.selfEl;if(!n)return;let a=s.getFileStatuses(t);if(this.removeExistingIcons(n),this.shouldSkipIcon(a))return;this.addStatusIcons(n,a,s)}catch(i){console.error(`Note Status: Error updating icon for ${t.path}`,i)}}updateSingleFileIconDirectly(t,e){let s=this.findFileExplorerView();s&&this.updateSingleFileIcon(t,s,e)}removeAllFileExplorerIcons(){let t=this.findFileExplorerView();t!=null&&t.fileItems&&Object.values(t.fileItems).forEach(e=>{let s=e.titleEl||e.selfEl;s&&this.removeExistingIcons(s)})}getSelectedFiles(){let t=this.findFileExplorerView();return t!=null&&t.fileItems?Object.values(t.fileItems).filter(e=>{var s;return((s=e.el)==null?void 0:s.classList.contains("is-selected"))&&e.file instanceof w.TFile&&e.file.extension==="md"}).map(e=>e.file):[]}shouldSkipIcon(t){return this.settings.hideUnknownStatusInExplorer&&t.length===1&&t[0]==="unknown"}removeExistingIcons(t){let e=".note-status-icon, .note-status-icon-container";t.querySelectorAll(e).forEach(s=>{(s.classList.contains("note-status-icon")||s.classList.contains("note-status-icon-container"))&&s.remove()})}addStatusIcons(t,e,s){let i=document.createElement("span");if(i.className="note-status-icon-container",this.settings.useMultipleStatuses&&e.length>0&&e[0]!=="unknown")e.forEach(n=>this.addSingleStatusIcon(i,n,s));else{let n=e[0]||"unknown";(n!=="unknown"||!this.settings.hideUnknownStatusInExplorer)&&this.addSingleStatusIcon(i,n,s)}i.childElementCount>0&&t.appendChild(i)}addSingleStatusIcon(t,e,s){let i=document.createElement("span");i.className=`note-status-icon nav-file-tag status-${e}`,i.textContent=s.getStatusIcon(e);let n=s.getAllStatuses().find(r=>r.name===e),a=n!=null&&n.description?`${e} - ${n.description}`:e;(0,w.setTooltip)(i,a),t.appendChild(i)}};var x=class{constructor(t,e,s,i){this.app=t,this.settings=e,this.statusService=s,this.statusDropdown=i}updateSettings(t){this.settings=t}registerEditorMenus(){this.editorMenuRef=(t,e,s)=>{s.file&&this.addStatusMenuItems(t,e,s)},this.app.workspace.on("editor-menu",this.editorMenuRef)}addStatusMenuItems(t,e,s){if(t.addItem(i=>i.setTitle("Change note status").setIcon("tag").onClick(()=>{s.file&&this.statusDropdown.openStatusDropdown({files:[s.file],editor:e,view:s})})),s.file){let i=this.statusService.getFileStatuses(s.file);i.length===1&&i[0]==="unknown"&&t.addItem(n=>n.setTitle("Insert status metadata").setIcon("plus-circle").onClick(()=>{this.insertStatusMetadata(e)}))}}insertStatusMetadata(t){this.statusService.insertStatusMetadataInEditor(t)}unload(){this.editorMenuRef&&this.app.workspace.off("editor-menu",this.editorMenuRef)}};var Y=require("obsidian");var L=class{constructor(t,e){this.element=null;this.settings=t,this.statusService=e}createElement(){let t=document.createElement("button");return t.addClass("note-status-toolbar-button","clickable-icon","view-action"),t.setAttribute("aria-label","Note status"),this.element=t,t}updateDisplay(t){if(!this.element)return;this.element.empty();let e=t.length>0&&t[0]!=="unknown",s=document.createElement("div");s.addClass("note-status-toolbar-badge-container"),e?this.renderStatusBadge(s,t):this.renderUnknownBadge(s),this.element.appendChild(s)}renderStatusBadge(t,e){let s=e[0],i=this.statusService.getStatusIcon(s),n=document.createElement("span");if(n.addClass("note-status-toolbar-icon",`status-${s}`),n.textContent=i,t.appendChild(n),this.settings.useMultipleStatuses&&e.length>1){let a=document.createElement("span");a.addClass("note-status-count-badge"),a.textContent=`${e.length}`,t.appendChild(a)}}renderUnknownBadge(t){let e=document.createElement("span");e.addClass("note-status-toolbar-icon","status-unknown"),e.textContent=this.statusService.getStatusIcon("unknown"),t.appendChild(e)}updateSettings(t){this.settings=t}destroy(){this.element&&(this.element.remove(),this.element=null)}};var y=class{constructor(t,e,s,i){this.buttonElement=null;this.currentLeafId=null;this.app=t,this.settings=e,this.statusService=s,this.statusDropdown=i,this.buttonView=new L(e,s)}updateSettings(t){this.settings=t,this.buttonView.updateSettings(t),this.updateStatusDisplay([])}addToolbarButtonToActiveLeaf(t){let e=this.app.workspace.activeLeaf;if(!(e!=null&&e.view)||!(e.view instanceof Y.MarkdownView))return;let s=e.id||e.view.containerEl.id;(this.currentLeafId!==s||!this.buttonElement||!this.isButtonInDOM())&&this.recreateButton(e.view,s),this.updateButtonDisplay(t)}recreateButton(t,e){let s=t.containerEl.querySelector(".view-header .view-actions");s&&(this.removeToolbarButton(),this.buttonElement=this.buttonView.createElement(),this.buttonElement.addEventListener("click",this.handleButtonClick.bind(this)),s.firstChild?s.insertBefore(this.buttonElement,s.firstChild):s.appendChild(this.buttonElement),this.currentLeafId=e)}isButtonInDOM(){var t;return((t=this.buttonElement)==null?void 0:t.isConnected)===!0}removeToolbarButton(){this.app.workspace.iterateAllLeaves(t=>{t.view instanceof Y.MarkdownView&&t.view.containerEl.querySelectorAll(".note-status-toolbar-button").forEach(s=>s.remove())}),this.buttonElement=null,this.currentLeafId=null}updateButtonDisplay(t){if(!this.buttonElement)return;let e=this.app.workspace.getActiveFile();if(!e)return;let s=t!=null&&t.length?t:this.statusService.getFileStatuses(e);this.buttonView.updateDisplay(s)}handleButtonClick(t){t.stopPropagation(),t.preventDefault();let e=this.app.workspace.getActiveFile();e&&this.statusDropdown.openStatusDropdown({target:this.buttonElement||void 0,files:[e]})}updateStatusDisplay(t){this.updateButtonDisplay(t)}unload(){this.removeToolbarButton()}};var nt=require("obsidian"),k=class{constructor(t,e,s,i){this.app=t,this.settings=e,this.statusService=s,this.explorerIntegration=i}updateSettings(t){this.settings=t}registerMetadataEvents(){this.metadataChangedRef=t=>{t instanceof nt.TFile&&t.extension==="md"&&this.handleMetadataChanged(t)},this.metadataResolvedRef=()=>{setTimeout(()=>{this.settings.showStatusIconsInExplorer&&this.explorerIntegration.updateAllFileExplorerIcons()},500)},this.app.metadataCache.on("changed",this.metadataChangedRef),this.app.metadataCache.on("resolved",this.metadataResolvedRef)}handleMetadataChanged(t){this.settings.showStatusIconsInExplorer&&this.explorerIntegration.updateFileExplorerIcons(t);let e=this.app.workspace.getActiveFile();if((e==null?void 0:e.path)===t.path){let s=this.statusService.getFileStatuses(t);window.dispatchEvent(new CustomEvent("note-status:status-changed",{detail:{statuses:s,file:t.path}}))}}unload(){this.metadataChangedRef&&this.app.metadataCache.off("changed",this.metadataChangedRef),this.metadataResolvedRef&&this.app.metadataCache.off("resolved",this.metadataResolvedRef)}};var at=require("obsidian"),T=class{constructor(t,e,s,i){this.lastActiveFile=null;this.app=t,this.settings=e,this.statusService=s,this.toolbarIntegration=i}updateSettings(t){this.settings=t}registerWorkspaceEvents(){this.fileOpenEventRef=t=>{t instanceof at.TFile&&this.handleFileOpen(t)},this.activeLeafChangeEventRef=t=>{this.handleActiveLeafChange(t)},this.layoutChangeEventRef=()=>{this.handleLayoutChange()},this.app.workspace.on("file-open",this.fileOpenEventRef),this.app.workspace.on("active-leaf-change",this.activeLeafChangeEventRef),this.app.workspace.on("layout-change",this.layoutChangeEventRef)}handleFileOpen(t){this.toolbarIntegration.addToolbarButtonToActiveLeaf(),this.propagateNoteStatusChange(t)}handleActiveLeafChange(t){this.toolbarIntegration.addToolbarButtonToActiveLeaf()}handleLayoutChange(){window.dispatchEvent(new CustomEvent("note-status:update-pane"))}propagateNoteStatusChange(t){try{let e=this.app.workspace.getActiveFile(),s=[];e&&e.extension==="md"&&(s=this.statusService.getFileStatuses(e)),window.dispatchEvent(new CustomEvent("note-status:status-changed",{detail:{statuses:s,file:t}}))}catch(e){console.error("Error checking note status:",e)}}unload(){this.fileOpenEventRef&&this.app.workspace.off("file-open",this.fileOpenEventRef),this.activeLeafChangeEventRef&&this.app.workspace.off("active-leaf-change",this.activeLeafChangeEventRef),this.layoutChangeEventRef&&this.app.workspace.off("layout-change",this.layoutChangeEventRef)}};var X=require("obsidian"),N=class{constructor(t,e,s,i,n){this.app=t,this.settings=e,this.statusService=s,this.explorerIntegration=i,this.statusContextMenu=n}updateSettings(t){this.settings=t}registerFileContextMenuEvents(){this.fileMenuEventRef=(t,e,s)=>{s==="file-explorer-context-menu"&&e instanceof X.TFile&&e.extension==="md"&&this.addStatusChangeMenu(t,e)},this.filesMenuEventRef=(t,e)=>{let s=e.filter(i=>i instanceof X.TFile&&i.extension==="md");s.length>0&&this.addBatchStatusChangeMenu(t,s)},this.app.workspace.on("file-menu",this.fileMenuEventRef),this.app.workspace.on("files-menu",this.filesMenuEventRef)}addStatusChangeMenu(t,e){this.statusContextMenu.addStatusMenuItemToSingleFile(t,e,s=>{let i=this.explorerIntegration.getSelectedFiles();i.length>1?this.statusContextMenu.showForFiles(i):this.statusContextMenu.showForFiles([s])})}addBatchStatusChangeMenu(t,e){this.statusContextMenu.addStatusMenuItemToBatch(t,e,s=>{this.statusContextMenu.showForFiles(s)})}unload(){this.fileMenuEventRef&&this.app.workspace.off("file-menu",this.fileMenuEventRef),this.filesMenuEventRef&&this.app.workspace.off("files-menu",this.filesMenuEventRef)}};var ot=require("obsidian");var d=require("obsidian");var H=class{constructor(t){this.quickCommandsContainer=null;this.callbacks=t}render(t,e){t.empty(),this.renderTemplateSettings(t,e),this.renderUISettings(t,e),this.renderTagSettings(t,e),this.renderCustomStatusSettings(t,e),this.renderQuickCommandsSettings(t,e)}renderTemplateSettings(t,e){new d.Setting(t).setName("Status templates").setHeading(),t.createEl("p",{text:"Enable predefined templates to quickly add common status workflows",cls:"setting-item-description"});let s=t.createDiv({cls:"templates-container"});f.forEach(i=>{let n=s.createDiv({cls:"template-item"}),a=n.createDiv({cls:"template-header"}),r=e.enabledTemplates.includes(i.id),l=a.createEl("input",{type:"checkbox",cls:"template-checkbox"});l.checked=r,l.addEventListener("change",()=>{this.callbacks.onTemplateToggle(i.id,l.checked),this.refreshQuickCommandsList(e)}),a.createEl("span",{text:i.name,cls:"template-name"}),n.createEl("div",{text:i.description,cls:"template-description"});let u=n.createDiv({cls:"template-statuses"});i.statuses.forEach(c=>{let p=u.createEl("div",{cls:"template-status-chip"});p.createEl("span",{cls:"status-color-dot"}).style.setProperty("--dot-color",c.color||"#ffffff"),p.createSpan({text:`${c.icon} ${c.name}`})})})}renderUISettings(t,e){new d.Setting(t).setName("User interface").setHeading(),new d.Setting(t).setName("Show status bar").setDesc("Display the status bar").addToggle(s=>s.setValue(e.showStatusBar).onChange(i=>this.callbacks.onSettingChange("showStatusBar",i))),new d.Setting(t).setName("Auto-hide status bar").setDesc("Hide the status bar when status is unknown").addToggle(s=>s.setValue(e.autoHideStatusBar).onChange(i=>this.callbacks.onSettingChange("autoHideStatusBar",i))),new d.Setting(t).setName("Show status icons in file explorer").setDesc("Display status icons in the file explorer").addToggle(s=>s.setValue(e.showStatusIconsInExplorer).onChange(i=>this.callbacks.onSettingChange("showStatusIconsInExplorer",i))),new d.Setting(t).setName("Hide unknown status in file explorer").setDesc("Hide status icons for files with unknown status in the file explorer").addToggle(s=>s.setValue(e.hideUnknownStatusInExplorer||!1).onChange(i=>this.callbacks.onSettingChange("hideUnknownStatusInExplorer",i))),new d.Setting(t).setName("Default to compact view").setDesc("Start the status pane in compact view by default").addToggle(s=>s.setValue(e.compactView||!1).onChange(i=>this.callbacks.onSettingChange("compactView",i))),new d.Setting(t).setName("Exclude unassigned notes from status pane").setDesc("Improves performance by excluding notes with no assigned status from the status pane. Recommended for large vaults.").addToggle(s=>s.setValue(e.excludeUnknownStatus||!1).onChange(i=>this.callbacks.onSettingChange("excludeUnknownStatus",i)))}renderTagSettings(t,e){new d.Setting(t).setName("Status tag").setHeading(),new d.Setting(t).setName("Enable multiple statuses").setDesc("Allow notes to have multiple statuses at the same time").addToggle(s=>s.setValue(e.useMultipleStatuses).onChange(i=>this.callbacks.onSettingChange("useMultipleStatuses",i))),new d.Setting(t).setName("Status tag prefix").setDesc("The YAML frontmatter tag name used for status (default: obsidian-note-status)").addText(s=>s.setValue(e.tagPrefix).onChange(i=>{i.trim()&&this.callbacks.onSettingChange("tagPrefix",i.trim())})),new d.Setting(t).setName("Strict status validation").setDesc("Only show statuses that are defined in templates or custom statuses. \u26A0\uFE0F WARNING: When enabled, any unknown statuses will be automatically removed when modifying file statuses.").addToggle(s=>s.setValue(e.strictStatuses||!1).onChange(i=>this.callbacks.onSettingChange("strictStatuses",i)))}renderQuickCommandsSettings(t,e){new d.Setting(t).setName("Quick status commands").setDesc("Select which statuses should have dedicated commands in the command palette. These can be assigned hotkeys for quick access.").setHeading(),this.quickCommandsContainer=t.createDiv({cls:"quick-commands-container"}),this.populateQuickCommandsList(e)}populateQuickCommandsList(t){if(!this.quickCommandsContainer)return;this.quickCommandsContainer.empty();let e=this.getAllAvailableStatuses(t),s=t.quickStatusCommands||[];e.forEach(i=>{if(!this.quickCommandsContainer)return;let n=new d.Setting(this.quickCommandsContainer).setName(`${i.icon} ${i.name}`).addToggle(a=>a.setValue(s.includes(i.name)).onChange(async r=>{let l=r?[...s.filter(u=>u!==i.name),i.name]:s.filter(u=>u!==i.name);await this.callbacks.onSettingChange("quickStatusCommands",l)}));i.description&&n.setDesc(i.description)}),e.length===0&&this.quickCommandsContainer.createDiv({text:"No statuses available. Enable templates or add custom statuses first.",cls:"setting-item-description"})}refreshQuickCommandsList(t){setTimeout(()=>{this.populateQuickCommandsList(t)},50)}getAllAvailableStatuses(t){let e=[];if(e.push(...t.customStatuses),!t.useCustomStatusesOnly)for(let s of t.enabledTemplates){let i=f.find(n=>n.id===s);if(i)for(let n of i.statuses)e.find(a=>a.name===n.name)||e.push(n)}return e.filter(s=>s.name!=="unknown")}renderCustomStatusSettings(t,e){new d.Setting(t).setName("Custom statuses").setHeading(),new d.Setting(t).setName("Use only custom statuses").setDesc("Ignore template statuses and use only the custom statuses defined below").addToggle(i=>i.setValue(e.useCustomStatusesOnly||!1).onChange(async n=>{await this.callbacks.onSettingChange("useCustomStatusesOnly",n),this.refreshQuickCommandsList(e)}));let s=t.createDiv({cls:"custom-status-list"});this.renderCustomStatuses(s,e),new d.Setting(t).setName("Add new status").setDesc("Add a custom status with a name, icon, and color").addButton(i=>i.setButtonText("Add Status").setCta().onClick(async()=>{await this.callbacks.onCustomStatusAdd(),this.refreshQuickCommandsList(e)}))}renderCustomStatuses(t,e){t.empty(),e.customStatuses.forEach((s,i)=>{let n=new d.Setting(t).setName(s.name).setClass("status-item");n.addText(a=>a.setPlaceholder("Name").setValue(s.name).onChange(async r=>{await this.callbacks.onCustomStatusChange(i,"name",r||"unnamed"),this.refreshQuickCommandsList(e)})),n.addText(a=>a.setPlaceholder("Icon").setValue(s.icon).onChange(async r=>{await this.callbacks.onCustomStatusChange(i,"icon",r||"\u2753"),this.refreshQuickCommandsList(e)})),n.addColorPicker(a=>a.setValue(e.statusColors[s.name]||"#ffffff").onChange(r=>this.callbacks.onCustomStatusChange(i,"color",r))),n.addText(a=>a.setPlaceholder("Description").setValue(s.description||"").onChange(async r=>{await this.callbacks.onCustomStatusChange(i,"description",r),this.refreshQuickCommandsList(e)})),n.addButton(a=>a.setButtonText("Remove").setClass("status-remove-button").setWarning().onClick(async()=>{await this.callbacks.onCustomStatusRemove(i),this.refreshQuickCommandsList(e)}))})}};var P=class{constructor(t,e,s){this.onTemplateToggle=async(t,e)=>{e?this.plugin.settings.enabledTemplates.includes(t)||this.plugin.settings.enabledTemplates.push(t):this.plugin.settings.enabledTemplates=this.plugin.settings.enabledTemplates.filter(s=>s!==t),await this.plugin.saveSettings()};this.onSettingChange=async(t,e)=>{this.plugin.settings[t]=e,await this.plugin.saveSettings()};this.onCustomStatusChange=async(t,e,s)=>{let i=this.plugin.settings.customStatuses[t];if(i){if(e==="name"){let n=i.name;i.name=s,n!==i.name&&(this.plugin.settings.statusColors[i.name]=this.plugin.settings.statusColors[n],delete this.plugin.settings.statusColors[n])}else e==="color"?this.plugin.settings.statusColors[i.name]=s:i[e]=s;await this.plugin.saveSettings()}};this.onCustomStatusRemove=async t=>{let e=this.plugin.settings.customStatuses[t];if(!e)return;this.plugin.settings.customStatuses.splice(t,1),delete this.plugin.settings.statusColors[e.name],await this.plugin.saveSettings();let s=document.querySelector(".custom-status-list");s&&this.ui.renderCustomStatuses(s,this.plugin.settings)};this.onCustomStatusAdd=async()=>{let t={name:`status${this.plugin.settings.customStatuses.length+1}`,icon:"\u2B50"};this.plugin.settings.customStatuses.push(t),this.plugin.settings.statusColors[t.name]="#ffffff",await this.plugin.saveSettings();let e=document.querySelector(".custom-status-list");e&&this.ui.renderCustomStatuses(e,this.plugin.settings)};this.app=t,this.plugin=e,this.statusService=s,this.ui=new H(this)}display(t){this.ui.render(t,this.plugin.settings)}};var R=class extends ot.PluginSettingTab{constructor(e,s,i){super(e,s);this.controller=new P(e,s,i)}display(){this.controller.display(this.containerEl)}};var h=require("obsidian");var v=require("obsidian"),I=class{constructor(t){this.statusService=t}createHeader(t,e,s){let i=t.createDiv({cls:"note-status-header"}),a=i.createDiv({cls:"note-status-search search-input-container"}).createDiv({cls:"search-input-wrapper"}),r=a.createEl("span",{cls:"search-input-icon"});(0,v.setIcon)(r,"search");let l=a.createEl("input",{type:"text",placeholder:"Search notes...",cls:"note-status-search-input search-input"}),u=a.createEl("span",{cls:"search-input-clear-button"});(0,v.setIcon)(u,"x"),l.addEventListener("input",()=>{s.onSearch(l.value.toLowerCase()),u.toggleClass("is-visible",!!l.value)}),u.addEventListener("click",()=>{l.value="",s.onSearch(""),u.toggleClass("is-visible",!1)});let c=i.createDiv({cls:"status-pane-actions-container"}),p=c.createEl("button",{type:"button",title:e?"Switch to Standard View":"Switch to Compact View",cls:"note-status-view-toggle clickable-icon"});(0,v.setIcon)(p,e?"layout":"table"),p.addEventListener("click",s.onToggleView);let g=c.createEl("button",{type:"button",title:"Refresh statuses",cls:"note-status-actions-refresh clickable-icon"});return(0,v.setIcon)(g,"refresh-cw"),g.addEventListener("click",s.onRefresh),i}renderStatusGroups(t,e,s){t.empty();let i=!1;return Object.entries(e).forEach(([n,a])=>{a.length>0&&!(n==="unknown"&&s.excludeUnknown)&&(this.renderGroup(t,n,a,s),i=!0)}),!!i}renderGroup(t,e,s,i){var et;let n=t.createDiv({cls:"note-status-group nav-folder"}),a=n.createDiv({cls:"nav-folder-title"}),r=(et=i.collapsedStatuses[e])!=null?et:!1,l=a.createDiv({cls:"note-status-collapse-indicator"});(0,v.setIcon)(l,r?"chevron-right":"chevron-down");let u=a.createDiv({cls:"nav-folder-title-content"}),c=this.statusService.getStatusIcon(e);u.createSpan({text:`${e} ${c} (${s.length})`,cls:`status-${e}`}),r&&n.addClass("note-status-is-collapsed"),a.addEventListener("click",K=>{K.preventDefault();let z=!n.hasClass("note-status-is-collapsed");n.toggleClass("note-status-is-collapsed",z),l.empty(),(0,v.setIcon)(l,z?"chevron-right":"chevron-down"),i.callbacks.onStatusToggle(e,z)});let p=n.createDiv({cls:"nav-folder-children"}),g=i.pagination.currentPage[e]||0,m=i.pagination.itemsPerPage,E=Math.ceil(s.length/m),tt=g*m,pt=Math.min(tt+m,s.length);s.slice(tt,pt).forEach(K=>{this.renderFileItem(p,K,e,i.isCompactView,i.callbacks)}),s.length>m&&this.addPagination(p,e,g,E,s.length,i.callbacks)}renderFileItem(t,e,s,i,n){let a=t.createDiv({cls:"nav-file"}),r=a.createDiv({cls:"nav-file-title"});if(!i){let l=r.createDiv({cls:"nav-file-icon"});(0,v.setIcon)(l,"file")}r.createSpan({text:e.basename,cls:"nav-file-title-content"}),r.createSpan({cls:`note-status-icon nav-file-tag status-${s}`,text:this.statusService.getStatusIcon(s)}),a.addEventListener("click",l=>{l.preventDefault(),n.onFileClick(e)}),a.addEventListener("contextmenu",l=>{l.preventDefault(),n.onContextMenu(l,e)})}addPagination(t,e,s,i,n,a){let r=t.createDiv({cls:"note-status-pagination"});s>0&&r.createEl("button",{text:"Previous",cls:"note-status-pagination-button"}).addEventListener("click",u=>{u.stopPropagation(),a.onPageChange(e,s-1)}),r.createSpan({text:`Page ${s+1} of ${i} (${n} notes)`,cls:"note-status-pagination-info"}),s<i-1&&r.createEl("button",{text:"Next",cls:"note-status-pagination-button"}).addEventListener("click",u=>{u.stopPropagation(),a.onPageChange(e,s+1)})}renderEmptyState(t,e,s,i){let n=t.createDiv({cls:"note-status-empty-indicator"});if(e){n.textContent=`No notes found matching "${e}"`;return}s&&(n.createDiv({text:"No notes with status found. Unassigned notes are currently hidden.",cls:"note-status-empty-message"}),n.createDiv({cls:"note-status-button-container"}).createEl("button",{text:"Show unassigned notes",cls:"note-status-show-unassigned-button"}).addEventListener("click",i))}createLoadingIndicator(t,e){let s=t.createDiv({cls:"note-status-loading"});return s.innerHTML=`<span>${e||"Loading notes..."}</span>`,s}};var B=require("obsidian");var S=class extends B.View{constructor(e,s){super(e);this.searchQuery="";this.paginationState={itemsPerPage:100,currentPage:{}};this.plugin=s,this.settings=s.settings,this.statusService=s.statusService,this.renderer=new I(this.statusService)}static async open(e){let s=e.workspace.getLeavesOfType("status-pane")[0];if(s){e.workspace.setActiveLeaf(s);return}let i=e.workspace.getLeftLeaf(!1);i&&await i.setViewState({type:"status-pane",active:!0})}getViewType(){return"status-pane"}getDisplayText(){return"Status pane"}getIcon(){return"tag"}async onOpen(){await this.setupPane()}onClose(){return this.containerEl.empty(),Promise.resolve()}async setupPane(){let{containerEl:e}=this;e.empty(),e.addClass("note-status-pane","nav-files-container"),e.toggleClass("note-status-compact-view",this.settings.compactView),this.renderer.createHeader(e,this.settings.compactView,{onSearch:n=>{this.paginationState={itemsPerPage:100,currentPage:{}},this.searchQuery=n,this.renderGroups(n)},onToggleView:()=>{this.settings.compactView=!this.settings.compactView,e.toggleClass("note-status-compact-view",this.settings.compactView),window.dispatchEvent(new CustomEvent("note-status:settings-changed")),this.renderGroups(this.searchQuery)},onRefresh:async()=>{await this.renderGroups(this.searchQuery),new B.Notice("Status pane refreshed")}});let s=e.createDiv({cls:"note-status-groups-container"}),i=this.renderer.createLoadingIndicator(s);setTimeout(async()=>{await this.renderGroups(""),i.remove()},10)}async renderGroups(e=""){let s=this.containerEl.querySelector(".note-status-groups-container");if(!s)return;e?(s.empty(),this.renderer.createLoadingIndicator(s,`Searching for "${e}"...`),await new Promise(a=>setTimeout(a,0))):s.empty();let i=this.getFilteredStatusGroups(e);s.empty(),this.renderer.renderStatusGroups(s,i,{excludeUnknown:this.settings.excludeUnknownStatus,isCompactView:this.settings.compactView,collapsedStatuses:this.settings.collapsedStatuses,pagination:this.paginationState,callbacks:{onFileClick:a=>{this.app.workspace.openLinkText(a.path,a.path,!0)},onStatusToggle:(a,r)=>{this.settings.collapsedStatuses[a]=r},onContextMenu:()=>{},onPageChange:(a,r)=>{this.paginationState.currentPage[a]=r,this.renderGroups(this.searchQuery)}}})||this.renderer.renderEmptyState(s,e,this.settings.excludeUnknownStatus,async()=>{this.settings.excludeUnknownStatus=!1,await this.plugin.saveSettings(),this.renderGroups(e)})}getFilteredStatusGroups(e=""){let s=this.statusService.groupFilesByStatus(e),i={};return Object.entries(s).forEach(([n,a])=>{a.length>0&&(i[n]=a)}),i}updateSettings(e){this.settings=e,this.containerEl.toggleClass("note-status-compact-view",e.compactView),this.renderGroups(this.searchQuery)}update(){}};var U=class{constructor(t,e,s,i,n){this.app=t,this.plugin=e,this.settings=s,this.statusService=i,this.statusDropdown=n}updateSettings(t){this.settings=t,this.unload(),this.registerCommands()}registerCommands(){this.plugin.addCommand({id:"open-status-pane",name:"Open status pane",callback:()=>S.open(this.app)}),this.plugin.addCommand({id:"change-status",name:"Change status of current note",checkCallback:t=>{let e=this.app.workspace.getActiveFile();return e?(t||this.statusDropdown.openStatusDropdown({files:[e]}),!0):!1}}),this.plugin.addCommand({id:"add-status",name:"Add status to current note",checkCallback:t=>{let e=this.app.workspace.getActiveFile();return e?(t||this.statusDropdown.openStatusDropdown({files:[e],mode:this.settings.useMultipleStatuses?"add":"replace"}),!0):!1}}),this.plugin.addCommand({id:"insert-status-metadata",name:"Insert status metadata",editorCheckCallback:(t,e,s)=>{if(!s.file)return!1;let i=this.statusService.getFileStatuses(s.file),n=i.length===1&&i[0]==="unknown";return!t&&n&&(this.statusService.insertStatusMetadataInEditor(e),new h.Notice("Status metadata inserted")),n}}),this.plugin.addCommand({id:"cycle-status",name:"Cycle to next status",checkCallback:t=>{let e=this.app.workspace.getActiveFile();return e?(t||this.cycleStatus(e),!0):!1}}),this.registerQuickStatusCommands(),this.plugin.addCommand({id:"clear-status",name:"Clear status (set to unknown)",checkCallback:t=>{let e=this.app.workspace.getActiveFile();return e?(t||(this.statusService.handleStatusChange({files:e,statuses:"unknown",operation:"set"}),new h.Notice("Status cleared")),!0):!1}}),this.plugin.addCommand({id:"copy-status",name:"Copy status from current note",checkCallback:t=>{let e=this.app.workspace.getActiveFile();if(!e)return!1;if(!t){let s=this.statusService.getFileStatuses(e);this.app.clipboard=s,new h.Notice(`Copied status: ${s.join(", ")}`)}return!0}}),this.plugin.addCommand({id:"paste-status",name:"Paste status to current note",checkCallback:t=>{let e=this.app.workspace.getActiveFile(),s=this.app.clipboard;return!e||!s||!Array.isArray(s)?!1:(t||(this.statusService.handleStatusChange({files:e,statuses:s,operation:"set"}),new h.Notice(`Pasted status: ${s.join(", ")}`)),!0)}}),this.plugin.addCommand({id:"toggle-multiple-statuses",name:"Toggle multiple statuses mode",callback:()=>{this.settings.useMultipleStatuses=!this.settings.useMultipleStatuses,this.plugin.saveSettings(),new h.Notice(`Multiple statuses mode ${this.settings.useMultipleStatuses?"enabled":"disabled"}`)}}),this.plugin.addCommand({id:"search-by-status",name:"Search notes by current status",checkCallback:t=>{var s;let e=this.app.workspace.getActiveFile();if(!e)return!1;if(!t){let i=this.statusService.getFileStatuses(e),n=`[${this.settings.tagPrefix}:"${i[0]}"]`;(s=this.app.internalPlugins.getPluginById("global-search"))==null||s.instance.openGlobalSearch(n)}return!0}})}registerQuickStatusCommands(){let t=this.settings.quickStatusCommands||[],e=this.statusService.getAllStatuses();t.forEach(s=>{e.find(n=>n.name===s)&&(this.plugin.addCommand({id:`set-status-${s}`,name:`Set status to ${s}`,checkCallback:n=>{let a=this.app.workspace.getActiveFile();return a?(n||(this.statusService.handleStatusChange({files:a,statuses:s,operation:"set"}),new h.Notice(`Status set to ${s}`)),!0):!1}}),this.settings.useMultipleStatuses&&this.plugin.addCommand({id:`toggle-status-${s}`,name:`Toggle status ${s}`,checkCallback:n=>{let a=this.app.workspace.getActiveFile();if(!a)return!1;if(!n){this.statusService.handleStatusChange({files:a,statuses:s,operation:"toggle"});let l=this.statusService.getFileStatuses(a).includes(s);new h.Notice(`Status ${s} ${l?"added":"removed"}`)}return!0}}))})}cycleStatus(t){let e=this.statusService.getAllStatuses().filter(a=>a.name!=="unknown").map(a=>a.name);if(e.length===0){new h.Notice("No statuses available");return}let i=this.statusService.getFileStatuses(t)[0],n=0;i!=="unknown"&&(n=(e.indexOf(i)+1)%e.length),this.statusService.handleStatusChange({files:t,statuses:e[n],operation:"set"}),new h.Notice(`Status changed to ${e[n]}`)}unload(){this.removeQuickStatusCommands()}removeQuickStatusCommands(){this.statusService.getAllStatuses().forEach(e=>{this.app.commands.removeCommand(`note-status:set-status-${e.name}`),this.app.commands.removeCommand(`note-status:toggle-status-${e.name}`)})}};var $=require("obsidian"),V=class{constructor(t){this.element=t,this.element.addClass("note-status-bar")}reset(){this.element.empty(),this.element.removeClass("left","hidden","auto-hide","visible"),this.element.addClass("note-status-bar")}hide(){this.element.addClass("hidden"),this.element.removeClass("visible")}show(){this.element.removeClass("hidden"),this.element.addClass("visible")}renderStatuses(t){t.length===1?this.renderSingleStatus(t[0].name,t[0].icon,t[0].tooltipText):this.renderMultipleStatuses(t)}renderSingleStatus(t,e,s){let i=this.element.createEl("span",{text:`Status: ${t}`,cls:`note-status-${t}`});(0,$.setTooltip)(i,s);let n=this.element.createEl("span",{text:e,cls:`note-status-icon status-${t}`});(0,$.setTooltip)(n,s)}renderMultipleStatuses(t){this.element.createEl("span",{text:"Statuses: ",cls:"note-status-label"});let e=this.element.createEl("span",{cls:"note-status-badges"});t.forEach(s=>this.createStatusBadge(e,s))}createStatusBadge(t,e){let s=t.createEl("span",{cls:`note-status-badge status-${e.name}`});(0,$.setTooltip)(s,e.tooltipText),s.createEl("span",{text:e.icon,cls:"note-status-badge-icon"}),s.createEl("span",{text:e.name,cls:"note-status-badge-text"})}destroy(){this.element.empty()}};var F=class{constructor(t,e,s){this.currentStatuses=["unknown"];this.view=new V(t),this.settings=e,this.statusService=s,this.update(["unknown"])}update(t){this.currentStatuses=t,this.render()}render(){if(this.view.reset(),!this.settings.showStatusBar){this.view.hide();return}this.settings.useMultipleStatuses?this.renderStatuses(this.currentStatuses):this.renderStatuses([this.currentStatuses[0]]),this.handleAutoHide()}renderStatuses(t){let e=t.map(s=>{let i=this.statusService.getAllStatuses().find(n=>n.name===s);return{name:s,icon:this.statusService.getStatusIcon(s),tooltipText:i!=null&&i.description?`${s} - ${i.description}`:s}});this.view.renderStatuses(e)}handleAutoHide(){let t=this.currentStatuses.length===1&&this.currentStatuses[0]==="unknown";this.settings.autoHideStatusBar&&t?this.view.hide():this.view.show()}updateSettings(t){this.settings=t,this.render()}unload(){this.view.destroy()}};var Z=require("obsidian");function rt(o){let{dropdownElement:t,targetEl:e,position:s}=o;s?ft(t,s.x,s.y):Ct(t,e)}function ft(o,t,e){o.addClass("note-status-popover-fixed"),o.style.setProperty("--pos-x-px",`${t}px`),o.style.setProperty("--pos-y-px",`${e}px`),setTimeout(()=>wt(o),0)}function wt(o){let t=o.getBoundingClientRect();t.right>window.innerWidth?(o.addClass("note-status-popover-right"),o.style.setProperty("--right-offset-px","10px")):o.removeClass("note-status-popover-right"),t.bottom>window.innerHeight?(o.addClass("note-status-popover-bottom"),o.style.setProperty("--bottom-offset-px","10px")):o.removeClass("note-status-popover-bottom");let e=window.innerHeight-t.top-20;o.style.setProperty("--max-height-px",`${e}px`)}function Ct(o,t){o.addClass("note-status-popover-fixed");let e=t.getBoundingClientRect();o.style.setProperty("--pos-y-px",`${e.bottom+5}px`),o.style.setProperty("--pos-x-px",`${e.left}px`),setTimeout(()=>Et(o,e),0)}function Et(o,t){let e=o.getBoundingClientRect();e.right>window.innerWidth?(o.addClass("note-status-popover-right"),o.style.setProperty("--right-offset-px",`${window.innerWidth-t.right}px`)):o.removeClass("note-status-popover-right"),e.bottom>window.innerHeight?(o.addClass("note-status-popover-bottom"),o.style.setProperty("--bottom-offset-px",`${window.innerHeight-t.top+5}px`)):o.removeClass("note-status-popover-bottom");let s=window.innerHeight-e.top-20;o.style.setProperty("--max-height-px",`${s}px`)}function lt(o){let t=document.createElement("div");return t.addClass("note-status-dummy-target"),t.style.setProperty("--pos-x-px",`${o.x}px`),t.style.setProperty("--pos-y-px",`${o.y}px`),document.body.appendChild(t),t}var C=require("obsidian");function ut(o){let{dropdownElement:t,settings:e,statusService:s,currentStatuses:i,targetFile:n,targetFiles:a,onRemoveStatus:r,onSelectStatus:l}=o;t.empty(),bt(t,a);let u=a.length>1?a:n;xt(t,i,s,u!=null?u:[],r);let c=It(t),p=t.createDiv({cls:"note-status-options-container"}),g=s.getAllStatuses().filter(E=>E.name!=="unknown"),m=(E="")=>{Ft({container:p,statuses:g,currentStatuses:i,settings:e,targetFiles:a,onSelectStatus:l,filter:E})};m(),c.addEventListener("input",()=>{m(c.value)}),setTimeout(()=>c.focus(),50)}function bt(o,t){let s=o.createDiv({cls:"note-status-popover-header"}).createDiv({cls:"note-status-popover-title"}),i=s.createDiv({cls:"note-status-popover-icon"});(0,C.setIcon)(i,"tag"),s.createSpan({text:"Note status",cls:"note-status-popover-label"}),t.length>1&&s.createSpan({text:` (${t.length} files)`,cls:"note-status-popover-count"})}function xt(o,t,e,s,i){let n=o.createDiv({cls:"note-status-popover-chips"});t.length===0||t.length===1&&t[0]==="unknown"?n.createDiv({cls:"note-status-empty-indicator",text:"No status assigned"}):yt(n,t,e,s,i)}function yt(o,t,e,s,i){t.forEach(n=>{if(n==="unknown")return;let a=e.getAllStatuses().find(r=>r.name===n);a&&kt(o,n,a,s,i)})}function kt(o,t,e,s,i){let n=o.createDiv({cls:`note-status-chip status-${t}`});n.createSpan({text:e.icon,cls:"note-status-chip-icon"}),n.createSpan({text:e.name,cls:"note-status-chip-text"}),Tt(n,t,e,s,i)}function Tt(o,t,e,s,i){let n=e.description?`${t} - ${e.description}`:t;(0,C.setTooltip)(o,n);let a=o.createDiv({cls:"note-status-chip-remove",attr:{"aria-label":`Remove ${t} status`,title:`Remove ${t} status`}});(0,C.setIcon)(a,"x"),a.addEventListener("click",async r=>{r.stopPropagation(),o.addClass("note-status-chip-removing"),setTimeout(async()=>{s&&await i(t,s)},150)})}function It(o){return o.createDiv({cls:"note-status-popover-search"}).createEl("input",{type:"text",placeholder:"Filter statuses...",cls:"note-status-popover-search-input"})}function Ft(o){let{container:t,statuses:e,currentStatuses:s,settings:i,targetFiles:n,onSelectStatus:a,filter:r=""}=o;t.empty();let l=r?e.filter(u=>u.name.toLowerCase().includes(r.toLowerCase())||u.icon.includes(r)):e;if(l.length===0){t.createDiv({cls:"note-status-empty-options",text:r?`No statuses match "${r}"`:"No statuses found"});return}l.forEach(u=>{Mt({container:t,status:u,isSelected:s.includes(u.name),settings:i,targetFiles:n,onSelectStatus:a})})}function Mt(o){let{container:t,status:e,isSelected:s,targetFiles:i,onSelectStatus:n}=o,a=t.createDiv({cls:`note-status-option ${s?"is-selected":""} status-${e.name}`});if(a.createSpan({text:e.icon,cls:"note-status-option-icon"}),a.createSpan({text:e.name,cls:"note-status-option-text"}),e.description&&(0,C.setTooltip)(a,`${e.name} - ${e.description}`),s){let r=a.createDiv({cls:"note-status-option-check"});(0,C.setIcon)(r,"check")}a.addEventListener("click",()=>{a.addClass("note-status-option-selecting"),setTimeout(async()=>{i.length>0&&await n(e.name,i)},150)})}function ct(o){let{clickOutsideHandler:t,escapeKeyHandler:e}=o;document.addEventListener("click",t),document.addEventListener("keydown",e)}var O=class{constructor({app:t,settings:e,statusService:s}){this.dropdownElement=null;this.currentStatuses=["unknown"];this.targetFile=null;this.targetFiles=[];this.animationDuration=220;this.isOpen=!1;this.onRemoveStatus=async()=>{};this.onSelectStatus=async()=>{};this.app=t,this.statusService=s,this.settings=e,this.clickOutsideHandler=this.handleClickOutside.bind(this),this.escapeKeyHandler=this.handleEscapeKey.bind(this)}setTargetFile(t){this.targetFile=t,this.targetFiles=t?[t]:[]}setTargetFiles(t){this.targetFiles=[...t],this.targetFile=t.length===1?t[0]:null}setOnRemoveStatusHandler(t){this.onRemoveStatus=t}setOnSelectStatusHandler(t){this.onSelectStatus=t}updateStatuses(t){this.currentStatuses=Array.isArray(t)?[...t]:[t],this.isOpen&&this.dropdownElement&&this.refreshDropdownContent()}updateSettings(t){this.settings=t,this.isOpen&&this.dropdownElement&&this.refreshDropdownContent()}toggle(t,e){this.isOpen?(this.close(),setTimeout(()=>{!this.isOpen&&!this.dropdownElement&&this.open(t,e)},50)):this.open(t,e)}open(t,e){if(this.isOpen||this.dropdownElement){this.close(),setTimeout(()=>this.actuallyOpen(t,e),10);return}this.actuallyOpen(t,e)}actuallyOpen(t,e){var s;this.isOpen=!0,this.createDropdownElement(),this.refreshDropdownContent(),rt({dropdownElement:this.dropdownElement,targetEl:t,position:e}),(s=this.dropdownElement)==null||s.addClass("note-status-popover-animate-in"),setTimeout(()=>{ct({clickOutsideHandler:this.clickOutsideHandler,escapeKeyHandler:this.escapeKeyHandler})},10)}createDropdownElement(){this.dropdownElement=document.createElement("div"),this.dropdownElement.addClass("note-status-popover","note-status-unified-dropdown"),document.body.appendChild(this.dropdownElement)}close(){!this.dropdownElement||!this.isOpen||(this.dropdownElement.addClass("note-status-popover-animate-out"),document.removeEventListener("click",this.clickOutsideHandler),document.removeEventListener("keydown",this.escapeKeyHandler),this.isOpen=!1,this.dropdownElement&&(this.dropdownElement.remove(),this.dropdownElement=null))}refreshDropdownContent(){this.dropdownElement&&ut({dropdownElement:this.dropdownElement,settings:this.settings,statusService:this.statusService,currentStatuses:this.currentStatuses,targetFile:this.targetFile,targetFiles:this.targetFiles,onRemoveStatus:this.onRemoveStatus,onSelectStatus:this.onSelectStatus})}handleClickOutside(t){this.dropdownElement&&!this.dropdownElement.contains(t.target)&&this.close()}handleEscapeKey(t){t.key==="Escape"&&this.close()}dispose(){this.close()}};var M=class{constructor(t,e,s){this.currentStatuses=["unknown"];this.app=t,this.settings=e,this.statusService=s;let i={app:t,settings:e,statusService:s};this.dropdownUI=new O(i),this.setupDropdownCallbacks()}setupDropdownCallbacks(){this.dropdownUI.setOnRemoveStatusHandler(async(t,e)=>{if(!e)return;let s=Array.isArray(e);await this.statusService.handleStatusChange({files:e,statuses:t,operation:"remove",showNotice:s})}),this.dropdownUI.setOnSelectStatusHandler(async(t,e)=>{if(Array.isArray(e)&&e.length>1){let i=e,a=i.filter(r=>this.statusService.getFileStatuses(r).includes(t)).length===i.length?"remove":this.settings.useMultipleStatuses?"add":"set";await this.statusService.handleStatusChange({files:e,statuses:t,isMultipleSelection:!0,operation:a})}else await this.statusService.handleStatusChange({files:e,statuses:t})})}update(t,e){this.currentStatuses=Array.isArray(t)?[...t]:[t],this.dropdownUI.updateStatuses(this.currentStatuses)}updateSettings(t){this.settings=t,this.dropdownUI.updateSettings(t)}getCursorPosition(t,e){try{let s=t.getCursor("head"),i=e.contentEl.querySelector(`.cm-line:nth-child(${s.line+1})`);if(i){let a=i.getBoundingClientRect();return{x:a.left+20,y:a.bottom+5}}let n=e.contentEl.querySelector(".cm-editor");if(n){let a=n.getBoundingClientRect();return{x:a.left+100,y:a.top+100}}}catch(s){console.error("Error getting position for dropdown:",s)}return{x:window.innerWidth/2,y:window.innerHeight/3}}openStatusDropdown(t){let e=this.app.workspace.getActiveFile(),s=t.files||(e?[e]:[]);if(!s.length){new Z.Notice("No files selected");return}if(!s.length||!s[0]){new Z.Notice("No files selected");return}if(this.dropdownUI.isOpen){this.resetDropdown();return}if(s.length===1){let n=s[0];this.dropdownUI.setTargetFile(n);let a=this.statusService.getFileStatuses(n);this.dropdownUI.updateStatuses(a)}else{this.dropdownUI.setTargetFiles(s);let n=this.findCommonStatuses(s);this.dropdownUI.updateStatuses(n)}this.positionAndOpenDropdown(t)}resetDropdown(){this.dropdownUI.close(),this.dropdownUI.setTargetFile(null)}positionAndOpenDropdown(t){if(t.editor&&t.view){let e=this.getCursorPosition(t.editor,t.view);this.openWithPosition(e);return}if(t.target){if(t.position)this.dropdownUI.open(t.target,t.position);else{let e=t.target.getBoundingClientRect();this.dropdownUI.open(t.target,{x:e.left,y:e.bottom+5})}return}if(t.position){this.openWithPosition(t.position);return}this.openWithPosition({x:window.innerWidth/2,y:window.innerHeight/3})}openWithPosition(t){let e=lt(t);this.dropdownUI.open(e,t),setTimeout(()=>{e.parentNode&&e.parentNode.removeChild(e)},100)}findCommonStatuses(t){return t.length===0?["unknown"]:this.statusService.getFileStatuses(t[0]).filter(s=>s!=="unknown"&&t.every(i=>this.statusService.getFileStatuses(i).includes(s)))}render(){}unload(){this.dropdownUI.dispose(),this.toolbarButton&&(this.toolbarButton.remove(),this.toolbarButton=void 0)}};var Q=require("obsidian"),W=class{constructor(t,e,s,i,n){this.app=t,this.settings=e,this.statusService=s,this.statusDropdown=i,this.explorerIntegration=n}updateSettings(t){this.settings=t}addStatusMenuItemToSingleFile(t,e,s){t.addItem(i=>i.setTitle("Change status").setIcon("tag").onClick(()=>s(e)))}addStatusMenuItemToBatch(t,e,s){t.addItem(i=>i.setTitle("Change status").setIcon("tag").onClick(()=>s(e)))}showForFiles(t,e){t.length!==0&&(t.length===1?this.showForSingleFile(t[0],e):this.showForMultipleFiles(t,e))}showForSingleFile(t,e){!(t instanceof Q.TFile)||t.extension!=="md"||this.statusDropdown.openStatusDropdown({position:e,files:[t]})}showForMultipleFiles(t,e){let s=new Q.Menu;s.addItem(i=>(i.setTitle(`Update ${t.length} files`).setDisabled(!0),i)),s.addItem(i=>i.setTitle("Manage statuses...").setIcon("tag").onClick(()=>{this.statusDropdown.openStatusDropdown({position:e,files:t})})),e?s.showAtPosition(e):s.showAtPosition({x:window.innerWidth/2,y:window.innerHeight/3})}};var q=class extends G.Plugin{async onload(){try{await this.loadSettings(),this.initializeServices(),this.registerViews(),this.initializeUI(),this.initializeIntegrations(),this.setupCustomEvents()}catch(e){console.error("Error loading Note Status plugin:",e),new G.Notice("Error loading Note Status plugin. Check console for details.")}}async loadSettings(){this.settings=Object.assign({},it,await this.loadData())}initializeServices(){this.statusService=new D(this.app,this.settings),this.styleService=new A(this.settings)}registerViews(){this.registerView("status-pane",e=>(this.statusPane=new S(e,this),this.statusPane)),this.addRibbonIcon("tag","Open status pane",()=>{this.openStatusPane()}),this.addSettingTab(new R(this.app,this,this.statusService))}initializeIntegrations(){this.explorerIntegration=new b(this.app,this.settings,this.statusService),this.toolbarIntegration=new y(this.app,this.settings,this.statusService,this.statusDropdown);let e=new W(this.app,this.settings,this.statusService,this.statusDropdown,this.explorerIntegration);this.fileContextMenuIntegration=new N(this.app,this.settings,this.statusService,this.explorerIntegration,e),this.editorIntegration=new x(this.app,this.settings,this.statusService,this.statusDropdown),this.commandIntegration=new U(this.app,this,this.settings,this.statusService,this.statusDropdown),this.metadataIntegration=new k(this.app,this.settings,this.statusService,this.explorerIntegration),this.workspaceIntegration=new T(this.app,this.settings,this.statusService,this.toolbarIntegration),this.fileContextMenuIntegration.registerFileContextMenuEvents(),this.editorIntegration.registerEditorMenus(),this.commandIntegration.registerCommands(),this.metadataIntegration.registerMetadataEvents(),this.workspaceIntegration.registerWorkspaceEvents()}setupCustomEvents(){this.boundHandleStatusChanged=this.handleStatusChanged.bind(this),window.addEventListener("note-status:status-changed",this.boundHandleStatusChanged)}initializeUI(){this.statusDropdown=new M(this.app,this.settings,this.statusService),this.statusBar=new F(this.addStatusBarItem(),this.settings,this.statusService),this.settings.showStatusIconsInExplorer&&setTimeout(()=>{this.explorerIntegration.updateAllFileExplorerIcons()},2e3)}handleStatusChanged(e){let{statuses:s,file:i}=e.detail;this.statusBar.update(s);let n=this.app.workspace.getActiveFile();(n==null?void 0:n.path)===i&&this.toolbarIntegration.updateStatusDisplay(s),this.statusDropdown.update(s);let a=this.app.workspace.getLeavesOfType("status-pane")[0];if(a!=null&&a.view&&a.view instanceof S&&a.view.update(),this.settings.showStatusIconsInExplorer&&i){let r=this.app.vault.getFileByPath(i);r&&this.explorerIntegration.updateFileExplorerIcons(r)}}async openStatusPane(){await S.open(this.app)}async saveSettings(){var e,s,i;await this.saveData(this.settings),this.statusService.updateSettings(this.settings),this.styleService.updateSettings(this.settings),this.explorerIntegration.updateSettings(this.settings),this.fileContextMenuIntegration.updateSettings(this.settings),this.editorIntegration.updateSettings(this.settings),(e=this.metadataIntegration)==null||e.updateSettings(this.settings),(s=this.commandIntegration)==null||s.updateSettings(this.settings),this.toolbarIntegration.updateSettings(this.settings),this.workspaceIntegration.updateSettings(this.settings),(i=this.statusPane)==null||i.updateSettings(this.settings),this.statusBar.updateSettings(this.settings),this.statusDropdown.updateSettings(this.settings)}onunload(){var e,s,i,n,a,r,l,u,c,p;this.boundHandleStatusChanged&&window.removeEventListener("note-status:status-changed",this.boundHandleStatusChanged),(e=this.explorerIntegration)==null||e.unload(),(s=this.toolbarIntegration)==null||s.unload(),(i=this.fileContextMenuIntegration)==null||i.unload(),(n=this.workspaceIntegration)==null||n.unload(),(a=this.metadataIntegration)==null||a.unload(),(r=this.editorIntegration)==null||r.unload(),(l=this.commandIntegration)==null||l.unload(),(u=this.styleService)==null||u.unload(),(c=this.statusBar)==null||c.unload(),(p=this.statusDropdown)==null||p.unload()}};

/* nosourcemap */