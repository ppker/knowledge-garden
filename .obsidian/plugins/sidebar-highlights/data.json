{
  "settingsVersion": "1.14.0",
  "highlightColor": "#ffd700",
  "sidebarPosition": "right",
  "highlights": {
    "🍀 花园导览/🧰 本库指南/Tutorials/∑ 本库 ACCESS 的文件夹入口汇总.md": [
      {
        "id": "8k6wu1o4c",
        "text": "固定文件夹，非增长式，所以不用dataview",
        "tags": [],
        "line": 46,
        "startOffset": 1034,
        "endOffset": 1061,
        "filePath": "🍀 花园导览/🧰 本库指南/Tutorials/∑ 本库 ACCESS 的文件夹入口汇总.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "固定文件夹，非增长式，所以不用dataview"
        ],
        "createdAt": 1752485549511,
        "isNativeComment": true
      },
      {
        "id": "jv3nmo2a1",
        "text": "非固定文件夹，随着聚焦的项目和领域的变动而变动，所以用可以用dataview来动态索引",
        "tags": [],
        "line": 61,
        "startOffset": 1220,
        "endOffset": 1267,
        "filePath": "🍀 花园导览/🧰 本库指南/Tutorials/∑ 本库 ACCESS 的文件夹入口汇总.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "非固定文件夹，随着聚焦的项目和领域的变动而变动，所以用可以用dataview来动态索引"
        ],
        "createdAt": 1752485549697,
        "isNativeComment": true
      }
    ],
    "🍀 花园导览/🏋 如何保持健康.md": [
      {
        "id": "noa9tvp5k",
        "text": "靠谱",
        "tags": [],
        "line": 16,
        "startOffset": 471,
        "endOffset": 477,
        "filePath": "🍀 花园导览/🏋 如何保持健康.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752313202490,
        "isNativeComment": false
      }
    ],
    "Spaces/4-Archive/ingtube/交接/Inbox/线上问题反馈群的常见问题定位和处理.md": [
      {
        "id": "ydo3p7jeg",
        "text": " 0 {\r\n\t\treturn nil, status.Error(codes.InvalidArgument, \"CpID is empty\")\r\n\t}\r\n\tif in.Source ",
        "tags": [],
        "line": 101,
        "startOffset": 2327,
        "endOffset": 2423,
        "filePath": "Spaces/4-Archive/ingtube/交接/Inbox/线上问题反馈群的常见问题定位和处理.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259701621,
        "isNativeComment": false
      }
    ],
    "Spaces/4-Archive/ingtube/交接/Inbox/向凡可提问的问题列表梳理和笔记.md": [
      {
        "id": "tcse8xfht",
        "text": "参考李飞的文档再扩充一下。",
        "tags": [],
        "line": 5,
        "startOffset": 119,
        "endOffset": 136,
        "filePath": "Spaces/4-Archive/ingtube/交接/Inbox/向凡可提问的问题列表梳理和笔记.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "参考李飞的文档再扩充一下。"
        ],
        "createdAt": 1752259701269,
        "isNativeComment": true
      }
    ],
    "Spaces/4-Archive/ingtube/交接/Inbox/前端新人文档.md": [
      {
        "id": "ytz8cah7j",
        "text": " 0) {\r\n      setTimeout(() => {\r\n        store.dispatch(\"updateLoading\", false);\r\n      }, 500);\r\n    }\r\n    if (\r\n      res.config.url ",
        "tags": [],
        "line": 254,
        "startOffset": 6321,
        "endOffset": 6461,
        "filePath": "Spaces/4-Archive/ingtube/交接/Inbox/前端新人文档.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259701451,
        "isNativeComment": false
      },
      {
        "id": "rxmnxly7o",
        "text": " 0) {\r\n        let error_description =\r\n          typeof res.data.error_description !",
        "tags": [],
        "line": 264,
        "startOffset": 6592,
        "endOffset": 6681,
        "filePath": "Spaces/4-Archive/ingtube/交接/Inbox/前端新人文档.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259701722,
        "isNativeComment": false
      },
      {
        "id": "dfrp84uoo",
        "text": " 200) {\r\n          resolve({ code: 200, result: url, name: file.name });\r\n        } else {\r\n          resolve({ code: 101, message: \"文件上传失败\" });\r\n        }\r\n      } catch (e) {\r\n        console.log(e);\r\n        resolve({ code: 101, message: \"文件上传失败\" });\r\n      }\r\n    } else {\r\n      resolve({ code: 101, message: \"获取ossToken失败\" });\r\n    }\r\n  });\r\n```\r\n\r\n**2 uploadSecretImg 方法，也位于 src/utils/upload.js，这里请求的是后端接口，主要用于杂货店开通上传营业执照等私密图片。**\r\n\r\n```\r\nconst uploadSecretImg = (file, type, size = 10) =>\r\n  new Promise(async (resolve) => {\r\n    const checkRes = check(file, type, size);\r\n\r\n    if (checkRes) {\r\n      resolve(checkRes);\r\n      return;\r\n    }\r\n\r\n    const form = new FormData();\r\n    const { operator_id, sub_sponsor_id, agency, user_id, sid } = getParams();\r\n    form.append(\"file\", file);\r\n    form.append(\"sid\", sid);\r\n    form.append(\"agency\", agency);\r\n    form.append(\"sub_sponsor_id\", sub_sponsor_id);\r\n    form.append(\"operator_id\", operator_id);\r\n    form.append(\"user_id\", user_id);\r\n\r\n    const config = {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"/sponsor/shop/wechat-pay/upload\",\r\n      form,\r\n      config\r\n    );\r\n\r\n    if (res.error_code ",
        "tags": [],
        "line": 441,
        "startOffset": 11316,
        "endOffset": 12551,
        "filePath": "Spaces/4-Archive/ingtube/交接/Inbox/前端新人文档.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259701446,
        "isNativeComment": false
      }
    ],
    "Spaces/4-Archive/ingtube/交接/Inbox/上线变更升级指导书 - 真人露脸.md": [
      {
        "id": "ypgvgyumu",
        "text": " 但可能可以动态映射？不需要提前创建字段。  \r\n ",
        "tags": [],
        "line": 48,
        "startOffset": 683,
        "endOffset": 713,
        "filePath": "Spaces/4-Archive/ingtube/交接/Inbox/上线变更升级指导书 - 真人露脸.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " 但可能可以动态映射？不需要提前创建字段。  \r\n "
        ],
        "createdAt": 1752259701799,
        "isNativeComment": true
      }
    ],
    "Spaces/4-Archive/ingtube/交接/Inbox/ack集群引入istio服务网格的技术调研.md": [
      {
        "id": "iow7tpl40",
        "text": "&mid=2247490205&idx=1&sn=e2304c4f33a34c1ac8f5eed067592193&exportkey=AYvEx%2FltBIEqreKzqAEz8ZI%3D&pass_ticket=2AkjZsRka9zXGFIEBfAptunkGJwm7voOQ5YcSqIY2rwOorRvRyQ4p4NEsGFa9OA3&wx_header=0)\r\n    - [火山引擎 Service Mesh 流量治理实践](https://mp.weixin.qq.com/s?__biz=MzkzMzE2ODg1MQ",
        "tags": [],
        "line": 94,
        "startOffset": 3540,
        "endOffset": 3812,
        "filePath": "Spaces/4-Archive/ingtube/交接/Inbox/ack集群引入istio服务网格的技术调研.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259701608,
        "isNativeComment": false
      }
    ],
    "Spaces/4-Archive/ingtube/交接/Inbox/Android新人文档.md": [
      {
        "id": "nfr8pj58j",
        "text": " null){\r\n         Gson gson = new Gson();\r\n     routerList = gson.fromJson(YTBaseApplication.getRouterJson(),\r\n                 new TypeToken<List<RouterBean>>(){}.getType());\r\n        }\r\n     return routerList;\r\n}\r\n/**\r\n通过路由表获取全路径\r\n*/\r\nprivate static String parseJsonFromGson(String router){\r\n    String routerPath = \"\";\r\n    List<RouterBean> routerList=YTBaseApplication.getRouterList();\r\n    for(RouterBean app:routerList){\r\n         if(app.getPageName().equals(router)){\r\n            if(app.getClassPath().isEmpty()){\r\n                return routerPath;\r\n             }\r\n             routerPath = app.getClassPath();\r\n             break;\r\n        }\r\n     }\r\n     return routerPath;\r\n}\r\n//通过反射进行获取页面跟路径进行页面跳转\r\nif(!routePath.isEmpty()) {\r\n   try {\r\n      Intent intent=new Intent(context,Class.forName(routePath));\r\n      if (bundle != null) {\r\n          intent.putExtras(bundle);\r\n      }\r\n     if (bundle != null && bundle.getInt(\"requestCode\", 0) != 0) {\r\n        ((Activity) context).startActivityForResult(intent, bundle.getInt(\"requestCode\", 0));\r\n      }else {\r\n         intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                    context.startActivity(intent);\r\n      }\r\n    } catch (Throwable e) {\r\n        e.printStackTrace();\r\n    }\r\n}\r\n```\r\n\r\n## **七、图片/视频上传 OSS**\r\n\r\nsdk 文档：[如何通过PutObject上传本地文件和二进制数组_对象存储-阿里云帮助中心](https://help.aliyun.com/document_detail/93939.html?spm=a2c4g.93866.0.0.26ef200cTBT4GL)\r\n\r\n1. 调用 oss 上传图片前需调用后端接口获取 aliyun oss token，获取上传权限\r\n2. 上传图片路径的命名规则是，userId/自定义功能文件夹名称，\r\n\r\neg:shareOrderData、evaluationdata、messages…\r\n\r\n1. 封装构造上传请求\r\n\r\n```\r\nfun uploadFile(fileName: String, filePath: String, remotePath: String, callBack: NewOssCallback) {\r\n        this.ossCallback = callBack\r\n        this.remotePath = \"${UserUtils.getUserInfo().userId}/${remotePath}\"\r\n        GlobalScope.launch {\r\n            val result = repository.getOSSToken(Empty)\r\n            if (result.isSuccess) {\r\n                result.data?.data?.let {\r\n                    catchException(\"Get Oss Params\") {\r\n                        ossParamsHandler(fileName,filePath,it)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun ossParamsHandler(fileName:String, filePath:String,ossParamsResponse: OssParamsResponse) {\r\n        Log.e(\"tag\",\"fileName = $fileName ossParamsResponse ${ossParamsResponse.access_key_id} ,${ossParamsResponse.access_key_secret} ,${ossParamsResponse.security_token}\")\r\n\r\n        if(ossParamsResponse.access_key_id.isNullOrEmpty() || ossParamsResponse.access_key_secret.isNullOrEmpty() ||ossParamsResponse.security_token.isNullOrEmpty()){\r\n            ossCallback?.onFailed(\"连接上传失败\",fileName)\r\n            return\r\n        }\r\n        val credentialProvider = OSSStsTokenCredentialProvider(ossParamsResponse.access_key_id, ossParamsResponse.access_key_secret, ossParamsResponse.security_token)\r\n        val conf = ClientConfiguration()\r\n        conf.connectionTimeout = 30 * 1000 // 连接超时，默认15秒\r\n        conf.socketTimeout = 30 * 1000 // socket超时，默认15秒\r\n        conf.maxConcurrentRequest = 9 // 最大并发请求书，默认5个\r\n        conf.maxErrorRetry = 2 // 失败后最大重试次数，默认2次\r\n\r\n        var oss = OSSClient(context, ossParamsResponse.endpoint, credentialProvider, conf)\r\n\r\n        val objectKey = \"$remotePath/$fileName\"\r\n        // 构造上传请求\r\n        val put = PutObjectRequest(ossParamsResponse.bucket_name, objectKey, filePath)\r\n        // 异步上传时可以设置进度回调\r\n        put.progressCallback = OSSProgressCallback<PutObjectRequest?> { request, currentSize, totalSize ->\r\n            Log.e(\"progress\",\"onProgressChanged size = $currentSize total $totalSize  \"+currentSize / (totalSize.toFloat()))\r\n            ossCallback?.onProgressChanged(currentSize / totalSize.toFloat(),fileName)\r\n        }\r\n\r\n        var task = oss.asyncPutObject(put,object :OSSCompletedCallback<PutObjectRequest, PutObjectResult>{\r\n            override fun onSuccess(p0: PutObjectRequest?, p1: PutObjectResult?) {\r\n                Log.e(\"progress\",\"onSuccess\")\r\n                ossCallback?.onSuccess(ossParamsResponse.cdn_url + \"/\" + objectKey,fileName)\r\n            }\r\n\r\n            override fun onFailure(p0: PutObjectRequest?, p1: ClientException?, p2: ServiceException?) {\r\n                Log.e(\"progress\",\"onFailed\")\r\n                ossCallback?.onFailed(\"网络出错啦\",fileName)\r\n            }\r\n        })\r\n        task?.let { taskMap.put(fileName,it) }\r\n    }\r\n```\r\n\r\n1. 获取上传回调结果\r\n\r\n```\r\ninterface NewOssCallback {\r\n     fun onSuccess(url: String,filePath :String)\r\n    fun onFailed(err: String,filePath :String){}\r\n    fun onProgressChanged(progress: Float,filePath :String){}\r\n}\r\n```\r\n\r\n1. 具体使用方式\r\n\r\n```\r\n@Inject\r\nlateinit var repository: OssRepository\r\nprivate lateinit var ossClient: NewOssClient\r\n\r\nprivate fun uploadCommissionVideo(filePath: String) {\r\n    fileName = \"ingtube-commission-$orderId-${System.currentTimeMillis()}.mp4\"\r\n    ossClient.uploadFile(fileName, filePath, \"commission\",object:NewOssClient.NewOssCallback{\r\n        override fun onSuccess(url: String, filePath: String) {\r\n            progressDialog.dismissImmediately()\r\n            val ossVideoUrl = \"https://$url\"\r\n            uploadSuccess = true\r\n            viewModel.uploadVideo(UploadVideoReq().apply{\r\n                orderId = this@ScriptDetailActivity.orderId\r\n                videoUrl = ossVideoUrl\r\n            })\r\n        }\r\n    })\r\n}\r\n```\r\n\r\n## **开发流程及分支管理**\r\n\r\n遵照 GitFlow 工作流，[详见文档](https://doc.weixin.qq.com/doc/w3_ACgALAY-AAo4PcCsydERB0vuzGSXN?scode=APgAxwdVAAcIMri4oZAH4Aiga-AHY)\r\n\r\n## **九、脚本打包相关配置和使用说明**\r\n\r\n打包脚本文件地址：exclusive->fastlane->Fastfile，文件内容时 ruby 语言\r\n\r\n打包脚步命令：测试包：fastlane Android test\r\n\r\n正式包：fastlane Android release 正式包需要加固（百度/360 都可，加固过的包需要重新签名）\r\n\r\n```\r\n#      判断打包类型\r\n      - name: Fastlane build test\r\n        if: github.event_name ",
        "tags": [],
        "line": 379,
        "startOffset": 11223,
        "endOffset": 16989,
        "filePath": "Spaces/4-Archive/ingtube/交接/Inbox/Android新人文档.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259701279,
        "isNativeComment": false
      },
      {
        "id": "ajowadi3a",
        "text": " 'workflow_dispatch' && inputs.buildType ",
        "tags": [],
        "line": 537,
        "startOffset": 17020,
        "endOffset": 17065,
        "filePath": "Spaces/4-Archive/ingtube/交接/Inbox/Android新人文档.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259701076,
        "isNativeComment": false
      },
      {
        "id": "za6qoqc6h",
        "text": " 'workflow_dispatch' && inputs.buildType ",
        "tags": [],
        "line": 541,
        "startOffset": 17194,
        "endOffset": 17239,
        "filePath": "Spaces/4-Archive/ingtube/交接/Inbox/Android新人文档.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259701250,
        "isNativeComment": false
      }
    ],
    "Spaces/4-Archive/Dataviews/本库的宏观统计数据.md": [
      {
        "id": "epyl1u9mt",
        "text": "0)\r\n//console.log(orphanedFiles)\r\n\r\n\r\ndv.paragraph(\"\\n\")\r\ndv.span(`",
        "tags": [],
        "line": 31,
        "startOffset": 1005,
        "endOffset": 1076,
        "filePath": "Spaces/4-Archive/Dataviews/本库的宏观统计数据.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259701034,
        "isNativeComment": false
      },
      {
        "id": "0tdbpp5uy",
        "text": " **${allFiles.file.outlinks.length}** 个`)\r\ndv.span(\"; \")\r\ndv.span(`",
        "tags": [],
        "line": 36,
        "startOffset": 1080,
        "endOffset": 1151,
        "filePath": "Spaces/4-Archive/Dataviews/本库的宏观统计数据.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259701109,
        "isNativeComment": false
      },
      {
        "id": "9ycvutfyy",
        "text": " **${unresolvedLinks.length}** 个`)\r\n\r\ndv.paragraph(\"\\n\")\r\ndv.span(`",
        "tags": [],
        "line": 38,
        "startOffset": 1154,
        "endOffset": 1225,
        "filePath": "Spaces/4-Archive/Dataviews/本库的宏观统计数据.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259701183,
        "isNativeComment": false
      },
      {
        "id": "ztrtn928c",
        "text": " **${allFiles.file.inlinks.length}** 个`)\r\ndv.span(\"; \")\r\ndv.span(`",
        "tags": [],
        "line": 41,
        "startOffset": 1229,
        "endOffset": 1299,
        "filePath": "Spaces/4-Archive/Dataviews/本库的宏观统计数据.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259701258,
        "isNativeComment": false
      },
      {
        "id": "xwnlbngor",
        "text": " **${orphanedFiles.length}** 个`)\r\n\r\n\r\nlet mocFiles = dv.pages(\"#索引笔记\")\r\nlet tocFiles = dv.pages(\"#目录笔记\")\r\n\r\ndv.paragraph(`",
        "tags": [],
        "line": 43,
        "startOffset": 1303,
        "endOffset": 1429,
        "filePath": "Spaces/4-Archive/Dataviews/本库的宏观统计数据.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259701332,
        "isNativeComment": false
      },
      {
        "id": "zm2zna6h2",
        "text": " **${tocFiles.length}** 个`)\r\n\r\nlet ankiFiles = dv.pages(\"#复习回顾\")\r\nlet todoFiles = dv.pages(\"#待办\")\r\n\r\ndv.paragraph(`",
        "tags": [],
        "line": 49,
        "startOffset": 1469,
        "endOffset": 1588,
        "filePath": "Spaces/4-Archive/Dataviews/本库的宏观统计数据.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259701498,
        "isNativeComment": false
      }
    ],
    "Spaces/2-Area/运动健康/中国居民膳食指南.md": [
      {
        "id": "pzmhdbhkg",
        "text": "美国膳食指南甚至推荐<2g，个人血压偏高，所以盐也是能低就更低一些",
        "tags": [],
        "line": 24,
        "startOffset": 435,
        "endOffset": 472,
        "filePath": "Spaces/2-Area/运动健康/中国居民膳食指南.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "美国膳食指南甚至推荐<2g，个人血压偏高，所以盐也是能低就更低一些"
        ],
        "createdAt": 1752313694592,
        "isNativeComment": true
      }
    ],
    "Spaces/2-Area/知识管理/预览obsidian主题的markdown语法效果.md": [
      {
        "id": "rmunpc03k",
        "text": "高亮",
        "tags": [],
        "line": 21,
        "startOffset": 163,
        "endOffset": 169,
        "filePath": "Spaces/2-Area/知识管理/预览obsidian主题的markdown语法效果.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752157880016,
        "isNativeComment": false
      }
    ],
    "Spaces/2-Area/知识管理/卡片笔记.md": [
      {
        "id": "gurwy71h8",
        "text": "&mid=2653543495&idx=1&sn=9def259a48536c9c4eb59e1d597742ae&chksm=f389b690c4fe3f86fb8bc2be75eca52635b359db98c2884105c245fa06f9ab6fd7baf9327092&scene=90&subscene=93&sessionid=1661886554&clicktime=1661886574&enterid=1661886574&ascene=56&fasttmpl_type=0&fasttmpl_fullversion=6307920-zh_CN-zip&fasttmpl_flag=0&realreporttime=1661886574649&devicetype=android-29&version=28001bb2&nettype=WIFI&abtest_cookie=AAACAA",
        "tags": [],
        "line": 26,
        "startOffset": 511,
        "endOffset": 920,
        "filePath": "Spaces/2-Area/知识管理/卡片笔记.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259701006,
        "isNativeComment": false
      }
    ],
    "Spaces/1-Project/下半年看看新机会/∑ 个人简历.md": [
      {
        "id": "7oyv5nwea",
        "text": "\r\n[[简历草稿 2025]]\r\n[[面试相关文章]]\r\n[[面试自我介绍和常见问题回答]]\r\n",
        "tags": [],
        "line": 8,
        "startOffset": 96,
        "endOffset": 148,
        "filePath": "Spaces/1-Project/下半年看看新机会/∑ 个人简历.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "\r\n[[简历草稿 2025]]\r\n[[面试相关文章]]\r\n[[面试自我介绍和常见问题回答]]\r\n"
        ],
        "createdAt": 1753094051188,
        "isNativeComment": true
      },
      {
        "id": "s1qe2640b",
        "text": "\r\n[[🔡STAR]]  \r\n角色 - 简单描述情景和任务 - 展开技术化语言行动和结果 ",
        "tags": [],
        "line": 77,
        "startOffset": 2025,
        "endOffset": 2075,
        "filePath": "Spaces/1-Project/下半年看看新机会/∑ 个人简历.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "\r\n[[🔡STAR]]  \r\n角色 - 简单描述情景和任务 - 展开技术化语言行动和结果 "
        ],
        "createdAt": 1753094051117,
        "isNativeComment": true
      }
    ],
    "Spaces/1-Project/golang与后端/Go语言复习大纲/4-函数.md": [
      {
        "id": "kp245fh6s",
        "text": " 0 {\n        return 0, errors.New(\"division by zero\")\n    }\n    return a / b, nil\n}\n\n// 调用\nresult, err := divide(10, 2)\nif err != nil {\n    // handle error\n}\n```\n\n### 3. 命名返回值\n\n函数的返回值可以被命名。当返回值被命名后，它们就像在函数第一行声明的变量一样。\n\n- **优点**:\n\t- 可以使代码更清晰，相当于文档。\n\t- 在函数体内部，可以直接对这些变量进行赋值。\n\t- 一个不带参数的 `return` 语句会自动返回这些已命名的返回值。\n\n```go\nfunc calculate(a, b int) (sum int, product int) {\n    sum = a + b\n    product = a * b\n    return // 自动返回 sum 和 product\n}\n\n// 调用\ns, p := calculate(5, 3) // s=8, p=15\n```\n**注意**: 命名返回值在短函数中可以提高可读性，但在长函数中可能会导致代码不清晰，应谨慎使用。\n\n### 4. 可变参数 (Variadic Functions)\n\n函数可以接受不定数量的参数，这些参数被称为可变参数。\n\n- **语法**: 在参数类型前加上 `...`。\n- 在函数内部，这个可变参数是一个相应类型的切片（Slice）。\n\n```go\nfunc sum(numbers ...int) int {\n    total := 0\n    for _, num := range numbers {\n        total += num\n    }\n    return total\n}\n\n// 调用\nsum(1, 2)\nsum(1, 2, 3, 4)\n\n// 如果已有切片，可以这样传递\nnums := []int{5, 6, 7}\nsum(nums...)\n```\n\n### 5. 函数作为值 (First-Class Citizens)\n\n在 Go 中，函数是一等公民，这意味着它们可以像任何其他值一样被对待：\n\n- 可以被赋值给变量。\n- 可以作为参数传递给其他函数。\n- 可以作为其他函数的返回值。\n\n```go\n// 1. 赋值给变量\naddFunc := func(a, b int) int {\n    return a + b\n}\nfmt.Println(addFunc(3, 4))\n\n// 2. 作为参数\nfunc apply(fn func(int, int) int, a, b int) int {\n    return fn(a, b)\n}\napply(addFunc, 5, 6)\n\n// 3. 作为返回值\nfunc getMathFunction(op string) func(int, int) int {\n    if op ",
        "tags": [],
        "line": 41,
        "startOffset": 548,
        "endOffset": 1832,
        "filePath": "Spaces/1-Project/golang与后端/Go语言复习大纲/4-函数.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1751785825675,
        "isNativeComment": false
      }
    ],
    "Spaces/1-Project/2025年ack和k8s学习回顾/集群迁移操作手册.md": [
      {
        "id": "50wsqii9d",
        "text": " \"task\" ]]; then\r\n          continue\r\n        fi\r\n        kubectl apply -f $file -n dev\r\n    \t  \r\n      done\r\n    ```\r\n\r\n\t等待所有 pod ready，再启动\r\n\r\n\t```bash\r\n    for file in backend/app/*.{deploy,sts}.yaml; do\r\n        # 处理task\r\n        if [[ \"$(yq '.metadata.labels.ingtube/type' $file)\" ",
        "tags": [],
        "line": 565,
        "startOffset": 16655,
        "endOffset": 16944,
        "filePath": "Spaces/1-Project/2025年ack和k8s学习回顾/集群迁移操作手册.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259700993,
        "isNativeComment": false
      }
    ],
    "Spaces/1-Project/2025年ack和k8s学习回顾/集群上线的脚本备份.md": [
      {
        "id": "x4w65og4y",
        "text": " \"task\" ]]; then\r\n\r\ncontinue\r\n\r\nfi\r\n\r\nkubectl apply -f $file -n $namespace\r\n\r\ndone\r\n\r\n  \r\n\r\nkubectl -n $namespace get deploy -o name | xargs -n1 -t kubectl -n $namespace rollout status\r\n\r\nkubectl -n $namespace get sts -o name | xargs -n1 -t kubectl -n $namespace rollout status\r\n\r\n  \r\n\r\nfor file in backend/app/*.{deploy,sts}.yaml; do\r\n\r\n# 处理task\r\n\r\nif [[ \"$(yq '.metadata.labels.ingtube/type' $file)\" ",
        "tags": [],
        "line": 205,
        "startOffset": 3054,
        "endOffset": 3460,
        "filePath": "Spaces/1-Project/2025年ack和k8s学习回顾/集群上线的脚本备份.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259700392,
        "isNativeComment": false
      }
    ],
    "Sources/WuCaiSync /2024/06/wucai-一篇文章让你透彻认识 Mac 应用切换和窗口切换的逻辑-H868579.md": [
      {
        "id": "ikj7h25tj",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 333,
        "endOffset": 365,
        "filePath": "Sources/WuCaiSync /2024/06/wucai-一篇文章让你透彻认识 Mac 应用切换和窗口切换的逻辑-H868579.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142141,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/05/wucai-真人露脸的需求开发-H85AHCK.md": [
      {
        "id": "tjgune2fj",
        "text": "█  ",
        "tags": [],
        "line": 23,
        "startOffset": 329,
        "endOffset": 361,
        "filePath": "Sources/WuCaiSync /2024/05/wucai-真人露脸的需求开发-H85AHCK.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142148,
        "isNativeComment": false,
        "color": "#a6ffe9"
      },
      {
        "id": "k4pbhlw1a",
        "text": "█  ",
        "tags": [],
        "line": 28,
        "startOffset": 399,
        "endOffset": 431,
        "filePath": "Sources/WuCaiSync /2024/05/wucai-真人露脸的需求开发-H85AHCK.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142218,
        "isNativeComment": false,
        "color": "#ffc7ba"
      }
    ],
    "Sources/WuCaiSync /2024/05/wucai-所谓思考, 即做三件事 1. 抽象成概念(分层级) 2. - 即刻App-H8CFCM3.md": [
      {
        "id": "8rsww9aav",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 420,
        "endOffset": 452,
        "filePath": "Sources/WuCaiSync /2024/05/wucai-所谓思考, 即做三件事 1. 抽象成概念(分层级) 2. - 即刻App-H8CFCM3.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142196,
        "isNativeComment": false,
        "color": "#a6ffe9"
      }
    ],
    "Sources/WuCaiSync /2024/05/wucai-一个反常识的观点：重要紧急四象限最关键的是不重要不紧急 - 即刻App-H8CAHEK.md": [
      {
        "id": "mp5594ruv",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 363,
        "endOffset": 395,
        "filePath": "Sources/WuCaiSync /2024/05/wucai-一个反常识的观点：重要紧急四象限最关键的是不重要不紧急 - 即刻App-H8CAHEK.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142167,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/05/wucai-Android studio 连接各种模拟器_安卓如何连接多个模拟器-CSDN博客-H8CKKHF.md": [
      {
        "id": "ipkqlsvr8",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 373,
        "endOffset": 405,
        "filePath": "Sources/WuCaiSync /2024/05/wucai-Android studio 连接各种模拟器_安卓如何连接多个模拟器-CSDN博客-H8CKKHF.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142209,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/04/wucai-计算属性和侦听器 — Vue.js-H85C92B.md": [
      {
        "id": "rbck62z6s",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 314,
        "endOffset": 346,
        "filePath": "Sources/WuCaiSync /2024/04/wucai-计算属性和侦听器 — Vue.js-H85C92B.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142061,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/04/wucai-接了个私活分享下我是如何从 0 到 1 交付项目的 - V2EX-H8FBB8M.md": [
      {
        "id": "0y79g0xeh",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 326,
        "endOffset": 358,
        "filePath": "Sources/WuCaiSync /2024/04/wucai-接了个私活分享下我是如何从 0 到 1 交付项目的 - V2EX-H8FBB8M.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142076,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/04/wucai-【收费服务】大侠阿木远程刷机救砖ROOT9008MSMdownloadFlashToolMagisk面具KernelSU - 一加全能盒子  工具箱-H8FD5AE.md": [
      {
        "id": "w5ns7l2da",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 455,
        "endOffset": 487,
        "filePath": "Sources/WuCaiSync /2024/04/wucai-【收费服务】大侠阿木远程刷机救砖ROOT9008MSMdownloadFlashToolMagisk面具KernelSU - 一加全能盒子  工具箱-H8FD5AE.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142119,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/03/wucai-Models - OpenAI API-H8DF6AD.md": [
      {
        "id": "rm1bn3j96",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 342,
        "endOffset": 374,
        "filePath": "Sources/WuCaiSync /2024/03/wucai-Models - OpenAI API-H8DF6AD.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142225,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/03/wucai-巨量千川全域推广产品手册 - 巨量千川帮助和规则中心-H8DAHA5.md": [
      {
        "id": "0zp6tbljm",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 524,
        "endOffset": 556,
        "filePath": "Sources/WuCaiSync /2024/03/wucai-巨量千川全域推广产品手册 - 巨量千川帮助和规则中心-H8DAHA5.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142278,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/03/wucai-陈财猫 写Prompt之所以需要know how有两个原因 1. Prompt是对具体业务的抽象与归纳 将业务抽象出来其实比单纯熟悉业务难度更大要求更高因为它需要更高层次上的把握和表达 2.你必须有能力判断在该领域“什么样的东西-H8D35M7.md": [
      {
        "id": "sm35440w2",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 530,
        "endOffset": 562,
        "filePath": "Sources/WuCaiSync /2024/03/wucai-陈财猫 写Prompt之所以需要know how有两个原因 1. Prompt是对具体业务的抽象与归纳 将业务抽象出来其实比单纯熟悉业务难度更大要求更高因为它需要更高层次上的把握和表达 2.你必须有能力判断在该领域“什么样的东西-H8D35M7.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142238,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/03/wucai-陈财猫 写Prompt之所以需要know how有两个原因 1. Prompt是对具体业务的抽象与归纳 将业务抽象出来其实比单纯熟悉业务难度更大要求更高因为它需要更高层次上的把握和表达 2.你必须有能力.md": [
      {
        "id": "gv1uw2xou",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 530,
        "endOffset": 562,
        "filePath": "Sources/WuCaiSync /2024/03/wucai-陈财猫 写Prompt之所以需要know how有两个原因 1. Prompt是对具体业务的抽象与归纳 将业务抽象出来其实比单纯熟悉业务难度更大要求更高因为它需要更高层次上的把握和表达 2.你必须有能力.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142234,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/03/wucai-祖传“屎山代码”终于有解了GitHub Copilot Chat下个月全面上线聊聊天就能看懂代码捉Bug-36氪-H89FB75.md": [
      {
        "id": "17tf6tx2u",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 381,
        "endOffset": 413,
        "filePath": "Sources/WuCaiSync /2024/03/wucai-祖传“屎山代码”终于有解了GitHub Copilot Chat下个月全面上线聊聊天就能看懂代码捉Bug-36氪-H89FB75.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142212,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/03/wucai-深度  Notion创始人最新深度分享：AI如何重塑生产力-H8DHMDC.md": [
      {
        "id": "o2cabkuh3",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 351,
        "endOffset": 383,
        "filePath": "Sources/WuCaiSync /2024/03/wucai-深度  Notion创始人最新深度分享：AI如何重塑生产力-H8DHMDC.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142123,
        "isNativeComment": false,
        "color": "#ffff83"
      },
      {
        "id": "s7draof34",
        "text": "█  ",
        "tags": [],
        "line": 26,
        "startOffset": 1052,
        "endOffset": 1084,
        "filePath": "Sources/WuCaiSync /2024/03/wucai-深度  Notion创始人最新深度分享：AI如何重塑生产力-H8DHMDC.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141824,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/03/wucai-朱啸虎讲了一个中国现实主义AIGC故事-H8DM79F.md": [
      {
        "id": "mm07lw8ov",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 321,
        "endOffset": 353,
        "filePath": "Sources/WuCaiSync /2024/03/wucai-朱啸虎讲了一个中国现实主义AIGC故事-H8DM79F.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142148,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/03/wucai-如何打造一个学习型组织-H8DA58E.md": [
      {
        "id": "02zq97v50",
        "text": "█ ",
        "tags": [],
        "line": 24,
        "startOffset": 360,
        "endOffset": 391,
        "filePath": "Sources/WuCaiSync /2024/03/wucai-如何打造一个学习型组织-H8DA58E.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1747345025491,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/03/wucai-多代理模式  Coze --- Multi-agent mode  Coze-H8DHM9A.md": [
      {
        "id": "airn8luno",
        "text": "█  ",
        "tags": [],
        "line": 25,
        "startOffset": 353,
        "endOffset": 385,
        "filePath": "Sources/WuCaiSync /2024/03/wucai-多代理模式  Coze --- Multi-agent mode  Coze-H8DHM9A.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1747345025437,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/03/wucai-功能概述  Coze --- Function overview  Coze-H8DHMFB.md": [
      {
        "id": "mg1dwe9n6",
        "text": "█  ",
        "tags": [],
        "line": 25,
        "startOffset": 360,
        "endOffset": 392,
        "filePath": "Sources/WuCaiSync /2024/03/wucai-功能概述  Coze --- Function overview  Coze-H8DHMFB.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1747345025483,
        "isNativeComment": false,
        "color": "#ffff83"
      },
      {
        "id": "8pehagqoj",
        "text": "█  ",
        "tags": [],
        "line": 28,
        "startOffset": 543,
        "endOffset": 575,
        "filePath": "Sources/WuCaiSync /2024/03/wucai-功能概述  Coze --- Function overview  Coze-H8DHMFB.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1747345025666,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/03/wucai-亚马逊创始人贝索斯： 为什么我开会不用PPT_杭州网-H89CC82.md": [
      {
        "id": "ugpds42n0",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 363,
        "endOffset": 395,
        "filePath": "Sources/WuCaiSync /2024/03/wucai-亚马逊创始人贝索斯： 为什么我开会不用PPT_杭州网-H89CC82.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142161,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/03/wucai-coze的尴尬之处在于： 1.对于小白来说有门槛（即使coz - 即刻App-H89C59F.md": [
      {
        "id": "n7pj12y1z",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 424,
        "endOffset": 456,
        "filePath": "Sources/WuCaiSync /2024/03/wucai-coze的尴尬之处在于： 1.对于小白来说有门槛（即使coz - 即刻App-H89C59F.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142267,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/02/wucai-李继刚 笔记的技巧： 原子问题笔记 ━━━━━━━━━━━━━━ Emacs 圈有一位大佬叫李杀他在博客中把 Emacs 中的很多常见概念和问题都单独形成一篇文章 文章很短基本就是「什么是 X」「如何配置 X」之类的内容 当对-H8D5M5E.md": [
      {
        "id": "gwq1sjm3g",
        "text": "█ ",
        "tags": [],
        "line": 24,
        "startOffset": 584,
        "endOffset": 615,
        "filePath": "Sources/WuCaiSync /2024/02/wucai-李继刚 笔记的技巧： 原子问题笔记 ━━━━━━━━━━━━━━ Emacs 圈有一位大佬叫李杀他在博客中把 Emacs 中的很多常见概念和问题都单独形成一篇文章 文章很短基本就是「什么是 X」「如何配置 X」之类的内容 当对-H8D5M5E.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142350,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/02/wucai-现阶段 AI 的价值和盈利方向  宝玉的分享-H8D5MED.md": [
      {
        "id": "67ifi2qcf",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 338,
        "endOffset": 370,
        "filePath": "Sources/WuCaiSync /2024/02/wucai-现阶段 AI 的价值和盈利方向  宝玉的分享-H8D5MED.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142126,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/02/wucai-李继刚 笔记的技巧： 原子问题笔记 ━━━━━━━━━━━━━━ Emacs 圈有一位大佬叫李杀他在博客中把 Emacs 中的很多常见概念和问题都单独形成一篇文章 文章很短基本就是「什么是.md": [
      {
        "id": "mb5yd90rd",
        "text": "█ ",
        "tags": [],
        "line": 24,
        "startOffset": 584,
        "endOffset": 615,
        "filePath": "Sources/WuCaiSync /2024/02/wucai-李继刚 笔记的技巧： 原子问题笔记 ━━━━━━━━━━━━━━ Emacs 圈有一位大佬叫李杀他在博客中把 Emacs 中的很多常见概念和问题都单独形成一篇文章 文章很短基本就是「什么是.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142346,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/02/wucai-怎么浏览器打开图片的url默认是下载 - 知乎-H8DCM9A.md": [
      {
        "id": "v3k0z2wqn",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 319,
        "endOffset": 351,
        "filePath": "Sources/WuCaiSync /2024/02/wucai-怎么浏览器打开图片的url默认是下载 - 知乎-H8DCM9A.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142130,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/02/wucai-周鸿祎×傅盛：共话AI大模型  Redian News-H877222.md": [
      {
        "id": "lfx2i9bma",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 321,
        "endOffset": 353,
        "filePath": "Sources/WuCaiSync /2024/02/wucai-周鸿祎×傅盛：共话AI大模型  Redian News-H877222.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142144,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/02/wucai-关于本站  Tangly博客-H8DCHH9.md": [
      {
        "id": "5hrzknja5",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 306,
        "endOffset": 338,
        "filePath": "Sources/WuCaiSync /2024/02/wucai-关于本站  Tangly博客-H8DCHH9.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142035,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/02/wucai-傅盛：用大模型做小工具_用户_变化_技术-H87722K.md": [
      {
        "id": "55cvnx9fs",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 313,
        "endOffset": 345,
        "filePath": "Sources/WuCaiSync /2024/02/wucai-傅盛：用大模型做小工具_用户_变化_技术-H87722K.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142035,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/02/wucai-供应链优化的大型语言模型 --- [2307.03875] Large Language Models for Supply Chain Optimization-H873KK2.md": [
      {
        "id": "jodtdd3um",
        "text": "█  ",
        "tags": [],
        "line": 25,
        "startOffset": 485,
        "endOffset": 517,
        "filePath": "Sources/WuCaiSync /2024/02/wucai-供应链优化的大型语言模型 --- [2307.03875] Large Language Models for Supply Chain Optimization-H873KK2.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1747345025739,
        "isNativeComment": false,
        "color": "#ffff83"
      },
      {
        "id": "2cooxr68r",
        "text": "█  ",
        "tags": [],
        "line": 28,
        "startOffset": 1416,
        "endOffset": 1448,
        "filePath": "Sources/WuCaiSync /2024/02/wucai-供应链优化的大型语言模型 --- [2307.03875] Large Language Models for Supply Chain Optimization-H873KK2.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1747345025670,
        "isNativeComment": false,
        "color": "#ffff83"
      },
      {
        "id": "mrl1nm4gr",
        "text": "█  ",
        "tags": [],
        "line": 30,
        "startOffset": 1503,
        "endOffset": 1535,
        "filePath": "Sources/WuCaiSync /2024/02/wucai-供应链优化的大型语言模型 --- [2307.03875] Large Language Models for Supply Chain Optimization-H873KK2.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1747345025757,
        "isNativeComment": false,
        "color": "#ffff83"
      },
      {
        "id": "p708zznk3",
        "text": "█  ",
        "tags": [],
        "line": 33,
        "startOffset": 1618,
        "endOffset": 1650,
        "filePath": "Sources/WuCaiSync /2024/02/wucai-供应链优化的大型语言模型 --- [2307.03875] Large Language Models for Supply Chain Optimization-H873KK2.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1747345025872,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/02/wucai-ollamaollama Get up and running with Llama 2, Mistral, Gemma, and other large language models.-H8D6E5H.md": [
      {
        "id": "w2cojit6r",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 461,
        "endOffset": 493,
        "filePath": "Sources/WuCaiSync /2024/02/wucai-ollamaollama Get up and running with Llama 2, Mistral, Gemma, and other large language models.-H8D6E5H.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142351,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/02/wucai-Sora-H87A8AK.md": [
      {
        "id": "ofewgkalz",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 274,
        "endOffset": 306,
        "filePath": "Sources/WuCaiSync /2024/02/wucai-Sora-H87A8AK.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142179,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/02/wucai-OpenAI 如何优化 LLM 的效果  Breezedeus.com-H87BB6M.md": [
      {
        "id": "3kg7tmix6",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 374,
        "endOffset": 406,
        "filePath": "Sources/WuCaiSync /2024/02/wucai-OpenAI 如何优化 LLM 的效果  Breezedeus.com-H87BB6M.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142268,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/02/wucai-2023年最佳的Python库  Tryolabs --- Top Python libraries of 2023  Tryolabs-H87MC22.md": [
      {
        "id": "kyuwtp0po",
        "text": "█  ",
        "tags": [],
        "line": 25,
        "startOffset": 462,
        "endOffset": 494,
        "filePath": "Sources/WuCaiSync /2024/02/wucai-2023年最佳的Python库  Tryolabs --- Top Python libraries of 2023  Tryolabs-H87MC22.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142146,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/02/wucai-10个具有代表性的AI-Agents将如何改变互联网重塑Web3-H873859.md": [
      {
        "id": "5pq4ue82w",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 369,
        "endOffset": 401,
        "filePath": "Sources/WuCaiSync /2024/02/wucai-10个具有代表性的AI-Agents将如何改变互联网重塑Web3-H873859.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142043,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/01/wucai-（3）索引 - ArcBrowser --- (3) index - ArcBrowser-H88K9BA.md": [
      {
        "id": "ofoaux3fi",
        "text": "█  ",
        "tags": [],
        "line": 25,
        "startOffset": 397,
        "endOffset": 429,
        "filePath": "Sources/WuCaiSync /2024/01/wucai-（3）索引 - ArcBrowser --- (3) index - ArcBrowser-H88K9BA.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142055,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/01/wucai-Vision - OpenAI API-H87DH3E.md": [
      {
        "id": "8i9alzqtg",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 332,
        "endOffset": 364,
        "filePath": "Sources/WuCaiSync /2024/01/wucai-Vision - OpenAI API-H87DH3E.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142246,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/01/wucai-wsl 检测到 localhost 代理配置但未镜像到 WSLNAT 模式下的 WSL 不支持 localhost 代理 · Issue 10753 · microsoftWSL-H888HKB.md": [
      {
        "id": "vdqi11aq4",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 474,
        "endOffset": 506,
        "filePath": "Sources/WuCaiSync /2024/01/wucai-wsl 检测到 localhost 代理配置但未镜像到 WSLNAT 模式下的 WSL 不支持 localhost 代理 · Issue 10753 · microsoftWSL-H888HKB.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142395,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/01/wucai-The Document is All You Need一站式 LLM底层技术原理入门指南 - Feishu Docs-H879EAC.md": [
      {
        "id": "amovbl6is",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 429,
        "endOffset": 461,
        "filePath": "Sources/WuCaiSync /2024/01/wucai-The Document is All You Need一站式 LLM底层技术原理入门指南 - Feishu Docs-H879EAC.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142337,
        "isNativeComment": false,
        "color": "#ffff83"
      },
      {
        "id": "jc7cvuds8",
        "text": "█  ",
        "tags": [],
        "line": 24,
        "startOffset": 564,
        "endOffset": 596,
        "filePath": "Sources/WuCaiSync /2024/01/wucai-The Document is All You Need一站式 LLM底层技术原理入门指南 - Feishu Docs-H879EAC.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142472,
        "isNativeComment": false,
        "color": "#ffff83"
      },
      {
        "id": "8nxccmxwa",
        "text": "█  ",
        "tags": [],
        "line": 26,
        "startOffset": 652,
        "endOffset": 684,
        "filePath": "Sources/WuCaiSync /2024/01/wucai-The Document is All You Need一站式 LLM底层技术原理入门指南 - Feishu Docs-H879EAC.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142560,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/01/wucai-M1标配8G内存,SSD耐久度提升的秘密 硬件内存压缩 存储协处理器写入专用模拟SLC - 哔哩哔哩-H879722.md": [
      {
        "id": "mjpa3qvwa",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 390,
        "endOffset": 422,
        "filePath": "Sources/WuCaiSync /2024/01/wucai-M1标配8G内存,SSD耐久度提升的秘密 硬件内存压缩 存储协处理器写入专用模拟SLC - 哔哩哔哩-H879722.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142270,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/01/wucai-How to stop the stream and does it stop the openai charging · Issue 4743 · langchain-ailangchain-H88B239.md": [
      {
        "id": "899e8uekw",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 494,
        "endOffset": 526,
        "filePath": "Sources/WuCaiSync /2024/01/wucai-How to stop the stream and does it stop the openai charging · Issue 4743 · langchain-ailangchain-H88B239.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142356,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/01/wucai-24年素人铺量别碰-H88MDDK.md": [
      {
        "id": "ma9xiguav",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 644,
        "endOffset": 676,
        "filePath": "Sources/WuCaiSync /2024/01/wucai-24年素人铺量别碰-H88MDDK.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142336,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2024/01/wucai-2024 年了, 有多少公司和系统由微服务云原生转为了单体架构 - V2EX-H88MFBB.md": [
      {
        "id": "dpyrzxwpr",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 349,
        "endOffset": 381,
        "filePath": "Sources/WuCaiSync /2024/01/wucai-2024 年了, 有多少公司和系统由微服务云原生转为了单体架构 - V2EX-H88MFBB.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142036,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2023/12/wucai-Readwise --- 阅读-H8865MB.md": [
      {
        "id": "hzq43jvd0",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 282,
        "endOffset": 314,
        "filePath": "Sources/WuCaiSync /2023/12/wucai-Readwise --- 阅读-H8865MB.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142183,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2023/12/wucai-科研插件学术工具网页高亮划线标注批注神器支持谷歌chrome和edge数据云端同步 - 五彩插件_哔哩哔哩_bilibili-H8MADBA.md": [
      {
        "id": "j9bk26tda",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 461,
        "endOffset": 493,
        "filePath": "Sources/WuCaiSync /2023/12/wucai-科研插件学术工具网页高亮划线标注批注神器支持谷歌chrome和edge数据云端同步 - 五彩插件_哔哩哔哩_bilibili-H8MADBA.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142219,
        "isNativeComment": false,
        "color": "#ffff83"
      },
      {
        "id": "ov5ypcili",
        "text": "█  ",
        "tags": [],
        "line": 24,
        "startOffset": 520,
        "endOffset": 552,
        "filePath": "Sources/WuCaiSync /2023/12/wucai-科研插件学术工具网页高亮划线标注批注神器支持谷歌chrome和edge数据云端同步 - 五彩插件_哔哩哔哩_bilibili-H8MADBA.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142278,
        "isNativeComment": false,
        "color": "#ffc7ba"
      }
    ],
    "Sources/WuCaiSync /2023/12/wucai-怎样知行合一 我的两个心得： 从认知上对你说的所有话 - 即刻App-H8MB7EB.md": [
      {
        "id": "ytbmzapzc",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 420,
        "endOffset": 452,
        "filePath": "Sources/WuCaiSync /2023/12/wucai-怎样知行合一 我的两个心得： 从认知上对你说的所有话 - 即刻App-H8MB7EB.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142235,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2023/12/wucai-为啥Mac启动台图标删不掉 - 少数派-H88ECEF.md": [
      {
        "id": "f1j6ly6qd",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 302,
        "endOffset": 334,
        "filePath": "Sources/WuCaiSync /2023/12/wucai-为啥Mac启动台图标删不掉 - 少数派-H88ECEF.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142083,
        "isNativeComment": false,
        "color": "#ffff83"
      },
      {
        "id": "f98jtog52",
        "text": "█  ",
        "tags": [],
        "line": 26,
        "startOffset": 411,
        "endOffset": 443,
        "filePath": "Sources/WuCaiSync /2023/12/wucai-为啥Mac启动台图标删不掉 - 少数派-H88ECEF.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142192,
        "isNativeComment": false,
        "color": "#ffff83"
      },
      {
        "id": "isj1lqyjx",
        "text": "█  ",
        "tags": [],
        "line": 28,
        "startOffset": 488,
        "endOffset": 520,
        "filePath": "Sources/WuCaiSync /2023/12/wucai-为啥Mac启动台图标删不掉 - 少数派-H88ECEF.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142269,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2023/12/wucai-get_openai_callback dosent work with streaming = True · Issue 4583 · langchain-ailangchain-H8MB6HK.md": [
      {
        "id": "f5tq5f5g0",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 471,
        "endOffset": 503,
        "filePath": "Sources/WuCaiSync /2023/12/wucai-get_openai_callback dosent work with streaming = True · Issue 4583 · langchain-ailangchain-H8MB6HK.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142327,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2023/12/wucai-[分享] obsidian 日记数据跟踪图表 - 经验分享 - Obsidian 中文论坛-H8MAD33.md": [
      {
        "id": "10wq4snhr",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 375,
        "endOffset": 407,
        "filePath": "Sources/WuCaiSync /2023/12/wucai-[分享] obsidian 日记数据跟踪图表 - 经验分享 - Obsidian 中文论坛-H8MAD33.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142036,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2023/12/wucai-X 上的 LlamaIndex 🦙：“Using LLMs over knowledge graphs is increasingly common, and you can now explore 7 ways to query your-H8MB6KD.md": [
      {
        "id": "2towc89i4",
        "text": "█  ",
        "tags": [],
        "line": 24,
        "startOffset": 606,
        "endOffset": 638,
        "filePath": "Sources/WuCaiSync /2023/12/wucai-X 上的 LlamaIndex 🦙：“Using LLMs over knowledge graphs is increasingly common, and you can now explore 7 ways to query your-H8MB6KD.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142530,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2023/12/wucai-Pricing - Obsidian-H8MADM9.md": [
      {
        "id": "crbkv05vt",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 295,
        "endOffset": 327,
        "filePath": "Sources/WuCaiSync /2023/12/wucai-Pricing - Obsidian-H8MADM9.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142192,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2023/12/wucai-Implement a way to abort  cancel request · Issue 5340 · langchain-ailangchain-H88C2MA.md": [
      {
        "id": "a56zmb8q7",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 445,
        "endOffset": 477,
        "filePath": "Sources/WuCaiSync /2023/12/wucai-Implement a way to abort  cancel request · Issue 5340 · langchain-ailangchain-H88C2MA.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142318,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2023/12/wucai-AboutTheGarden-H8M397K.md": [
      {
        "id": "srag347nf",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 308,
        "endOffset": 340,
        "filePath": "Sources/WuCaiSync /2023/12/wucai-AboutTheGarden-H8M397K.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1721910586712,
        "isNativeComment": false,
        "color": "#ffff83"
      },
      {
        "id": "jp2a2bxut",
        "text": "█  ",
        "tags": [],
        "line": 24,
        "startOffset": 394,
        "endOffset": 426,
        "filePath": "Sources/WuCaiSync /2023/12/wucai-AboutTheGarden-H8M397K.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1721910586798,
        "isNativeComment": false,
        "color": "#ffff83"
      },
      {
        "id": "t7mp3yl9r",
        "text": "█  ",
        "tags": [],
        "line": 26,
        "startOffset": 480,
        "endOffset": 512,
        "filePath": "Sources/WuCaiSync /2023/12/wucai-AboutTheGarden-H8M397K.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1721910586884,
        "isNativeComment": false,
        "color": "#a6ffe9"
      }
    ],
    "Sources/WuCaiSync /2023/12/wucai-17. 更新日志-H8MAD35.md": [
      {
        "id": "il009388f",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 301,
        "endOffset": 333,
        "filePath": "Sources/WuCaiSync /2023/12/wucai-17. 更新日志-H8MAD35.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141978,
        "isNativeComment": false,
        "color": "#ffc7ba"
      }
    ],
    "Sources/WuCaiSync /2023/12/wucai-05. 实验中的功能-小助手和剪藏-H88C377.md": [
      {
        "id": "6al538d3j",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 319,
        "endOffset": 351,
        "filePath": "Sources/WuCaiSync /2023/12/wucai-05. 实验中的功能-小助手和剪藏-H88C377.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141989,
        "isNativeComment": false,
        "color": "#ffff83"
      },
      {
        "id": "urok0pe1h",
        "text": "█  ",
        "tags": [],
        "line": 24,
        "startOffset": 392,
        "endOffset": 424,
        "filePath": "Sources/WuCaiSync /2023/12/wucai-05. 实验中的功能-小助手和剪藏-H88C377.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142062,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/WuCaiSync /2023/12/wucai-(1000+) Inoreader - Mainonly – 小书签：只显示网页上选中的区域适合使用《沉浸式翻译》-H886EKC.md": [
      {
        "id": "qnd5zojob",
        "text": "█  ",
        "tags": [],
        "line": 22,
        "startOffset": 415,
        "endOffset": 447,
        "filePath": "Sources/WuCaiSync /2023/12/wucai-(1000+) Inoreader - Mainonly – 小书签：只显示网页上选中的区域适合使用《沉浸式翻译》-H886EKC.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142069,
        "isNativeComment": false,
        "color": "#ffff83"
      }
    ],
    "Sources/CuboxSync/谷歌重磅发布多平台应用开发神器：背靠 AI 编程神器 Codey，支持 React、Vue 等框架，...-2023-08-10.md": [
      {
        "id": "8so95ssvo",
        "text": "&mid=2651177423&idx=1&sn=0ad89e54449e5196b5b0693dfe3858a5&chksm=bdb8399c8acfb08a6e6c7542a59c7d54c9e02f905aa28f6519509fa896624e2cd68153d961b9&scene=21#wechat_redirect)  \r\n\r\n[爱奇艺VR公司业务停滞，员工或被欠薪；阿里云开源通义千问 70 亿参数模型，免费可商用；华为正式发布鸿蒙 4，接入大模型｜Q资讯](http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA",
        "tags": [],
        "line": 93,
        "startOffset": 3894,
        "endOffset": 4183,
        "filePath": "Sources/CuboxSync/谷歌重磅发布多平台应用开发神器：背靠 AI 编程神器 Codey，支持 React、Vue 等框架，...-2023-08-10.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615155981,
        "isNativeComment": false
      },
      {
        "id": "ylvhmdztz",
        "text": "&mid=2651177310&idx=1&sn=2f2e881ce7beabb91b794c7e80c54d15&chksm=bdb8390d8acfb01ba0432391918dfa3fbb98680e6205ee05258a36ec80663453e3e37d975571&scene=21#wechat_redirect)\r\n\r\n[都在追\"新潮\"技术，但你有大厂们的动作快吗？](http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA",
        "tags": [],
        "line": 97,
        "startOffset": 4437,
        "endOffset": 4682,
        "filePath": "Sources/CuboxSync/谷歌重磅发布多平台应用开发神器：背靠 AI 编程神器 Codey，支持 React、Vue 等框架，...-2023-08-10.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615155524,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/被传销洗脑是怎样的过程？ - 知乎-2022-06-02.md": [
      {
        "id": "cmn5ofdtl",
        "text": "已取消匿名，转载请联系答主",
        "tags": [],
        "line": 9,
        "startOffset": 191,
        "endOffset": 208,
        "filePath": "Sources/CuboxSync/被传销洗脑是怎样的过程？ - 知乎-2022-06-02.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615153468,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/行业图谱 - 2023年中国AIGC行业图谱V3.0-2023-09-06.md": [
      {
        "id": "jn10b7mrg",
        "text": "&mid=2247507249&idx=1&sn=2619ef3bbed5be8bd576e12dcb9e1099&chksm=fe1a5a0ec96dd318c5118e86662899c7898490e1b887ed36053d0bdea7a6849f8ea963cf909e&mpshare=1&scene=1&srcid=0906opLlt4jq3XALQXqSRMxG&sharer_shareinfo=ad91fa949be31dd313578f675f347827&sharer_shareinfo_first=ad91fa949be31dd313578f675f347827&version=4.1.9.70221&platform=mac\ntags: []\n---\r\n\r\n# 行业图谱 | 2023年中国AIGC行业图谱V3.0\r\n\r\n非凡产研 · 2023年中国AIGC行业图谱V3.0\r\n\r\n[Read in Cubox](https://cubox.pro/my/card?id=7099099006885693396)  \r\n[Read Original](https://mp.weixin.qq.com/s?__biz=MzU5Mjg5MjQ5Ng",
        "tags": [],
        "line": 3,
        "startOffset": 143,
        "endOffset": 686,
        "filePath": "Sources/CuboxSync/行业图谱 - 2023年中国AIGC行业图谱V3.0-2023-09-06.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615158592,
        "isNativeComment": false
      },
      {
        "id": "wy123hbjw",
        "text": "&mid=2247505357&idx=1&sn=2add7a9575e9b2544b4c9eca4a0b042d&chksm=fe1a52f2c96ddbe404ae5c126f13d5f05a5cb5715bc603800251434fbf1de6cd9ea6a8f97ee4&scene=21#wechat_redirect)》，本次带来的图谱更新在基础层、中间层、应用层的基础上，将模型层具体为通用大模型及行业模型，以及应用层分为了行业及通用两部分。\r\n\r\n将**模型层具体为通用大模型及行业模型**，这种划分方法既体现了模型层的丰富多样性，又突出了模型在不同行业中的特殊性和应用性。通用大模型是针对广泛领域的问题而设计的，具有普适性和通用性，可以应用于多个行业和场景。而行业模型则是针对特定行业的问题而设计的，具有专业性和针对性，能够更好地满足行业特定的需求。\r\n\r\n在**应用层方面，将其分为行业及通用两部分，这种划分方法充分体现了人工智能技术在不同行业中的应用和发展。**行业部分主要涵盖了医疗、金融、教育、交通、能源等各个领域，每个领域都有其特定的应用场景和需求。通用应用则是指将生成式AI技术应用于通用领域，如文本、图像、视频、音频生成等，满足多个领域的通用需求。这些应用场景具有普适性和通用性，可以应用于多个行业和领域。\r\n\r\n![图片](https://image.cubox.pro/cardImg/2023090621581352774/62580.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n![图片](https://image.cubox.pro/cardImg/2023090621581373121/13454.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n**深度强化学习范式：AI步入3.0时代，通过奖惩模型强化生成能力**\r\n\r\n![图片](https://image.cubox.pro/cardImg/2023090621581371611/66668.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n**AIGC（AI Generated Content）是一种基于GAN、预训练大模型和多模态技术的融合产物。它通过分析已有数据来寻找规律，并利用泛化能力生成相关内容。**从商业角度来看，AIGC是一种赋能技术，通过高质量、高自由度和低门槛的生成方式为内容相关场景和生产者提供服务。\r\n\r\n早期决策式AI依赖逻辑判断的纯粹性，但这种前提不符合真实世界的\"不确定性\"。概率范式基于经验主义和理性主义，在一定程度上解决了\"不确定性\"问题。**深度加强学习可以利用合理的数据丰度和奖惩模型，达到类人类智能的水平，实现高质量内容和内容创作自动化。**而通用型AI具备泛人类智能，可以像人类一样执行各种任务。\r\n\r\n![图片](https://image.cubox.pro/cardImg/2023090621581453852/31768.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n************算力、大模型与新工具：AIGC产业的崭新格局************\r\n\r\n![图片](https://image.cubox.pro/cardImg/2023090621581471118/12244.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n**基础层主要包括数据层、算力层、计算平台、模型开发训练平台和其他配套设施。**模型层主要分为**底层通用大模型和中间层模型，**其中底层通用大模型又可分为开源基础模型、非开源基础模型和模型托管平台；中间层模型有人类互动反馈、大模型调整和个性化模型。**应用层面向C端用户提供文字、图片、音视频等内容生成服务，按不同的价值创造逻辑，可分为行业应用及通用应用。**\r\n\r\n**行业应用层，**包括人工智能技术在各行业领域的具体应用，例如安防、金融、教育、医疗、驾驶、物流、交通等。**通用应用层，**指人工智能技术被广泛应用于各种通用场景中，例如翻译、问答/客服/聊天机器人、知识图谱、个性化推荐引擎、机器人操作系统、数据挖掘、智能交互等。\r\n\r\n目前，国内AIGC产业已吸引了互联网大厂、AI公司、生态场景链公司和研究机构等多类参与者。由于产业发展相对有限，目前各类玩家间区别相对有限。**在国内的AIGC产业中，应用层是最适合初创企业进入的部分，因此目前应用层的企业竞争也是最为激烈。**\r\n\r\n### ************************•******************************算力构成了AIGC产业的核心底座****** ************************•************************\r\n\r\n\r\n主要包括AI芯片、AI服务器和数据中心:\r\n\r\n**AI芯片--是算力的基础，主要分为CPU、GPU、FPGA、ASIC四类。**CPU是人工智能计算的基础，而GPU、FPGA和ASIC为协助CPU进行大规模计算的加速芯片。\r\n\r\n**AI服务器--对AI芯片进行系统集成。**AI服务器的架构为\"CPU+加速芯片\"，在进行模型处理推理和训练时，效率更高。\r\n\r\n**数据中心--提供计算服务，承接AI算力需求。**AIGC使用算力资源在云端实现模型训练。\r\n\r\n基础层-算力层为AIGC模型训练提供最重要的基础支持，成本主要由AI芯片、内存、硬盘等构成，其中AI芯片是算力的核心；数据集快速膨胀和参数量持续上涨导致算力需求及算力成本大幅上升。\r\n\r\n### ************************•******************************随着算法、算力和数据的发展，大模型的诞生成为了AI技术发展的重要里程碑****** ************************•************************\r\n\r\n**在AIGC中，大模型不仅仅是简单的算法升级，它更是一种新的技术范式，具有更强的泛化能力和更高的智能化水平。**在大模型的引领下，AI技术已经逐渐渗透到各个领域，包括自然语言处理、计算机视觉、医疗、金融等等。\r\n\r\n在这些领域中，大模型展现出了前所未有的应用价值和发展前景。例如，**在自然语言处理领域，**GPT系列模型能够理解和生成自然语言文本，并尝试回答各种问题和提供相关信息。**在计算机视觉领域，**YOLO系列模型能够在复杂的场景中实现高效的目标检测和跟踪。**在医疗领域，**AlphaFold系列模型能够精准预测蛋白质的结构和功能，为疾病治疗和药物研发提供了新的思路。**在金融领域，**Transformer系列模型能够进行股票价格预测和风险评估，为金融决策提供了可靠的支持。\r\n\r\n大模型的快速发展带来了挑战和问题，如训练和推理需要大量计算资源和数据，增加了AI技术的门槛和成本，以及隐私和安全问题。此外，大模型也存在局限性和可解释性问题，需要进一步研究和改进。\r\n\r\n**在AIGC概念实际落地的过程中，不仅需要基础大模型和通用技术，还需要与场景融合匹配的工具平台和开放包容的创新生态，三者协同优化，才能加速AIGC的落地。**\r\n\r\n### ************************•******************************AIGC时代不断涌现新的工具层****** ************************•************************\r\n\r\n\r\n**AIInfra**\r\n\r\n类似于计算机系统的基础软件层和云计算三层架构的PaaS层级，AI产业链中也有层级相似的角色，即位于算力与应用之间的\"桥梁\"的AI Infra。**新一轮生成式AI浪潮为上层应用带来了机遇和挑战，而作为必要的基础设施，AI Infra的技术和商业发展前景具有更高的确定性。**AI Infra是AI产业必不可少的基础软件堆栈，遵循\"掘金卖铲\"的逻辑，商业潜力很高，受到众多投资者关注。\r\n\r\n人工智能模型在传统机器学习时代通用性较低，项目落地时需要手动操作，流程难以统一规范。而现在的大规模预训练模型则统一了技术路径，具备解决问题的泛化能力，可以应用于各种类型的项目，并且存在标准化的工作流程。这为AIInfra提供了投资机会。\r\n\r\n**GPT 4的开发经验表明，专业分工是必要的。**根据OpenAI的披露，在GPT 4的开发过程中，249人的研发团队进行了明确的分工，并使用了数据标注、分布式计算框架、实验管理等工具。这表明在大模型时代，应用基础软件也是必要的。\r\n\r\n目前，AI Infra产业处于高速增长的发展早期。预计未来3-5年内，各细分赛道空间将保持30%以上的高速增长，每个方向都有变现的可能，也有机会培育出独角兽企业。\r\n\r\n**AIAgent**\r\n\r\n在AIGC时代，AI Agent和大模型服务/平台是新的工具层，它们将成为下一个重要的应用领域。**AI Agent需要将专业知识和数据集成到框架中，以确保大模型在执行任务时能够获取正确的信息和高效产出。**随着大模型在工程化能力方面的提高，对模型服务定位的人才和资源需求将逐渐减少，而市场机会也不再那么明确。与此相反，模型商店和平台将会产生双边效应，即两方面的作用。一方面是技术资源的聚集，另一方面是生态建设。而两个因素将是决定模型商店和平台发展的关键。\r\n\r\n### ************************•******************************AIGC为各个行业赋能的趋势已经显现****** ************************•************************\r\n\r\n随着AIGC大模型的推出，文本、图像、音频和视频等多种媒体形式都受到了最直接的影响。**智能AI技术在各行业赋能的趋势已经显现，服务类、制造类和文娱类等行业都受到了极大的影响。**在我们的分类中，应用层分为行业及通用两大类，而无论是行业应用，还是通用应用，都是由大模型的单模态及多模态形式发展落地应用。\r\n\r\n\r\n******************◎********************单模态**\r\n\r\n在早期发展阶段，AIGC的重点之一是基于自然语言处理技术的文字单模态原子能力。**这种能力包括文本回复、文章生成、内容续写等细分功能，可以广泛应用于企业的各个职能领域。**例如，在经营决策、管理协作、产品研发和市场营销等方面都可以使用文字单模态原子能力，如会议记录、需求分析等。\r\n\r\n对于**图像处理**，AI图像生成技术包括GAN、Diffusion Model、NeRF等技术。与文字生成相比，生成高质量的AI图像更具挑战性，目前仍存在一定的困难。AI图像生成技术主要应用于图像数据分析、视觉项目管理和图像识别广告等领域。\r\n\r\n在**音频领域**，基于AI技术的音乐生成已成为音频单模态原子能力应用领域中快速成长的赛道。同时，AI音频生成也对于短视频、虚拟偶像、影视剧等文娱领域产生着深远而重要的影响。音频单模态原子能力可用于语音数据分析、声音品牌塑造等细分功能。\r\n\r\n通过整合这些单模态原子能力，AIGC为不同行业提供了丰富多样的应用服务，帮助企业实现创新和提升竞争力。未来，随着技术的不断进步和应用场景的扩大，AIGC将进一步推动各行业的发展和转型。\r\n\r\n******************◎****************** **多模态**\r\n\r\n相比于信息模态单一的单模态模型，多模态模型可以同时处理更多模态的信息并将它们相互转化。\r\n\r\n**现今多模态模型以图文多模块为主。**Transformer虽受制于单模态但其权重共享适用于多模态；ViT模型处理输入图片，使得Transformer可用，从而打破NLP和CV间屏障；BEiT将生成式预训练从自然语言处理迁移到了计算机视觉；扩散模型多用于文本图像生成。\r\n\r\n**聊天机器人**\r\n\r\n**全球企业对聊天机器人的应用越来越重视：提高生产力和便利性、改善客户服务体验、提升员工利用率、加快与品牌沟通速度、更快解决客户问题和投诉，并带来更高的投资回报率。**AIGC技术可以将知识库的能力注入聊天机器人，通过上下文联系和提示词等智能回复方式，同时拒绝不适当的请求。\r\n\r\n聊天机器人在应用场景上变得越来越多样化，能够提高人们处理事务的效率，节省时间和精力。通过聊天机器人，企业能够提升生产效率，加快反馈速度，优化客户体验，从而增强竞争力。\r\n\r\n**合成数据**\r\n\r\n合成数据（ synthetic data ）：通过AIGC技术，生成合成人工智能发展所需的海量数据，可以在数学或统计学上反映真实数据的属性与特征，可作为真实数据的辅助与替代品， 帮助训练和验证AI模型。\r\n\r\n**通过利用AIGC的生成能力和多模态能力，可以大量合成反映真实数据属性和特征的海量数据，并将其应用于新兴的信息技术领域。**以AIGC自身为例，它有望在未来成为AI训练数据的主要来源，预计到2030年将完全取代真实数据。\r\n\r\n![图片](https://image.cubox.pro/cardImg/2023090621581457031/71706.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n**AIGC赋能合成数据的能力具有重要意义，它能够解决真实数据获取困难、获取成本高昂、多样性不足和缺乏隐私保护等痛点问题。**通过使用合成数据，人们可以更方便地获取具备真实属性和特征的数据集，降低数据获取的难度和成本。同时，合成数据可以提供更多样化的数据分布，从而增加模型的泛化能力和鲁棒性。此外，使用合成数据可以避免真实数据涉及的隐私和版权问题，保护个人和企业的敏感信息安全。\r\n\r\n**虚拟人**\r\n\r\n结合上面提到的单模态领域，虚拟人技术也正在逐渐广泛应用于各个行业，并展现出巨大的市场潜力。利用AIGC的赋能，虚拟人产业的全球规模预计将在2031年达到5910亿美元。**AIGC可以降低虚拟人制作的壁垒，推动虚拟人技术快速普及。同时，AIGC还可以驱动虚拟人的运作，实现实时交互，进一步拓宽虚拟人的应用场景。**\r\n\r\n**虚拟人技术的应用前景非常广阔。**它可以在各行各业中发挥重要作用，如教育领域的在线教育助教、医疗领域的医疗咨询服务、零售领域的虚拟导购员等等。利用AIGC，虚拟人的制作和部署变得更加便捷和高效，企业和机构可以更轻松地开发和运营自己的虚拟人项目。\r\n\r\n**AIGC的实时交互能力进一步增强了虚拟人的功能和真实感。**虚拟人可以通过与用户的实时互动，提供个性化的服务和解决方案，增强用户体验。无论是在客户服务、咨询互动、虚拟演艺或者虚拟导览等方面，虚拟人的应用场景将得到进一步拓宽。\r\n\r\n![图片](https://image.cubox.pro/cardImg/2023090621581449685/63586.jpg?imageMogr2/quality/90/ignore-error/1)   \r\n\r\n**基础设施 - 公司介绍**\r\n\r\n\r\n**瑞波软件**\r\n\r\n\r\n<br />\r\n\r\n<br />\r\n\r\n\r\n瑞波软件是一家AIGC液冷算力基础设施科技服务商，核心理念是提供先进的液冷算力、顶尖的AI算芯和高性能处理器的合作渠道以及智能的AIGC创作，为高新产业数字能源升级、终端应用高效运行以及多行业AI智创加持等场景提供全流程解决方案。过去三个月，瑞波软件完成数百万元的种子轮融资，这一重要融资事件引起了广泛的行业关注。\r\n\r\n\r\n帝图科技\r\n\r\n\r\n帝图科技是一家图像视觉识别芯片研发与设计商，专注于图像视觉和高精度识别领域，现已成功完成多颗先进工艺芯片的流片及量产。深度开发国产FPGA 、国产CPU、图像识别及生物识别等高性能低功耗的处理器技术，为系统及行业应用客户提供专业化、高可靠、高稳定、高环境适应度的模块板卡及零组件解决方案。\r\n\r\n\r\n可数智能\r\n\r\n\r\n可数通过软件重新定义边缘计算技术的创新应用，为客户提供高效、简单、低成本的视频处理解决方案。聚焦于视频全流程处理，打造基于边缘计算、AI算法的智能一体机，融合视频存储、视频编解码、近百种成熟算法、视频传输协议异构管理等技术，从视频产生、传输、存储、编解码、应用和分析等环节，为客户提供简单、高效、低成本的智能视频处理解决方案。\r\n\r\n\r\n潞晨科技\r\n\r\n\r\n潞晨科技致力于解放AI生产力，旨在打造世界级的分布式AI开发和部署平台。通过高效多维并行、异构内存管理、大规模优化库、自适应任务调度等自研核心技术，打造面向大模型时代的通用深度学习系统Colossal-AI ，高效促进AI大模型落地应用，助力企业低成本实现AI智能化产业升级。\r\n\r\n为促进AI大模型时代行业标准化进程，全面解决AI大模型在行业落地难、门槛高等问题，基于多年在学术上的卓越成就和工业界的深厚积累，攻克多维张量并行、序列并行、异构内存管理、大规模优化库、自适应任务调度等多项核心关键技术，研发面向AI大模型时代的高效深度学习系统Colossal-AI，实现高效快速部署AI大模型训练和推理，全面降低AI大模型落地应用成本。\r\n\r\n##### ![图片](https://image.cubox.pro/cardImg/2023090621581474467/30591.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n\r\n****通用大模型 - 公司介绍****\r\n\r\n\r\n**智谱AI**\r\n\r\n\r\n一家AI知识智能技术开发商，由清华大学计算机系知识工程实验室的技术成果转化而来。在过去的25年时间里，清华大学知识工程实验室在知识工程、知识图谱、图神经网络和认知智能等领域完成了一系列国际领先的研究成果。实验室老师、智谱AI首席科学家唐杰教授在北京智源研究院的支持下，组建悟道团队并研发了中国首个、全球最大的1.75万亿参数大规模预训练模型WuDao2.0。\r\n\r\n\r\n光年之外\r\n\r\n\r\n光年之外是一家人工智能领域服务商，核心宗旨在于\"实现安全的通用人工智能(AGI)\"，使其有益于人类，要打造中国OpenAl。光年之外被各大企业所看好。如今，美团收购了光年之外，也将为光年之外在大模型领域更进一步发展提供更多的人才和资金助力。有消息人士称，光年之外在两个月内完成了以产品和技术人才为主的团队搭建，吸引了包括多名人工智能领域顶级专家和创业者的加入。目前团队规模在70人左右。\r\n\r\n\r\nMinimax名之梦\r\n\r\n\r\nMiniMax是一家AI大模型研发商，MiniMax成立于2021年12月，积极投身于中国人工智能技术高速发展的时代大潮，致力于成为通用人工智能时代基础设施建设者和内容应用创造者。作为国内拥有文本、语音、视觉多种模态融合的通用大模型引擎能力，并打通产品全链路的技术公司，MiniMax团队致力于用领先的通用人工智能引擎技术，通过多场景和多维度应用及交互，以用户反馈量级的提升和多模态AI技术一体化的应用实践，推动通用人工智能技术新范式变革。自研的三个基础模型为------文本到视觉（text to visual）、 文本到语音（text to audio），文本到文本（text to text），旗下有AI虚拟聊天社交软件Glow。   \r\n\r\n\r\n**智子引擎**\r\n\r\n\r\n智子引擎是一家多模态大模型研究和开发商，发布了第一款应用级多模态ChatGPT产品\"元乘象 ChatImg\"。\"元乘象ChatImg\"的参数量在百亿级别，主要使用了图文对数据和VQA数据作为训练集，同时进行图文匹配、图文检索、图像描述生成、文本描述生成等多种任务的训练。根据用户输入的图片或文字，\"元乘象ChatImg\"可以进行智能聊天、讲故事、写广告等。   \r\n\r\n\r\n**百川智能**\r\n\r\n\r\n百川智能百川智能成立于2023年4月10日，是一家研发并提供通用人工智能服务的公司，由前搜狗公司CEO王小川创立，旨在打造中国版的OpenAI基础大模型及颠覆性上层应用。公司以帮助大众轻松、普惠地获取世界知识和专业服务为使命，致力于通过语言AI的突破，构建中国最优秀的大模型底座。公司核心团队由来自搜狗、百度、华为、微软、字节、腾讯等知名科技公司的AI顶尖人才组成。百川智能成立不到100天，便发布了Baichuan-7B、Baichuan-13B两款开源可免费商用的中文大模型，且在多个权威评测榜单均名列前茅，下载量突破百万。百川智能将借助语言AI的突破，构建中国最好的大模型底座，并在搜索、多模态、教育、医疗等方面增强，帮助大众轻松、普惠的获取世界知识和专业服务。\r\n\r\n\r\n深言科技\r\n\r\n\r\n深言科技是一家文本信息处理平台，致力于用前沿的人工智能和自然语言处理技术，尤其是大规模预训练模型技术，为个人和组织系统化重塑文本信息处理全流程。通过文本摘要、语义检索、信息抽取等技术在信息爆炸时代提高信息获取的效率，同时通过可控文本生成、素材自动推荐、文本校对和风格检查实现文本内容创作的提质增效。\r\n\r\n\r\n创新工场/Project AI 2.0\r\n\r\n\r\nProject AI 2.0是创新工场塔尖孵化的公司。致力于打造AI 2.0全新平台和AI-first生产力应用。由\"创业教父\"李开复亲自带队。\r\n\r\n\r\n猴子无限\r\n\r\n\r\n猴子作为一家AI研发及信息服务商，在通用大模型只能创作出通用内容的前提下，向通用大模型中引入个性化数据，为每个人、企业提供专属大模型，并有机会基于这个大模型独立完成创作。\r\n\r\n![图片](https://image.cubox.pro/cardImg/2023090621581487057/66824.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n**中间层 - 公司介绍**\r\n\r\n**************************************************************************************• AI Infra****************************************** ********************•****************************************************************\r\n\r\n\r\n第四范式\r\n\r\n第四范式成立于2014年9月，是企业级人工智能领域的行业先驱者与领导者。第四范式提供以平台为中心的人工智能解决方案，并运用核心技术开发了端到端的企业级人工智能产品，致力于解决企业智能化转型中面临的效率、成本、价值问题，提升企业的决策水平。现已广泛应用于金融、零售、制造、能源与电力、电信及医疗保健等领域，在中国所有以平台为中心的决策型企业级AI市场中排名第一。\r\n\r\n和鲸科技\r\n\r\n和鲸科技是一家专注于\"数据科学协同\"的社区运营商和平台开发商。和鲸成立于2015年4月，以\"Connect People with Data 人与数据的价值连接\"为使命，帮助数据人才融入业务创新，帮助企业打通数据的价值闭环。ModelWhale，数据科学协同平台。将计算基础设施、模型开发环境和团队管理环境进行了深度的融合，提供了高度集成的能力和高度友好的体验，显著提高团队用数据、建模型、做业务的工作效率。\r\n\r\n面壁智能\r\n\r\n\r\n面壁智能是一家人工智能大模型加速与应用落地赋能公司。公司依托开源社区打造大规模预训练模型库与相关工具，加速百亿级以上大模型的训练、微调与推理，降低大模型使用门槛，并进一步推动大模型在人工智能典型场景与领域的应用与落地。\r\n\r\n**星鲸科技**\r\n\r\n\r\n星鲸科技是一家AI管理和协同服务商，专注于聚焦MLOps服务领域，搭建数据和模型两大功能板块平台，提供MLOps平台和工具等产品服务。目前的星鲸Starwhale开源版本既支持企业端部署，也支持个人开发使用。除此之外，星鲸科技还即将推出星鲸云 ，包含目前开源的各类大模型和数据集，支持模型微调、评估和部署，方便中小企业和个人使用。\r\n\r\n奇点智源\r\n\r\n\r\n奇点智源是一家自然语言大型预训练模型及开发者API研发商，Singularity AI致力于实现通用人工智能，主要产品及服务包括通用开发者API、聊天机器人和知识抽取。公司目前产品与服务包括通用开发者API、聊天机器人和知识抽取，应用案例包括\"心灵鸡汤写作\"\"公文写作\"\"知识问答\"\"关键事件提取\"等。近日，昆仑万维拟以1.6亿美元对价收购AIGC企业Singularity AI（奇点智源）100%股权。\r\n\r\n生数科技\r\n\r\n\r\n生数科技是一家多模态生成式大模型与应用产品开发商，基于自研产业级多模态大模型，生数科技目前正面向图像创作、3D资产创建等细分场景打造垂类应用，服务范围覆盖C、B两端。 面向C端用户，生数科技将为普通用户和专业创作者打造供图像创作助理，提供个性化的服务。面向B端用户，将为机构企业、垂直领域的技术服务商提供通用服务。生数科技已与多家游戏厂商、设计平台建立初步合作，应用级产品也将于近期推出。\r\n\r\n端脑科技\r\n\r\n\r\n端脑科技是一家AIGC分布式算力网络平台，致力于构建分布式算力网络，通过将分散的计算资源进行整合和优化，为客户提供强大的计算能力支持。分布式算力具有高度灵活性和可扩展性，能够有效应对大规模数据处理和计算密集型任务，极大提高了企业的工作效率和成果质量。\r\n\r\n渊亭科技\r\n\r\n\r\n渊亭科技是一家认知决策智能解决方案提供商，在知识图谱、图计算、强化学习、机器学习（深度学习）等领域拥有核心技术优势与领先的工程化能力。以\"连接万物、全景计算、认知推理、深度赋能\"为使命，聚焦国防、金融、政务、工业互联网四大行业，为客户提供决策中台、认知中台、数据中台三大中台产品与全栈人工智能行业解决方案。\r\n\r\n\r\n猴子无限\r\n\r\n\r\n猴子作为一家AI研发及信息服务商，在通用大模型只能创作出通用内容的前提下，向通用大模型中引入个性化数据，为每个人、企业提供专属大模型，并有机会基于这个大模型独立完成创作。\r\n\r\n硅心科技\r\n\r\n\r\n硅心科技是一家AI虚拟编程机器人研发商，旗下开发有\"aiXcoder智能编程机器人\"，基于深度学习模型，并针对不同的专业领域和编程语言，能够自动预测程序员的编程意图，向用户推荐即将书写的下一段代码，进而提升代码的编写效率。\r\n\r\n白海科技\r\n\r\n\r\n白海科技成立于2021年，是新一代云原生AI基础软件服务商。企业核心团队汇聚来自清华大学、百度、明略科技等领先校、企的专业人才，团队成员在技术、产品、运营、开源等领域平均拥有超过15年专业经验。\r\n\r\n白海科技是致力于帮助开发者和企业解决AI落地过程中的效率、性能、成本等问题。立足易用和降本增效的核心需求，白海科技提供模块化架构的新一代云原生AI平台IDP，便捷轻量地满足AI开发、训练和生产的全流程需求，提升AI计算性能和资源利用率。基于IDP基础平台，白海科技加速大模型的落地应用，打造专属大模型应用加速平台IDP LM，助力客户高效构建专属可控的大模型。 白海科技坚持自主创新，在核心领域已积累丰富专利、软件著作权、全球顶会论文等。\r\n\r\n\r\n**************************************************************************************• AI Agents****************************************** ********************•****************************************************************\r\n\r\n澜码科技\r\n\r\n\r\n澜码科技是一家大模型企业自动化运营中台研发商，致力于基于大语言模型打造新一代自动化平台。澜码科技是数据飞轮公司，基于底层的大语言模型，通过提供自动化平台，从而在效率场景下学习人们在PC/手机/会议等场景下的技能，建构出自己独特的多模态基础大模型。\r\n\r\n波形智能\r\n\r\n\r\n波形智能是一家专注于AI交互内容平台开发的公司，依托自主研发的模型，从工具端入手，逐步构建了覆盖娱乐产业全链条的AI交互内容平台。公司自主研发的AI创作工具具备多项显著特点，如内容丰富、交互性强、个性化、多模态等。这些特点恰好处于当前大型模型应用领域的\"技术前沿\"，也就是说，这类应用无法仅通过调用GPT等大型模型的接口来实现。公司团队有一个共同的愿景和信念，希望借助AIGC技术，创制出更为优质的内容，为大众带来崭新的娱乐体验，满足人类需求的最高层次。\r\n\r\nAutoAgents\r\n\r\n\r\nAutoAgents.ai（未来式智能）是一家来自国内领先人工智能、云计算公司，长期工作在服务企业数字化、智能化的第一线。公司一方面研究前沿技术发展的趋势、应用、边界。另一方面探索对企业数智化转型的痛点、利好、困难的解决方案。\r\n\r\n言图科技\r\n\r\n\r\n言图科技是一家专注于自然语言处理与知识图谱产品的高新技术企业，多年来深耕人工智能领域，利用先进的深度学习、强化学习、图神经网络等技术，为众多集团客户与政府客户，提供业务智能升级服务，大幅提高了客户的生产和经营效率。针对金融、保险、医疗、电商、国防科技等领域，言图科技不仅积累了丰富的行业数据与背景知识，更形成了一套独特的行业智能化升级解决方案，逐步成为了自然语言于知识图谱领域内的领跑者。\r\n\r\nDify\r\n\r\n\r\nDify 是一个易用的 LLMOps 平台，基于不同的大型语言模型能力，让更多人可以简易地创建可持续运营的原生 AI 应用。Dify 提供多种类型应用的可视化编排，应用可开箱即用，也能以\"后端即服务\"的 API 提供服务。\r\n\r\nMindverse\r\n\r\n\r\n心识宇宙（Mindverse.ai）是⼀家前沿AI技术初创公司，致力于通过⼈⼯智能赋能虚拟⼈⼤脑，让虚拟⼈具有思维、意识和⼈格。虚拟⼈、虚拟分⾝是通往元宇宙的重要窗⼝。心识宇宙研发的新⼀代人工智能技术，能让虚拟人拥有感知现实、思维推理、自我意识和人格，成为元宇宙的原住民，陪伴、服务每⼀个用户。\r\n\r\nKinesys AI\r\n\r\n\r\nKinesys AI是一家使用人工智能来革新软件开发的公司。他们探索了使开发更具可扩展性、可访问性和效率的LLMs应用。他们的新产品Cortex可以在您自己的数据上构建AI Co-pilot，使您的团队能够使用自己的私有数据源构建定制的AI助手。他们还在推进高效、注重隐私的大型语言模型。\r\n\r\nRobosell\r\n\r\n\r\nRobosell致力于在电商领域，构建能够持续推理、营销及变现的通用AI-Agents，进而通过自主代理（Autonomouse Agents）重塑行业工作流。公司利用预训练大语言模型中封装的知识生成一致的行动计划或可执行策略。随着自主代理能力的提升，AI-Agents将无缝管理在线商业活动的各个方面。\r\n\r\nAI降临派\r\n\r\n\r\nAI降临派向B端客户提供虚拟角色定制解决方案，按需定制能力，支持私有化部署，应用于客服咨询、人力资源、教育培训、文娱游戏、电商销售等场景。\r\n\r\n![图片](https://image.cubox.pro/cardImg/2023090621581471587/22450.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n**通用应用- 公司介绍**\r\n\r\n通用应用场景包括但不限于以下几个方面：\r\n\r\n文本生成：利用生成式AI技术生成各种类型的文本，例如新闻报道、小说、诗歌、广告语等。这种应用场景可以极大地提高写作效率，同时也可以帮助人们创作出更加自然、流畅的文本内容。\r\n\r\n图像生成：利用生成式AI技术生成各种类型的图像，例如照片、插图、艺术作品等。这种应用场景可以极大地提高图像设计效率，同时也可以帮助人们创作出更加生动、逼真的图像作品。\r\n\r\n视频生成：利用生成式AI技术生成各种类型的视频，例如电影、电视剧、广告等。这种应用场景可以极大地提高视频制作效率，同时也可以帮助人们创作出更加自然、流畅的视频作品。\r\n\r\n音频生成：利用生成式AI技术生成各种类型的音频，例如音乐、语音合成等。这种应用场景可以极大地提高音频制作效率，同时也可以帮助人们创作出更加自然、流畅的音频作品。\r\n\r\n通用应用场景具有普适性和通用性，可以应用于多个行业和领域，为人们提供更加高效、智能、便捷的解决方案。\r\n\r\n************************************************************************************• 文本****************************************** ********************•**************************************************************\r\n\r\nGlowe阁楼\r\n\r\nGlowe阁楼是一个线上心理咨询服务平台，针对都市年轻人的线上心理咨询项目，主要面向轻中度抑郁和焦虑状态的人群，以循证流派的认知行为疗法（CBT）和人际关系疗法（IPT）为理论基础，定制了标准化的咨询框架和咨询工具，为来访提供可标准化的心理咨询服务。\r\n\r\n及时语\r\n\r\n及时语是一个跨境电商一站式智能客服平台，利用AI技术，赋能facebook、邮件等渠道，以及亚马逊、独立站等平台，帮助卖家自动化业务流程、智能化运营业务，能够帮助独立站卖家解决用户服务中的多种卡点问题。\r\n\r\n及时语成立以来，已有多家头部独立站公司通过及时语平台提升运营效率与营销效果，并获得多个投资机构垂青。\r\n\r\n澜舟科技\r\n\r\n\r\n澜舟科技立于2021年，是一家业界领先的认知智能公司，致力于以自然语言处理（NLP）技术为基础，为全球企业提供新一代认知智能平台，助力企业数字化转型升级。其主要产品是基于\"孟子预训练模型\"打造的一系列功能引擎（包括搜索、生成、翻译、对话等）和垂直场景应用。\r\n\r\n智象未来\r\n\r\n\r\n智象未来是一家通用大模型开发商，以从事科技推广和应用服务业为主，致力于开发人工智能技术、数字技术服务。\r\n\r\nTranslai\r\n\r\n\r\nTranslai成立于2020年3月，是一家致力于以AI、云计算技术为基底提供语言服务的SaaS公司。公司定位为人机协同语言服务云平台，将平台规模化的优势覆盖到音视频、图文、文本等不同媒介内容的翻译、制作、本地化等业务场景。   \r\n\r\n\r\nNovel Monkey\r\n\r\n\r\n波形智能聚焦AI原生的全新娱乐体验\"交互式内容生成\"，基于公司自研模型，从工具端切入，逐步构建覆盖娱乐全产业链的AI交互内容。\r\n\r\n******************************************• 图像****************************************** ********************•********************\r\n\r\nTIAMAT\r\n\r\n\r\nTIAMAT是一个AI图像生成技术服务商，致力于通过自研的算法、底层引擎、平台为个人用户和企业客户提供创意生产、广告、数字藏品等场景形式下的服务。其自研的MorpherVLM是中国首个基于概念融合范式提出的近百亿级跨模态生成模型， 通过异构的视觉编码-解码网络结构，并引入基于用户反馈的强化学习（RLHF）和细粒度的提示-隐变量对齐技术，提高了模型对图像多尺度信息的建模能力，在用户Prompt输入的理解能力方面也实现了进步。\r\n\r\n右脑科技\r\n\r\nRightBrain AI是一家视觉内容AI创作平台，致力于打造中国领先的视觉内容AI创作平台，打造AI图像、视频创作平台，构建新一代的创作生态。旗下有Vega AI绘画生成产品，为用户提供AI智能生成业务。通过AI智能结合用户输入字段进行智能图片生成，提升创作者工作效率，为创作注入更多可能性。\r\n\r\n造物云\r\n\r\n造物云是一家AIGC+3D内容生成解决方案提供商，已发布全球首个AIGC+3D融合的高质量商品图、视频、文案的创作产品，帮助品牌、电商、设计公司低成本、高质量的创作海量商品营销内容。造物云发挥AIGC扩散化和3D结构化的彼此优势，为电商内容制作提供了低成本、高质量产出的解决路径。发布以下四个新产品：AI商品摄影、AI商品摄影·3D、AI视频、AI帮写营销文案。\r\n\r\n极睿科技\r\n\r\n极睿科技是一家时尚零售业人工智能赋能服务提供商，专注于将人工智能技术落地于时尚、零售行业，致力于用AI来提升消费者的购物体验，帮助商家\"一键上传\"产品，从而为其节省人力成本，从时尚领域切开服饰电商、时尚内容媒体、服饰品牌及零售门店的市场；公司提供三个产品：自研的AI开放平台AIFashion 、电商智能化运营产品ECPro易店通及时尚品牌智能数据中台PIM。\r\n\r\n****************************************************************************************• 视频****************************************** ********************•******************************************************************\r\n\r\n\r\n冰河物语\r\n\r\n\r\n冰河物语是一家AI视频特效制作商，聚焦人工智能算法在视频特效制作领域中的应用，目前已利用目前世界上领先的算法，自研开发了DSE海豚智能特效平台(前期框架、正在以公司名义申请多项发明专利)，用以实现特效的模块化、 自由组合化和便捷化，致力于改变现有中国外特效制作的传统方式，具有较为广阔的应用空间。\r\n\r\n一帧秒创\r\n\r\n一帧秒创是基于秒创AIGC引擎的智能AI内容生成平台，为创作者和机构提供AI生成服务，包括文字续写、文字转语音、文生图、图文转视频等创作服务，一帧秒创通过对文案、素材、AI语音、字幕等进行智能分析，快速成片，零门槛创作视频。\r\n\r\n************************************************************************************• 音频****************************************** ********************•**************************************************************\r\n\r\nDeepMusic\r\n\r\n北京灵动音科技有限公司(DeepMusic)是一家致力于人工智能音乐的公司，成立于2018年2月。创始团队来自清华大学，核心技术来自清华大学计算机系智能技术与系统国家重点实验室，已有5年技术积累，清华大学知识产权技术入股公司。\r\n\r\n公司致力于运用AI技术从作词、作曲、编曲、演唱、混音等方面全方位降低音乐创作及制作门槛，为音乐行业提供新的产品体验，提升效率。2018年2月获得华控基石基金、李健个人的数百万元天使轮投资，2020年8月获得TME领投的数千万元A轮融资。\r\n\r\n可道\r\n\r\n可道AI搜罗全网优质内容，提供独特灵感视角，帮助marketer从消费者洞察、产品定位、品牌推广、营销创意到内容策划提供全流程智能化的 AI 自动生成服务。\r\n\r\n\r\n标贝科技\r\n\r\n标贝科技是一家智能语音交互技术公司，深耕智能语音交互，提供语音合成整体解决方案及数据服务。公司提供多行业语音合成解决方案；打造了声音自选平台\"声音超市\"，汇集千余种音色，涵盖多种风格、功能和场景，所听即所得，满足各种企业及时应用高质量合成语音和声音定制需求。\r\n\r\n************************************************************************************• 数字人/元宇宙 3D****************************************** ********************•**************************************************************\r\n\r\n山漫文化\r\n\r\n山漫文化是一家虚拟人IP研发商，通过利用虚拟现实技术和AIGC技术，让经典IP在元宇宙中重新焕发光彩，并发挥出更大的商业价值。致力于成为元宇宙时代的\"迪士尼\"。\r\n\r\n魔拟科技\r\n\r\n魔拟科技是一个由AI人工智能（自然语言处理）驱动的智能虚拟人应用平台，打造中国专业版chatGPT，开创性的研发出具有边界的虚拟人chatGPT，通过智能虚拟人建立有边界的数据库，针对性的对所有的服务进行智能互动，代替线上线下的客服、营销、销售等工作内容，因为所使用的数据库是专属的内容，所以更有权威性，更加准确、更加安全可控，当然也更加智能化。近日ITP Holdings拟收购魔拟科技，加速布局元宇宙。\r\n\r\n万像科技\r\n\r\n万像科技是一家虚拟偶像全栈式服务商，旨在依托公司自主研发的数字人技术为虚拟偶像市场提供优质服务。万像科技以电商直播为切入点，将虚拟偶像快速应用于直播带货，此外，万像科技也为B端企业提供虚拟偶像的技术服务。万像科技瞄准的是技术产品化后在虚拟偶像、虚拟主播上的快速落地应用和商业变现。\r\n\r\n灵犀深智\r\n\r\n灵犀深智是一家AI主播技术开发商，主要聚焦在AI主播，想在电商+直播+短视频的\"带货\"场景中替代真人主播，成为全新范式的交互平台。灵犀深智有三部分内容，虚拟形象、虚拟声音，以及智能评论、智能讲品、营销策略在内的智能互动产品，其中智能互动产品是其核心差异点。\r\n\r\n八点八数字\r\n\r\n八点八数字是一个AI虚拟人全链路服务提供商，公司致力于虚拟人AIGC技术，为客户提供虚拟人全产业链技术解决方案。八点八数字推出中国首个双引擎渲染架构的虚拟人内容生成引擎-XMEN.AI。企业客户能够借助XMEN.AI快速生成虚拟人短视频、开启虚拟人AI直播、部署ChatGPT对话机器人、开展元宇宙活动展览等，是中国首家打通虚拟人元宇宙全场景应用的引擎产品。通过双引擎混合渲染架构，XMEN.AI既能满足虚拟人视频直播内容的电影级超精度画质输出，又能满足对话机器人、元宇宙活动展览等场景的零成本高并发渲染。\r\n\r\n来画科技\r\n\r\n来画科技是一家新一代动画及数字人智能生成平台开发商。基于以AIGC（人工智能生成内容）为代表的人工智能技术，打造了新一代动画和数字人智能生成平台。平台集成AIGC数字营销云、智能生成动画、 Chat智能助手等核心能力，助力AI内容创作。围绕数字人相关业务，其推出了来画数字人1.0---半驱动式数字人（照片数字人、数字人AI口播视频等）、来画数字人2.0---自驱动数字人（来画Chat智能助手等）等主要产品。\r\n\r\n铭顺科技\r\n\r\n铭顺科技是一家数字人私有化部署方案提供商，致力于为国人提供高品质的数字人技术解决方案。产品包括数字人克隆系统、数字人直播系统、数字人短视频创作系统和声音克隆系统等，这些产品具有无限免费克隆、无限免费使用、源码级交付和私有化部署等优势。  \r\n\r\n深空交响\r\n\r\n\r\n深空交响是一家3D娱乐应用技术研发商，利用新潮艺术与AI技术结合，让每个用户都可以轻松创造前所未有的一下代互动3D娱乐体验。\r\n\r\n星图比特\r\n\r\n\r\n星图比特是一家原生智能数字内容资产科技服务商，主营业务包括 AIGC+元宇宙平台服务、智能应用定制开发、智能云和基础设施、智能技术运营、应用研发和开放式创新。公司核心产品灵境智能数字资产管理云(AI-DAM)是基于AI生成技术(VAE、GAN、GPT、Diffusion等模型)根据业务需求生成 文本、图像、音视频等内容，并通过Layer2区块链技术生成数字资产，从而助力元宇宙数字商业的发展。\r\n\r\n![图片](https://image.cubox.pro/cardImg/2023090621581552229/79743.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n**行业应用/模型 - 公司介绍**\r\n\r\nAIGC行业应用层是指人工智能技术在各行业领域的具体应用，例如安防、金融、教育、医疗、驾驶、物流、交通等。在这个层次上，人工智能技术被广泛应用于各个行业中，为各行各业提供了更高效、更智能、更便捷的解决方案和服务。\r\n\r\n******************************************• 金融****************************************** ********************•********************\r\n\r\nWinGo\r\n\r\n\r\nWinGo财经文本数据平台（中文名为\"文构财经文本数据平台\"）是中国首家基于上市公司披露文本的人工智能财经数据平台。平台从学术研究和业界量化投资需求出发，聚焦于海量财经文本数据，应用自然语言处理、深度学习和人工智能技术对财经文本进行深度加工，为用户提供财经文本的词频、相似词、文本特征等全新深度处理的数据，从而为学术研究、投资决策应用等提供多方位支持。\r\n\r\nWinGo数据平台由业内专家和高校知名学者主持设计，打破了财经文本分析的技术壁垒，大幅降低研究成本，为广大研究和分析人员开辟出全新的研究模式。\r\n\r\n摸象大数据\r\n\r\n\r\n摸象科技专注AI+金融赛道，是未来人工智能银行建设及联运商。摸象科技自主研发了数据智能中台和AI直营银行两大服务产品，用大数据＋AI为银行提供一站式全自动运营解决方案，为银行智慧零售\"降本增效\"，帮助国内2000+银行全面实现金融全自动化场景实时推荐智能运营，被亿欧评选为2020年中国人工智能商业落地价值潜力企业100强，并成为杭州未来科技城准独角兽企业、鲲鹏计划企业。\r\n\r\n有连云\r\n\r\n\r\n有连云，国内领先的金融AIGC服务提供商。以生态连接为核心，深耕金融场景，运用自然语言处理、大数据和知识图谱技术，为大型金融机构及上市公司等龙头企业提供智能创作、智能连接、智能风控为一体的金融AIGC应用解决方案，辅助销售、市场与风控决策，实现显著的增益、降本、增效。\r\n\r\n飞笛科技\r\n\r\n\r\n飞笛科技创办于2022年1月，是一家将内容数字化和AIGC技术深度运用于线上财富管理和买方服务领域的创新型金融科技公司，致力于成为中国领先的全场景财富管理数字化运营服务提供商和新一代金融数据服务商，以帮助金融机构实现传统零售和经纪业务的数字化转型，帮助用户获得更好的买方服务并实现可持续回报。   \r\n\r\n\r\n魔数智擎\r\n\r\n\r\n魔数智擎MagicEngine成立于2015年，是行业领先的AI决策智能服务商，国家高新技术企业。秉持\"AI引领业务决策，让组织智能化\"的发展愿景，魔数智擎依托国际顶尖的机器学习技术，打造可解释、可干预、简单化的人工智能决策模型平台，提供高效先进的模型全生命周期解决方案与服务体系，帮助客户大幅提高模型生产、迭代和管理效率，将人工智能建模工作效率提高30\\~40倍，输出落地业务的决策智能平台。\r\n\r\n目前，魔数智擎已完成2轮融资，业务覆盖金融、医疗、教育、制造、电力、新能源、研究等多行业领域，在智能风控、精准营销等场景，助力企业科技赋能、合规运营，创造更高商业价值。\r\n\r\n\r\n同花顺\r\n\r\n\r\n浙江省同花顺人工智能研究院是经过浙江省批准成立的，同花顺全资打造的人工智能技术创新平台与合作平台。研究院依托国家人才政策，吸引国内外高端人工智能领域专家学者加入，同时积极与国内外相关研究机构、高等院校开展产学研合作，推动人工智能基础理论和应用技术的研究，孵化了一批独立人工智能项目组和人工智能产品，成为驱动同花顺技术变革和金融产业变革的核心引擎。\r\n\r\n************************************************************************************• 医疗****************************************** ********************•**************************************************************\r\n\r\n\r\n力文所\r\n\r\n力文所是一家创新AI蛋白质设计服务商，公司从蛋白质共进化的规律出发，专注于以\"人工智能算法+湿实验流程\"驱动并赋予蛋白质更为广阔设计和生产生活应用场景，用于解决环境保护、食物安全、医疗等具有挑战性且更富有社会意义的问题。\r\n\r\n阿里健康\r\n\r\n\r\n阿里健康呈现出同时推动\"线上+线下\"双闭环医疗健康服务的特色，力图打造\"互联网+医疗\"的全方位服务体系。阿里健康格外重视医疗智能AI的建设：早年即参与万里云的A轮融资，并联合打造医疗AI产品\"Doctor You\"应用于远程诊疗；打造阿里健康AI开放平台，便于行业医生、科研人员和开发者沟通交流。同时还投资了除万里云外的多家AI医疗服务或技术研发企业，如德生堂、熙牛科技等，涉及到医疗影像、医疗器械、HIS系统等领域。   \r\n\r\n\r\n腾讯觅影\r\n\r\n\r\n基于腾讯云的安全存储与强大算力的一站式医学人工智能开放创新服务平台。它能满足各类医学影像数据的安全管理和高效标注，内置近百种临床常用算法模型，加速临床影像科研和产品研发，助力医学人工智能产学研创新合作与成果转化。腾讯觅影拥有专业的人工智能数据处理机房，为AI研究提供了安全可靠的基础设施保障；价值数亿的GPU计算集群，支撑着深度学习网络的快速迭代，单个检查超过500张图片，6s即可运算处理完成。为AI模型的快速迭代优化和病种扩充保驾护航。   \r\n\r\n\r\n联影智能\r\n\r\n\r\n联影智能冠状动脉CT造影图像血管狭窄辅助评估软件（又称联影智能冠脉AI软件）正式获批中国国家药品监督管理局 (NMPA) 三类医疗器械注册证。联影智能冠脉AI软件可基于患者冠脉CTA影像完成冠脉重建、量化分析、报告书写与胶片排版，医生在任意阅片电脑上确认诊断结果与报告内容后，即可一键归档、打印胶片，助力临床工作效率大幅提升。既减少医生的工作负担，也让更多患者能够及时获得准确的诊断结果。突显了AI技术在临床医疗领域的巨大潜力。   \r\n\r\n\r\n灵医智惠\r\n\r\n\r\n灵医智惠是由百度大脑技术驱动的AI医疗品牌。灵医智惠聚焦基层及院端，带来智慧医院解决方案、区域「爱助医」解决方案、GBI-医药数据情报服务，同时携「灵医Bot」亮相大会，助力医疗大健康行业智能化变革。依托百度大脑的核心技术与AI能力，构建医疗AI中台、医疗知识中台和医疗数据中台，产品和服务覆盖临床辅助决策支持（CDSS）、病案内涵质控、DRG/DIP智能控费、单病种上报与质控、医疗大数据服务、科研平台等领域。近几年在助力医院、赋能政府、造福患者及服务药械等四个方面进行了深入实践，践行社会责任的脚步从未停歇，持续不断向社会输出AI医疗能力，助力提升医疗行业的效率、质量。百度灵医智惠目前全国已落地800+医院，4000+基层医疗机构。\r\n\r\n迈瑞医疗\r\n\r\n\r\n迈瑞医疗与腾讯LAB签署AI合作框架协议，共同研发血细胞分析的AI产品，并进一步探索AI技术在体外诊断的融合与应用。通过该合作，双方将进一步研发具备世界顶尖成像质量和细胞识别能力的血细胞形态学检测设备与系统应用。   \r\n\r\n\r\n飞利浦医疗\r\n\r\n\r\n以AI为中心的健康医疗生态系统，包罗了\"全生命周期\"与健康相关的每一个时刻、每一个场景，覆盖了整个健康产业链的每一环，包含了大量的细分领域和应用场景，例如：基因分析（疾病预测）、医疗影像识别、临床辅助诊断、药物研发、医院管理、健康管理、虚拟助理、医疗机器人、医学研究平台等。作为AI医学影像领域的创新企业，\"飞利浦星云医学影像人工智能平台\"获得\"全球人工智能产品应用博览会\"金奖。飞利浦在2018年智博会上展示AI技术驱动的产品和解决方案。   \r\n\r\n\r\n开立\r\n\r\n\r\n开立医疗依托在超声诊断领域深厚的技术底蕴优势，今年将推出具有全球领先超声AI功能的高端产品，引领超声智能化与精准化的医疗趋势。开立超声技术畅享会在CMEF2021上为大家呈现了一场超声智能化时代的技术盛宴，展示了全方位和多元化的智能临床解决方案，助力改善诊断准确性、提高诊断效率、降低医疗成本、提升患者满意度等，致力于构建基于人工智能和大数据的一体化智能诊疗体系。\r\n\r\n************************************************************************************• 游戏****************************************** ********************•**************************************************************\r\n\r\n行者AI\r\n\r\n行者AI致力于使用人工智能和机器学习技术提高游戏和文娱行业的生产力，打造一个游戏行业从研发到营销的一站式AI赋能平台。先后推出了AI虚拟玩家、AI美术资产生产、AI音乐资产生成、AI全球合规性审查、AI防拉人等一系列产品。\r\n\r\nLayaAir\r\n\r\n\r\nLayaAir是LAYABOX 2016年发布的全平台3D引擎产品，拥有全工作流高效开发环境。支持2D、3D、VR与AR产品的开发，一次开发可同时发布为Web、小游戏、Native APP产品。拥有超百万开发者，服务众多知名企业，在Web与小游戏领域的3D市场中处于国产Web3D开源引擎龙头地位。广泛应用于游戏、广告营销、教育、动画、元宇宙、数字人、数字孪生、智慧城市、工业控制、仿真模拟、国防模拟、线上展示（展览展示、地产、文旅）等众多3D 数字领域。\r\n\r\n************************************************************************************• 教育****************************************** ********************•**************************************************************\r\n\r\n松鼠AI\r\n\r\n\r\n松鼠AI是国内较早布局教育AI SaaS赛道的人工智能独角兽公司，持续切入智能硬件、教育信息化领域，致力于为全球各个国家政府教育部门、中小学、B端教育服务公司等提供从人工智能虚拟老师的教学服务到测评、作业、教务、教学数据化管理等的智适应教育AI SaaS服务。 自2020年以来，松鼠Ai与钉钉展开合作，通过钉钉进行普惠式的教学。\r\n\r\n数据显示，2021年2月份，仅钉钉上，松鼠AI的日活已经超过两百万，月活超过八百万。2021年起，松鼠Ai陆续也和腾讯、英特尔和惠普、华为等软硬件巨头企业以及上海华东师范大学达成战略合作，搭载松鼠AI教学服务系统进入公立学校，给公立学校提供普惠式的人工智能教学方案和解决方案。 目前，松鼠AI战略发力教育信息化，为69000家公立学校提供智适应教育AI SaaS服务，用户数突破2000万，获两轮国家队融资，并会持续布局智能硬件，以及开展AI职业教育等新的赛道，积极探索教育信息化新生态。\r\n\r\n优必选\r\n\r\n\r\n优必选旗下人工智能及机器人教育解决方案针对校内校外、B端C端的布局，优必选点全面发力AI教育，一个重要原因是前文提到的国家政策的支持，另一个原因则是AI技术上的相对\"成熟\"。相比C端的实际应用，教育对于技术的要求并没有那么高，比如想进行语音识别方面的基础教育，那么大概利用相关技术在实际应用中的80%的水平就够了，教育需要有一点留白，学生才能通过算法调优。\r\n\r\n海康威视\r\n\r\n\r\n在教育信息化2.0背景下，不断加强前沿技术在教育领域的创新应用。为人才培养、教学方法改革、教育治理能力等各场景提供智慧教育行业解决方案。通过智能物联网技术，整合现有信息系统，实现物信融合，加快教育现代化，提高教育质量。\r\n\r\n科大讯飞\r\n\r\n\r\n科大讯飞走的是一条\"平台+赛道\"的路子。\"平台\"即为行业提供人工智能服务能力，令开发者可以通过平台便捷地使用其AI技术。目前科大讯飞业务组成主要由教育领域、智慧医疗、智慧城市、开放平台及消费者业务、智慧汽车、智慧金融、运营商七个板块所组成。如果单独来看，这七个板块每个都有着极大的发展潜力，但科大讯飞并没有能力\"面面俱到\"。\r\n\r\n作为语音识别的领头者，科大讯飞的盈利模式仍然只是简单的\"卖技术\"。盈利模式的孱弱，让科大讯飞很长一段时间里都处于增长困难的边缘。而从2017年起，科大讯飞开始将目标瞄向了教育赛道，发布了六款面向教育领域的产品。到了2018年，其教育领域营收迅速扩大至21.44亿元，占总营收的27.08%。\r\n\r\n******************************************• 营销****************************************** ********************•********************\r\n\r\n奥创光年\r\n\r\n\r\n奥创光年是一家AI全链路营销解决方案提供商，专注于为企业客户提供从营销策略洞察、AI内容制作、AI智能投流到DAM内容管理的全链路营销解决方案。已推出Mogic Content AI Studio、Mogic Copilot等产品服务。其中Mogic Copilot为用户提供定制化的高端AI视频服务，这项服务更多聚焦在生成式AI领域， 完成人工很难完成或完成需要巨大成本的工作任务，帮助用户完成创意决策。\r\n\r\n美数科技\r\n\r\n\r\n美数科技是一家SaaS级广告变现平台，专注于为行业参与者提供自主化、自动化、智能化一站式解决方案。旗下拥有三大核心产品：美数AdMateS，为中国头部 APP 商业化变现提供SaaS服务和私有化定制服务，其目标是：\"做媒体商业化的可信赖搭档\"；美数AdMateM，服务于初创的、小而美APP的免费版聚合平台产品，通过提供完整的 SDK 聚合功能、多种组合的流量分发策略、数据监测和分析等功能，帮助中小体量开发者提升变现效率和效益；美数AdMateX，一个第三方的、专注优质流量和透明交易的 AdExchange 和 SSP，其目标是：为开发者和广告主提供高品质移动流量交易服务，实现与精准用户的有效沟通。\r\n\r\n句子互动\r\n\r\n\r\n句子互动是一家对话式营销云技术服务商，主营业务是基于微信生态，为用户提供集销售、市场和售后于一体的智能机器人客服系统，并通过智能对话、数据分析帮助企业增加用户粘性。\r\n\r\n光唯文化\r\n\r\n\r\n光唯文化是一家电商AI解决方案提供商，专注于提供先进的电商AI解决方案，为客户降低直播电商的入局门槛和运营成本。产品生态包括利用数字人进行直播带货、专属电商AI模型生成直播脚本、文案和产品场景图等。为了更大效率的提升电商领域的生成效率，在私有化部署大语言模型后，光唯文化对模型展开垂直行业的模型训练。\r\n\r\n超会AI\r\n\r\n\r\n基于 AI 的智能内容引擎。为市场营销人员提供基于 AI 的内容生产工具，并提供企业级的 AI私有数据集解决方案。帮助企业轻松创造内容\"找到客户\"、快速定制内容应用\"服务客户\"。上线两个月，有 5 万用户使用，3000 +付费用户，200 +个团队客户。\r\n\r\n乐言科技\r\n\r\n\r\n基于 AI 的智能内容引擎。为市场营销人员提供基乐言科技是一家人工智能整体解决方案提供商，专注于认知智能技术产业应用，致力于提供电商AI SaaS服务，致力于将先进的认知计算技术赋能电商客服、智慧教育、政务咨询、医疗问诊等各个公共服务垂直领域，提升行业效率，降低人力成本并挖掘更多客户价值。\r\n\r\n云蝠智能\r\n\r\n\r\n云蝠智能致力为百万企业提供多模态的AI数字化销售，为企业提供CRM及AICC智能客户联络中心有效结合的SAAS产品，在ChatBOT和CRM基础上提供包括销售线索、AI对话（AI外呼、接听）、人机协同、AI辅助人工、数字人（短视频、数字人客服、无人直播）等产品。公司希望通过在AI智能及MA营销自动化的技术优势赋能销售，助推智慧销售，最终实现降低获客成本的同时提升获客效率。\r\n\r\n绘话智能\r\n\r\n\r\n上海绘话智能科技有限公司是国内领先的销售科技（SalesTech）公司，建立了基于语音识别、自然语言处理和数据挖掘等人工技术驱动的新一代销售支持平台，帮助销售团队提升执行力、有效缩短成单周期，实现规模化增长。\r\n\r\n云享智慧\r\n\r\n\r\n云享智慧于2016年成立，自成立以来，公司陆续发布了线上智能导购软件、客户心声收集调查软件（VOS）、ECBI数据报告、私域渠道搜索及推荐引擎、员工培训软件及种草平台等，并与多家头部快时尚、美妆、奢侈品行业签订了长期合约。\r\n\r\n******************************************• 商业智能****************************************** ********************•********************\r\n\r\nGrowingIO\r\n\r\n\r\nGrowinglo是用户行为数据分析产品研发商，无需埋点即可采集全量、实时用户行为数据，帮助管理者、产品经理、市场运营、数据分析师、增长黑客等提升转化率、优化网站/APP，实现用户快速增长和变现。\r\n\r\n博鼎国际\r\n\r\n\r\n博鼎国际是一家品牌全球化智能营销服务商，目前业务主要覆盖欧美地区，专注于出海营销服务领域，推出了adtarg出海营销Saas平台，通过整合CIS客户洞察系统和MLS市场聆听系统，致力于帮助出海企业进行数字化、精细化营销服\r\n\r\n务。\r\n\r\n卖家精灵\r\n\r\n\r\n卖家精灵隶属成都云雅信息技术有限公司，是一款亚马逊卖家工具类SaaS软件，基于大数据和人工智能技术，为亚马逊跨境卖家提供一站式选品、市场分析、关键词优化、竞品调研、产品监控等功能，帮助亚马逊卖家发现蓝海市场，打造潜力产品等。\r\n\r\n神策数据\r\n\r\n\r\n神策数据是国内专业的大数据分析和营销科技服务提供商，为企业提供神策营销云、神策分析云、神策数据根基平台三大产品方案，通过全渠道的数据采集与全域用户1打通，全场景多维度数据分析，全通道的精准用户触达，帮助企业实现数宇化经营。神策数据立足大数据及用户行为分析的技术与实践前沿，提出基于数据流的企业运营框架---SDAF. EJSense （感知）、 Decision（决策）、Action（行动）．Feedback（反馈）的数据闭环，并致力为客户打造基于SDAF 运营框架的数据闭环。业务现己覆盖以互联网、品牌零售、金融、融合媒体、企业服务、高科技、汽车、互联网＋等为代表的30多个主要行业，并可支持企业多个职能部门。\r\n\r\nShulex\r\n\r\n\r\nShulex是一家专注于客户服务与体验的全球化SaaS公司，主营业务为客户体验商业分析与应用解决方案。其中VOC是公司的核心竞争力，通过对全网声量的收集与分析，帮助产品规划决策，产品质量优化，销售运营优化，营销投放策路。\r\n\r\n赛舵智能\r\n\r\n\r\n赛舵智能是一家智能客服产品研发商，赛舵主要聚焦语音识别、语音合成、自然语言处理和语义理解相关技术和应用，致力于为当地金融科技企业及传统金融机构提供本地化的催收、质检等Al智能客服产品及服务，解决客户在客服方面的痛点。目前赛舵智能提供的产品形态主要为催收、质检、销售及客服四方面智能机器人，支持私有云+Saas的部署方式。\r\n\r\nAIDA Technologies\r\n\r\n\r\nAIDA是一家专注于基于AI的预测分析和智能系统的公司，主要通过机器学习为金融服务企业提供决策支持。\r\n\r\n有米云\r\n\r\n\r\n有米云是一家数据处理和存储服务提供商，经营范围包括人工智能应用软件开发；人工智能硬件销售；互联网数据服务；物联网技术研发；物联网技术服务；养老服务；数据处理和存储支持服务等。\r\n\r\n************************************************************************************• 跨境电商****************************************** ********************•**************************************************************\r\n\r\nQuickCEP\r\n\r\nQuickCEP是一家中国品牌出海营销SaaS服务商，基于自主研发的CEP(Consumer Engagement Platform)平台，专注为中国跨境独立站企业提供面向海外用户的一站式SaaS营销工具及解决方案。\r\n\r\n跨海科技kua.ai\r\n\r\nKua.ai实验室在2022年成立，由一批人工智能和图形，算法方面的研究人员和技术人员组成。我们的成员来自于Amazon，腾讯，卡耐基梅隆大学，中山大学等商业机构和高等学府。我们致力于将Al内容生成领域最优秀的技术通过应用的方式介绍给国内用户。kua.ai实验室与粤港澳大湾区数宇经济 (1DEA)研究院、数说故事、中山大学、澜舟科技等行业领先的人工智能机构有深度合作，这保证了我们持续站在技术前沿，为用户提供最先进的技术工具。\r\n\r\n万有引力\r\n\r\n帮助服装、首饰设计师做改款和测款，将设计师的工作效率成百倍提高。服装的测款。例如我是服装店店主，不知道什么产品好卖，那么我可以借助Al生成很多衣服图片和模特展示图，私域或者店铺先上架让用户下订单。先下单、后生产，过程中都不需要设计师，完全可以用Al工具调节参数，形成一个全新的设计，一种CtoB的反向定制市场就展开了。\r\n\r\nFOSHO\r\n\r\nFOSHO公司成立于2021年，总部位于深圳，在香港和美国设有分支机构。他们为出海品牌提供了一站式AI联盟营销云平台，利用新一代的AI技术来管理营销合作伙伴和销售闭环。通过数据驱动、链接本地渠道生态以及覆盖整个本地化营销漏斗的方式，FOSHO的解决方案帮助出海企业实现品牌和经营双增长。\r\n\r\n及时语\r\n\r\n及时语成立于2021年，依托Al技术，专注为跨境电商卖家提供智能客服Saas平台。平台功能包括消息自动回复、IM聊单、情绪管理、订单管理、语种翻译等。公司已完成多个产品和技术方面的进展，拥有一支经验丰富的团队。将继续完善产品功能、优化模型，并拓展海外市场。\r\n\r\nRobosell\r\n\r\nRobosell Recovery 具有 ChatGPT 功能，可生成个性化副本，提供经过验证的自动化策略，并嵌入 Shopify 管理面板，同时捕获放弃购物车、结账和浏览。\r\n\r\nAttribuly\r\n\r\n深圳触海科技成立于2019年，国家高新技术企业，注册地深圳南山;2022年8月上线beta版本，2023年3月推出收费版本。Attribuly拥有自研沙盒机制，手握多项专利，在隐私政策收紧 （10S14升级和Cookie禁令等）挑战下仍能实现99%+的广告归因；相比传统归因技术，实现更多数据、更快部署、更深洞察，高度匹配AIGC工作流自动化和用户分析场景；Shopify官方唯一推荐的归因应用，少数ProductHunt月榜第一的中国软件。\r\n\r\nPACVUE\r\n\r\nPacvue是一家美国企业软件解决方案提供商，在动态、可定制的仪表板中直接访问用户数据，包括零售、广告、销售和库存数据等，利用Al驱动，优化营销和数字货架。\r\n\r\nTikBuddy\r\n\r\n\r\nTikBuddy为数据驱动型营销和管理需求提供全面解决方案，并提供免费的浏览器扩展，可直接集成到Tik Tok中，帮助轻松管理账户。\r\n\r\n鲸麦GemX.ai\r\n\r\n\r\n鲸麦GemX.ai是一家数据驱动的品牌出海一站式解决方案提供商；深度挖掘亚马逊市场数据，结合chatGPT人工智能模型对竞品进行全方位解析，帮助亚马逊精品卖家完成从选品调研到产品开发的全过程。旗下热门产品为亚马逊轻量级ERP，支持亚马逊全站点、多店铺和小程序，帮助亚马逊卖家随时随地了解店铺运营数据，轻松完成利润核算和运营管理。\r\n\r\n![图片](https://image.cubox.pro/cardImg/2023090621581572154/87950.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n**报告申明**\r\n\r\n**9.1 团队介绍**\r\n\r\n非凡产研是非凡资本旗下专业的新商业创新及发展研究中心。非凡产研专注于商业场景下国内及出海企业服务生态领域的研究，涉及方向包括：新营销、新零售、新体验等，来帮助品牌和商家在全球化和数字化的时代获得先机和提升竞争力，同时，非凡产研致力于将数据技术、人工智能和自动化等新技术与不同领域传统产业相结合，包括：消费零售、本地生活、医疗健康等，助力企业插上数智化的翅膀。团队成员来自知名研究咨询公司、私募基金和科技媒体等，是一支具有深入洞察、专业知识和丰富资源的分析师团队。\r\n\r\n**9.2免责声明**   \r\n\r\n本报告由非凡产研发布，本报告版权归非凡产研所有。任何中文转载或引用，需注明报告来源，国外机构如需转载引用，请提前联系授权。\r\n\r\n本报告为非凡产研作为第三方机构的独立原创分析，报告内容不代表任何企业的立场，且均不构成对任何人的投资建议。因此投资者务必注意，因据此做出的任何投资决策与非凡产研及其员工或者关联机构无关。\r\n\r\n在法律许可的情况下，非凡产研及其关联机构可能持有报告中提到的公司的股权，或为其提供或争取提供筹资或财务顾问等相关服务，其员工可能担任报告中所提及公司的董事。\r\n\r\n**- END -**\r\n\r\n作者 \\| 化佳、嘉橙\r\n\r\n审核\\|斯基\r\n\r\n*** ** * ** ***\r\n\r\n\r\n**- 推荐阅读 -**\r\n\r\n\r\n**行业洞察****\\|****** [全球风险投资遇冷，AIGC赛道能否一枝独秀?](http://mp.weixin.qq.com/s?__biz=MzU5Mjg5MjQ5Ng",
        "tags": [],
        "line": 60,
        "startOffset": 1828,
        "endOffset": 31271,
        "filePath": "Sources/CuboxSync/行业图谱 - 2023年中国AIGC行业图谱V3.0-2023-09-06.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159277,
        "isNativeComment": false
      },
      {
        "id": "ve6erg458",
        "text": "&mid=2247506762&idx=1&sn=f061e6e66dbad24bb415ac50ba63aee9&chksm=fe1a5c75c96dd563551586ede92f636ed8d88db4cf0da72b5fd32a8dcbbff603a773c3e2c5ba&scene=21#wechat_redirect)\\|[创意变革与市场颠覆：AIGC对广告行业的全面影响](http://mp.weixin.qq.com/s?__biz=MzU5Mjg5MjQ5Ng",
        "tags": [],
        "line": 802,
        "startOffset": 31518,
        "endOffset": 31763,
        "filePath": "Sources/CuboxSync/行业图谱 - 2023年中国AIGC行业图谱V3.0-2023-09-06.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615158967,
        "isNativeComment": false
      },
      {
        "id": "dgajdypk3",
        "text": "&mid=2247505525&idx=1&sn=e4ae22cf19e9613b07bd1bd2a79c5584&chksm=fe1a514ac96dd85cb6f64f35b6487db7783ea504087bc6dabfefafcafb25d02c12b00e1f77ae&scene=21#wechat_redirect)\\|[AIGC如何革命性提效内容营销](http://mp.weixin.qq.com/s?__biz=MzU5Mjg5MjQ5Ng",
        "tags": [],
        "line": 802,
        "startOffset": 31997,
        "endOffset": 32233,
        "filePath": "Sources/CuboxSync/行业图谱 - 2023年中国AIGC行业图谱V3.0-2023-09-06.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159446,
        "isNativeComment": false
      },
      {
        "id": "73kkike7o",
        "text": "&mid=2247505723&idx=1&sn=4dfcacfbb4ca16d332a2a41dd7e615da&chksm=fe1a5004c96dd91284ea6fee0d1fca3d2db82dccd0f273169b6c0ac3fcbc0d505c861a6dd7fb&scene=21#wechat_redirect)\r\n\r\n**公司调研 \\|** [百度](http://mp.weixin.qq.com/s?__biz=MzU5Mjg5MjQ5Ng",
        "tags": [],
        "line": 802,
        "startOffset": 32474,
        "endOffset": 32711,
        "filePath": "Sources/CuboxSync/行业图谱 - 2023年中国AIGC行业图谱V3.0-2023-09-06.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615158923,
        "isNativeComment": false
      },
      {
        "id": "t0wkalq75",
        "text": "&mid=2247506034&idx=1&sn=8949c16240046f67e086368a594fe678&chksm=fe1a5f4dc96dd65bdeb9374ca4c167ac3f08a26a96975c32138c4afee274d509cd08c679174f&scene=21#wechat_redirect)｜[昆仑万维](http://mp.weixin.qq.com/s?__biz=MzU5Mjg5MjQ5Ng",
        "tags": [],
        "line": 804,
        "startOffset": 32930,
        "endOffset": 33154,
        "filePath": "Sources/CuboxSync/行业图谱 - 2023年中国AIGC行业图谱V3.0-2023-09-06.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159379,
        "isNativeComment": false
      },
      {
        "id": "c1pehq6bu",
        "text": "&mid=2247506224&idx=1&sn=312c60061ff7e90a218008bae7fcb4ce&chksm=fe1a5e0fc96dd71998807829eafc05dc3a8c5f6510e523094c30ab55639f2768f349bbf1008f&scene=21#wechat_redirect)｜[科大讯飞](http://mp.weixin.qq.com/s?__biz=MzU5Mjg5MjQ5Ng",
        "tags": [],
        "line": 804,
        "startOffset": 33374,
        "endOffset": 33598,
        "filePath": "Sources/CuboxSync/行业图谱 - 2023年中国AIGC行业图谱V3.0-2023-09-06.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615158823,
        "isNativeComment": false
      },
      {
        "id": "eovmgta7x",
        "text": "&mid=2247506882&idx=1&sn=534080f48670d86c925ebffd09b8d418&chksm=fe1a5cfdc96dd5eb9117eddda89b5cffdac401c20ea1e617939b06898ffcf908371121e17b3e&scene=21#wechat_redirect)\\|****[](http://mp.weixin.qq.com/s?__biz=MzU5Mjg5MjQ5Ng",
        "tags": [],
        "line": 806,
        "startOffset": 33845,
        "endOffset": 34070,
        "filePath": "Sources/CuboxSync/行业图谱 - 2023年中国AIGC行业图谱V3.0-2023-09-06.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159294,
        "isNativeComment": false
      },
      {
        "id": "3lvwoqep6",
        "text": "&mid=2247506618&idx=1&sn=3e7e070da8b706f3f280db632c2fdb4d&chksm=fe1a5d85c96dd4935fe8d973a3468bb2354a23bd397d6d2d44a50e80e2b11b795cde03d89539&scene=21#wechat_redirect)** [2023年H1全球AIGC行业半年报](http://mp.weixin.qq.com/s?__biz=MzU5Mjg5MjQ5Ng",
        "tags": [],
        "line": 806,
        "startOffset": 34288,
        "endOffset": 34528,
        "filePath": "Sources/CuboxSync/行业图谱 - 2023年中国AIGC行业图谱V3.0-2023-09-06.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615158737,
        "isNativeComment": false
      },
      {
        "id": "nwulat7fi",
        "text": "&mid=2247506618&idx=1&sn=3e7e070da8b706f3f280db632c2fdb4d&chksm=fe1a5d85c96dd4935fe8d973a3468bb2354a23bd397d6d2d44a50e80e2b11b795cde03d89539&scene=21#wechat_redirect)[2023年5月全球AIGC行业月报](http://mp.weixin.qq.com/s?__biz=MzU5Mjg5MjQ5Ng",
        "tags": [],
        "line": 806,
        "startOffset": 34745,
        "endOffset": 34981,
        "filePath": "Sources/CuboxSync/行业图谱 - 2023年中国AIGC行业图谱V3.0-2023-09-06.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159194,
        "isNativeComment": false
      },
      {
        "id": "mdmjn3gnq",
        "text": "&mid=2247505616&idx=1&sn=6b38e458d833fd62eb0020ce878e5915&chksm=fe1a51efc96dd8f9e052996d55215f946547542a81be378ca8d8294bfdaa2af9de12f0053158&scene=21#wechat_redirect)\\|[2023年Q1全球AIGC行业季报](http://mp.weixin.qq.com/s?__biz=MzU5Mjg5MjQ5Ng",
        "tags": [],
        "line": 806,
        "startOffset": 35215,
        "endOffset": 35453,
        "filePath": "Sources/CuboxSync/行业图谱 - 2023年中国AIGC行业图谱V3.0-2023-09-06.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615158664,
        "isNativeComment": false
      },
      {
        "id": "8mrbngmrb",
        "text": "&mid=2247505357&idx=1&sn=2add7a9575e9b2544b4c9eca4a0b042d&chksm=fe1a52f2c96ddbe404ae5c126f13d5f05a5cb5715bc603800251434fbf1de6cd9ea6a8f97ee4&scene=21#wechat_redirect)\r\n\r\n**更多历史文章及报告合集请戳 👉** ****[最全报告合集](http://mp.weixin.qq.com/s?__biz=MzU5Mjg5MjQ5Ng",
        "tags": [],
        "line": 808,
        "startOffset": 35706,
        "endOffset": 35960,
        "filePath": "Sources/CuboxSync/行业图谱 - 2023年中国AIGC行业图谱V3.0-2023-09-06.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159155,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/简单实现一个ChatGPT Plugin - 知乎-2023-09-13.md": [
      {
        "id": "om5ycd67y",
        "text": " '__main__':\r\n        app.run(debug=True, host='0.0.0.0', port=5023)\r\n\r\n我们在`def update_db()`搞来最近的会议数据。\r\n\r\n在`@app.get(\"/all\")`里确定了Api的endpoint。访问该endpoint，也即`http://localhost:5023/all` ，将返回一个list的conference信息。\r\n\r\n其他需要注意的是：\r\n\r\n1. 我们需要CORS来允许[http://chat.openai.com](https://link.zhihu.com/?target=http%3A//chat.openai.com)访问我们的server。\r\n2. `@app.get(\"/logo.png\") `：render 一个logo文件。\r\n3. `@app.get(\"/.well-known/ai-plugin.json\")`： render manifest文件。\r\n4. `@app.get(\"/openapi.yaml\")`：render api说明文件。\r\n\r\n这里我们为我们的插件精心挑选一个清心寡欲的logo，像极了写论文时的我：\r\n![](https://image.cubox.pro/cardImg/2023091323271890885/81966.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n## `openapi.yaml`\r\n\r\n该文件是标准的[OpenAPI](https://link.zhihu.com/?target=https%3A//www.openapis.org/)格式的文档，目的是告诉GPT我们的Plugin提供了哪些function，该如何调用这些function，和function的输出形式是什么。\r\n\r\n分开来讲：首先是插件基本信息的插件的url地址。\r\n\r\n    openapi: 3.0.1\r\n    info:\r\n      title: AI Conferences\r\n      description: Plugin to get information about upcoming AI conferences.\r\n      version: 'v1'\r\n    servers:\r\n      - url: http://localhost:5023\r\n\r\n*** ** * ** ***\r\n\r\nEndpoint：`/all` ，也即访问`http://localhost:5023/all` 的方法和结果。我们这里，我们告诉GPT使用`get`与服务器交流。`summary`则告诉GPT这个function是干啥的用的。\r\n\r\n    paths:\r\n      /all:\r\n        get:\r\n          operationId: getAllUpcomingConf\r\n          summary: Get information about all the upcoming conferences\r\n          responses:\r\n            \"200\":\r\n              description: OK\r\n              content:\r\n                application/json:\r\n                  schema:\r\n                    $ref: '#/components/schemas/getAllUpcomingConfResponses'\r\n\r\n*** ** * ** ***\r\n\r\nResponse格式：这里告诉GPT该怎么解读返回的结果。\r\n\r\n    components:\r\n      schemas: \r\n       getAllUpcomingConfResponses:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              link:\r\n                type: string\r\n                description: The link to the conference website.\r\n              place:\r\n                type: string\r\n                description: The place where the conference will be held.\r\n              sub:\r\n                type: string\r\n                description: The subfield of AI that the conference is about.\r\n              deadline:\r\n                type: string\r\n                description: The deadline for submitting papers.\r\n\r\n*** ** * ** ***\r\n\r\n放在一起有：\r\n\r\n    openapi: 3.0.1\r\n    info:\r\n      title: AI Conferences\r\n      description: Plugin to get information about upcoming AI conferences.\r\n      version: 'v1'\r\n    servers:\r\n      - url: http://localhost:5023\r\n    paths:\r\n      /all:\r\n        get:\r\n          operationId: getAllUpcomingConf\r\n          summary: Get information about all the upcoming conferences\r\n          responses:\r\n            \"200\":\r\n              description: OK\r\n              content:\r\n                application/json:\r\n                  schema:\r\n                    $ref: '#/components/schemas/getAllUpcomingConfResponses'\r\n    components:\r\n      schemas: \r\n       getAllUpcomingConfResponses:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              link:\r\n                type: string\r\n                description: The link to the conference website.\r\n              place:\r\n                type: string\r\n                description: The place where the conference will be held.\r\n              sub:\r\n                type: string\r\n                description: The subfield of AI that the conference is about.\r\n              deadline:\r\n                type: string\r\n                description: The deadline for submitting papers.\r\n\r\n## 在ChatGPT页面注册Plugin\r\n\r\n搞定上面的之后，需要去ChatGPT的商店注册我们的插件。\r\n![](https://image.cubox.pro/cardImg/2023091323271995309/54092.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n打开plugin store.\r\n![](https://image.cubox.pro/cardImg/2023091323271960725/73619.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n点develop your own plugin.\r\n![](https://image.cubox.pro/cardImg/2023091323271981425/34079.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n输入我们的server地址\r\n![](https://image.cubox.pro/cardImg/2023091323272096239/67098.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n这里点install，安装我们清新寡欲的plugin\r\n![](https://image.cubox.pro/cardImg/2023091323272018429/37780.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n安装好了在这里选定，开始对话！\r\n\r\n## 使用体验\r\n\r\n首先，我们问一下最近都有哪些会议可以投稿：\r\n![](https://image.cubox.pro/cardImg/2023091323272053904/56174.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\nAmazing！看起来挺靠谱，点一下最上方的展开按钮，我们可以看到我们服务器返回给GPT的真实内容：\r\n![](https://image.cubox.pro/cardImg/2023091323272086425/52453.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n可以看到ChatGPT就是把得到的内容翻译成了自然语言。\r\n\r\n## 添加新功能\r\n\r\nOK，我们再实现一个新功能，让ChatGPT可以为我们收藏目标会议，以便今后打算。\r\n\r\n    starred_conferences = []\r\n    @app.get(\"/star/<conf_name>\")\r\n    def star(conf_name):\r\n        update_db()\r\n        for conf in up_coming_conferences:\r\n            if conf['title'] ",
        "tags": [],
        "line": 123,
        "startOffset": 4174,
        "endOffset": 9026,
        "filePath": "Sources/CuboxSync/简单实现一个ChatGPT Plugin - 知乎-2023-09-13.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615156045,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/站在新时代路口的敏捷，如何回应时代之问？-2024-07-12.md": [
      {
        "id": "rih49q1yb",
        "text": "&mid=2247483887&idx=1&sn=152922265de19bdb506ad9fc6f815511&chksm=9b361762ac419e7450fb205a0a8cbe61e967b6f5c83b4a4b98ea116d75ffb0bc3d60cdd77af7&scene=21#wechat_redirect)），这并不只是敏捷社区自身的事，而是行业、国家、乃至地缘政治的时代变迁带来的影响。\r\n\r\n从IT行业内部，软件开发这一领域面临行业环境的四大转变：  \r\n\r\n**1.数据成为IT建设的焦点** 。在信息化、数字化建设的较早阶段，IT项目的焦点是建系统，将原本没有数字化的业务数字化。在这一阶段有大量的软件开发需求。而在几乎所有重要业务已经数字化的今天，IT建设的焦点转向如何利用数据的价值。对现有软件系统所产生的数据的挖掘、整理、分析、呈现的需求，代替了开发新软件系统的需求。\r\n\r\n**2. 云服务和云工具极大丰富。** 二十年前，互联网上的软件应用还相当匮乏，众多组织在信息化时不得不自行开发软件、或者实施沉重的大型软件包------这两个选项的成本都非常高。这一情形在今天已经发生了巨大的改变。几乎能想到的各种信息处理工作都有在线的云服务。小型组织可以灵活组合既有的云服务，实现绝大多数业务的数字化需求，而不必诉诸定制软件开发。\r\n\r\n**3. 人工智能技术长足发展。** 大语言模型和AIGC等新近的人工智能技术发展，不仅能辅助软件开发、极大提高软件开发的生产率（也因此降低对软件开发者的整体需求），甚至能根本上消除对很多软件的需求------例如以自然语言对话作为软件界面，将消除大量对软件导航操作界面的需求。\r\n\r\n**4. 软件产能严重过剩。** 前三项环境转变，都带来一个共同的影响：全社会对软件的总体需求，将不再如十年前那样旺盛。与此同时，过去的二十年见证了软件开发人才的爆炸性增长。此消彼长之下，软件开发的总体产能将呈现严重过剩的态势。这一情况在近两年已经开始显出端倪。\r\n\r\n在IT行业之外，中国的总体环境的三大转变，也对软件开发领域带来至关重要的影响：  \r\n\r\n**5. 美西方对中国的全面遏制。** 中国在科技领域的进步已经引起以美国为首的西方国家的高度警惕。对华为的制裁和对TikTok的打压，标志着美西方对中国IT产业的全面遏制。任何试图进入价值链上游或意识形态高地的尝试，都必然遭遇美西方的打击。\r\n\r\n**6. 国家倡导国内大循环和新质生产力。** 在外向型经济受阻、经济整体增速放缓的宏观形势下，国家倡导从生产、分配、流通、消费四大领域增进国内大循环，倡导以科技创新推动产业升级，将经济发展的重心由重视GDP总量和总体增速调整为重视平衡和质量。\r\n\r\n**7. 一带一路与人类命运共同体的宏大愿景。** 国家将发展视角投向美西方之外的全球南方。在西方集团（或称\"全球北方\"）的49个国家、约10亿人口之外，\"[全球南方](http://mp.weixin.qq.com/s?__biz=MzA3NDE0NTE1Mw",
        "tags": [],
        "line": 19,
        "startOffset": 478,
        "endOffset": 1774,
        "filePath": "Sources/CuboxSync/站在新时代路口的敏捷，如何回应时代之问？-2024-07-12.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159893,
        "isNativeComment": false
      },
      {
        "id": "t4cpj9res",
        "text": "&mid=2247483854&idx=1&sn=a46039fa371ae73dfa7097cfdffc59ec&chksm=9b361743ac419e553a00ceb958c96884393cd2a76566ba81b61d5ac7230b62ef179086e8619b&scene=21#wechat_redirect)中，甲方根本无法获得全部软件研发产物、无法全面感知软件研发过程、无法全程管控软件研发质量，最后的验收沦为走过场、摆样子。如何用既有的敏捷实践（如持续集成）[赋能甲方实现对数字化系统质量的有效管控](http://mp.weixin.qq.com/s?__biz=MzAwMzY4NzM5NA",
        "tags": [],
        "line": 67,
        "startOffset": 3563,
        "endOffset": 3878,
        "filePath": "Sources/CuboxSync/站在新时代路口的敏捷，如何回应时代之问？-2024-07-12.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159978,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/淘天集团大模型应用十大挑战命题发布-2023-10-13.md": [
      {
        "id": "837ox090s",
        "text": "&mid=2247499061&idx=1&sn=163b1dfe14a59127b0929b1c449586d2&chksm=cfa6edd6f8d164c0dc2702c581deacf5d7bb69f7c071f572fb312faeab7ce9a83da8aa91b8c6&mpshare=1&scene=1&srcid=1013L0GLXcLYeENNwUzUFQx4&sharer_shareinfo=ed1adc5d10cc05a8dc8966ab85585fc2&sharer_shareinfo_first=ed1adc5d10cc05a8dc8966ab85585fc2&version=4.1.9.70221&platform=mac\ntags: []\n---\r\n\r\n# 淘天集团大模型应用十大挑战命题发布\r\n\r\n淘天集团集合基础模型和电商应用场景的具体问题，面向高校师生和全社会发布大模型应用十大挑战命题。\r\n\r\n[Read in Cubox](https://cubox.pro/my/card?id=7112467268918839982)  \r\n[Read Original](https://mp.weixin.qq.com/s?__biz=Mzg4NTczNzg2OA",
        "tags": [],
        "line": 3,
        "startOffset": 143,
        "endOffset": 698,
        "filePath": "Sources/CuboxSync/淘天集团大模型应用十大挑战命题发布-2023-10-13.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615160255,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/每次使用 ChatGPT 都要切换全局模式？手把手教你怎样给 OpenAI 配置 Clash 分流规则【纯小白向】 - 开发调优 - LINUX DO-2024-11-04.md": [
      {
        "id": "mw2y1sfec",
        "text": " null)\n        myGPTGroup.proxies.push(HKGroupName);\n      if (SGGroupName !",
        "tags": [],
        "line": 226,
        "startOffset": 11642,
        "endOffset": 11722,
        "filePath": "Sources/CuboxSync/每次使用 ChatGPT 都要切换全局模式？手把手教你怎样给 OpenAI 配置 Clash 分流规则【纯小白向】 - 开发调优 - LINUX DO-2024-11-04.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615156944,
        "isNativeComment": false
      },
      {
        "id": "fdh0thrna",
        "text": " null)\n        myGPTGroup.proxies.push(JPGroupName);\n      if (USGroupName !",
        "tags": [],
        "line": 230,
        "startOffset": 11798,
        "endOffset": 11878,
        "filePath": "Sources/CuboxSync/每次使用 ChatGPT 都要切换全局模式？手把手教你怎样给 OpenAI 配置 Clash 分流规则【纯小白向】 - 开发调优 - LINUX DO-2024-11-04.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615157100,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/每周轮子之 husky：统一规范团队 Git Hooks-2022-05-30.md": [
      {
        "id": "o091kv5cv",
        "text": " 'object') { return } const hooks = pkg.husky.hooks console.log(hooks) } husky() ``` |\r\n\r\n现在我们现在已经能拿到 hooks 相关的配置，然后我们把相关的脚本内容写入到对应的 hooks 可执行文件：\r\n\r\n|-------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n| ``` 1 2 3 4 5 ``` | ``` for (const [name, value] of Object.entries(hooks)) { const script = `#!/bin/sh\\n${value}\\n` fs.writeFileSync(`./.git/hooks/${name}`, script, { mode: '751' }) } ``` |\r\n\r\n执行一下：\r\n\r\n|-----------|-----------------------|\r\n| ``` 1 ``` | ``` node husky.js ``` |\r\n\r\n然后我们就可以看到 `.git/hooks` 下面多了一个 `pre-commit` 可执行文件：\r\n\r\n|-----------------|------------------------------------------------------|\r\n| ``` 1 2 3 4 ``` | ``` > cat pre-commit #!/bin/sh echo hello husky! ``` |\r\n\r\n这时候进行 commit 也可以看到输出：\r\n\r\n|---------------|---------------------------------------------|\r\n| ``` 1 2 3 ``` | ``` > git commit -m \"test\" hello husky! ``` |\r\n\r\n这时候我们已经完成了 husky 大部分的功能，但是这里还存在这么一个问题：**如果现在我去修改 `package.json` 中的 husky 配置，hooks 文件如何同步更新？**\r\n\r\n举个例子，如果现在把 `package.json` 改成这样：\r\n\r\n|-------------------------|------------------------------------------------------------------------------------------------------------------------|\r\n| ``` 1 2 3 4 5 6 7 8 ``` | ``` { \"husky\": { \"hooks\": { -     \"pre-commit\": \"echo hello husky!\" +     \"pre-commit\": \"echo hello husky2!\" } } } ``` |\r\n\r\n然后进行 commit，它输出的仍然是 hello husky!，实际上如果我们不是手动执行写入 hooks 文件这个操作，甚至连第一步都做不到，可是回想上面 husky 的使用方式，我们只需要安装 husky 后进行配置即可，并不需要手动执行什么命令。\r\n\r\n那 Huksy 是如何做到这一点的呢？动动你聪明的小脑瓜，有没有解决方案呢？\r\n\r\n我们先来分析一下为什么无法做到自动同步更新 hooks，归根到底就是因为无法检测修改 `package.json` 后自动执行写入 hooks 操作，那我们不妨换一种思路：**不用在修改 `package.json` 时执行写入操作，而是在执行 hooks 时去执行 `package.json` 中对应的 `hooks`。**\r\n\r\n可能有点拗口，换句话说就是我们在一开始就把所有的 hooks 预注册了，然后在每一个 hooks 脚本中做同一件事：寻找 `package.json` 中对应的 hooks 并执行。\r\n\r\n可能会觉得有点奇技淫巧 ，但也不失为一种曲线救国的方式，而事实上在 husky v4 之前还真的是这么做的。\r\n\r\n那我们如何在一开始就注册所有 hooks 呢？\r\n\r\n翻了一下 npm 的文档，发现有一个 `install` 钩子，它会在 `npm install` 后执行。\r\n\r\n首先我们的项目结构如下：\r\n\r\n|---------------------|-----------------------------------------------------------------------------------------------------------|\r\n| ``` 1 2 3 4 5 6 ``` | ``` . ├── husky-test │   ├── husky │   │   ├── husky.js │   │   └── package.json │   └── package.json ``` |\r\n\r\n在 `husky/package.json` 添加以下代码：\r\n\r\n|-------------------------|-----------------------------------------------------------------------------------------------------------|\r\n| ``` 1 2 3 4 5 6 7 8 ``` | ``` { \"name\": \"husky\", \"version\": \"1.0.0\", \"license\": \"MIT\", \"scripts\": { \"install\": \"node husky\" } } ``` |\r\n\r\n然后在 `husky-test` 安装这个 npm 包：\r\n\r\n|-------------------------|----------------------------------------------------------------------------------------------------------------|\r\n| ``` 1 2 3 4 5 6 7 8 ``` | ``` { \"name\": \"husky-test\", \"version\": \"1.0.0\", \"license\": \"MIT\", \"dependencies\": { \"husky\": \"./husky\" } } ``` |\r\n\r\n这时候执行 `npm install` 会运行 `husky/husky.js` ，我们就可以在这个文件中预注册所有的 hooks，不过在此之前我们先梳理一下整体实现逻辑：\r\n\r\n1. 我们要在 `husky.js` 中预注册所有的 hooks，可以在这个[文档](https://git-scm.com/docs/githooks)中参考所有的 hooks。\r\n2. 我们要在所有的 hooks 中写入脚本内容，使其可以在被执行时寻找 `package.json` 中对应的 hook，并将其执行结果返回。\r\n   1. 因为 hooks 的 exit code 非 0 时要中断本次操作。\r\n\r\n因此，经过梳理后，我们的目录结构调整如下：\r\n\r\n|---------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n| ``` 1 2 3 4 5 6 7 8 9 10 11 ``` | ``` . ├── husky                   // husky 包 │   ├── package.json │   ├── husky.js            // install 入口 │   ├── installer           // 初始化，预注册 hooks │   │   └── index.js │   ├── runner              // 寻找对应的 hook 并执行 │   │   └── index.js │   └── sh                  // 所有 hooks 统一调用脚本 │       └── husky.sh └── package.json            // 测试 ``` |\r\n\r\n我们在 `husky.js` 中调用 install 进行初始化操作：\r\n\r\n|---------------|----------------------------------------------------------|\r\n| ``` 1 2 3 ``` | ``` const install = require('./installer') install() ``` |\r\n\r\n然后在 `installer/index.js` 中预注册 hooks：\r\n\r\n|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------||\r\n| ``` 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 ``` | ``` // installer/index.js const fs = require('fs') const cp = require('child_process') const path = require('path') const hookList = [ 'applypatch-msg', 'pre-applypatch', 'post-applypatch', 'pre-commit', 'pre-merge-commit', 'prepare-commit-msg', 'commit-msg', 'post-commit', 'pre-rebase', 'post-checkout', 'post-merge', 'pre-push', 'post-update', 'push-to-checkout', 'pre-auto-gc', 'post-rewrite', 'sendemail-validate' ] function git(args, cwd = process.cwd()) { return cp.spawnSync('git', args, { stdio: 'pipe', encoding: 'utf-8', cwd }) } function getGitRoot() { return git(['rev-parse', '--show-toplevel']).stdout.trim() } function getGitHooksDir() { const root = getGitRoot() return path.join(root, '.git/hooks') } function getHookScript() { return `#!/bin/sh . \"$(dirname \"$0\")/husky.sh\" ` } function writeHook(filename, script) { fs.writeFileSync(filename, script, 'utf-8') fs.chmodSync(filename, 0o0755) } function createHook(filename) { const hookScript = getHookScript() writeHook(filename, hookScript) } function createHooks(gitHooksDir) { getHooks(gitHooksDir).forEach(createHook) } function getHooks(gitHooksDir) { return hookList.map((hookName) => path.join(gitHooksDir, hookName)) } function getMainScript() { const mainScript = fs.readFileSync( path.join(__dirname, '../../sh/husky.sh'), 'utf-8' ) return mainScript } function createMainScript(gitHooksDir) { fs.writeFileSync(path.join(gitHooksDir, 'husky.sh'), getMainScript(), 'utf-8') } export default function install() { const gitHooksDir = getGitHooksDir() createHooks(gitHooksDir) createMainScript(gitHooksDir) } ``` |\r\n\r\n做完这一步的结果是在安装 husky 时，会自动创建 hooks、并将 `husky.sh` 复制到 `.git/hooks` 中，所有 hooks 都会调用 `husky,sh`：\r\n\r\n|---------------|------------------------------------------------|\r\n| ``` 1 2 3 ``` | ``` #!/bin/sh . \"$(dirname \"$0\")/husky.sh\" ``` |\r\n\r\n在 `husky.sh` 中主要是做一件事，调用 `runner/index`：\r\n\r\n|-------------------|-------------------------------------------------------------------------------------------------------|\r\n| ``` 1 2 3 4 5 ``` | ``` # sh/husky.sh gitParams=\"$*\" hookName=\"$(basename \"$0\")\" npm husky-run $hookName \"$gitParams\" ``` |\r\n\r\n`husky-run` 是我们自定义的一个命令，需要在 `package.json` 中先注册：\r\n\r\n|------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n| ``` 1 2 3 4 5 6 7 8 9 10 11 12 ``` | ``` // husky/package.json { \"name\": \"husky\", \"version\": \"1.0.0\", \"license\": \"MIT\", \"bin\": { +   \"husky-run\": \"./runner/index.js\" }, \"scripts\": { \"install\": \"node husky\" } } ``` |\r\n\r\n所以实际上就是调用 `runner/index`，我们要在这个文件中寻找对应的 hook 并执行：\r\n\r\n|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------||\r\n| ``` 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 ``` | ``` #!/usr/bin/env node const { spawnSync } = require('child_process') const { cosmiconfigSync } = require('cosmiconfig') function getConf(dir) { const explorer = cosmiconfigSync('husky') const { config = {} } = explorer.search(dir) || {} const defaults = { skipCI: true } return { ...defaults, ...config } } function getCommand(cwd, hookName) { const config = getConf(cwd) return config && config.hooks && config.hooks[hookName] } function runner( [, , hookName = '', husky_GIT_PARAMS], { cwd = process.cwd() } = {} ) { const command = getCommand(cwd, hookName) const env = {} if (husky_GIT_PARAMS) { env.husky_GIT_PARAMS = husky_GIT_PARAMS } if (command) { return runCommand(cwd, hookName, command, env) } return 0 } function runCommand(cwd, hookName, cmd, env) { const { status } = spawnSync('sh', ['-c', cmd], { cwd, env: { ...process.env, ...env }, stdio: 'inherit' }) if (status !",
        "tags": [],
        "line": 78,
        "startOffset": 3725,
        "endOffset": 15513,
        "filePath": "Sources/CuboxSync/每周轮子之 husky：统一规范团队 Git Hooks-2022-05-30.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615157094,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/极具潜力的效率启动器 App，Raycast 脚本功能详解 - 少数派-2022-05-30.md": [
      {
        "id": "zpa4dkys4",
        "text": " 0:\r\n                return \"无在线设备\"\r\n            else:\r\n                device_id = devices['data'][0]['id']\r\n                r = requests.delete(\r\n                    f'https://user-api.setapp.com/v1/devices/{device_id}', headers=headers)\r\n                if r.status_code ",
        "tags": [],
        "line": 227,
        "startOffset": 7588,
        "endOffset": 7866,
        "filePath": "Sources/CuboxSync/极具潜力的效率启动器 App，Raycast 脚本功能详解 - 少数派-2022-05-30.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615155915,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/朱啸虎讲了一个中国现实主义AIGC故事-2024-03-08.md": [
      {
        "id": "drxsdbplk",
        "text": "&mid=2691539716&idx=1&sn=d0630dc55f1569f866b9cf485bd283e3&chksm=a9ec1cdf9e9b95c9411b168a2277b1367ccd65156b2a2128232e45ad1d115070e24a27cc7e65&scene=21#wechat_redirect)》，杨植麟是技术信仰派代表，而朱啸虎的观点正好处在与他相反的另一端。\n\n事实上，市场信仰派在中国人数更众，特别是在当下资本泡沫破裂的无奈氛围下。只是，他们有时会羞于展露自己的真实想法------会被鄙视为\"不信仰AGI\"，或不为人类理想而战斗------所以他们大多数时候选择性沉默。\n\n朱啸虎毫不怯懦于公开表达。他近期似乎迷上了这样一句话：\"AIGC PMF（Product/Market Fit，产品/市场匹配），你十个人找不到，投一百个人同样找不到。\"某种程度上，他的观点是展现了一个更现实版的中国AIGC故事。\n\n*你说这些有压力吗？*\n\n*\"我也没啥压力。\"*\n\n*你的观点比很多人都更激烈，在线下被同行或者创业者怼过吗？*\n\n*\"没有啊，我问的问题都回答不了啊。谁能回答出来？\"*\n\n*在你看来，中国的* *AIGC应用已经大爆发了？------外界没有人这么说。*\n\n*\"已经大爆发了。大家都不知道！\"*\n\n这位1974年出生于上海，父亲是数学家，在上一个时代成名作有拉手网、饿了么、滴滴、ofo等的知名投资人，有很强的个人语言风格。他在我们的整个访谈中总共说了16次\"PMF\"、15次\"说实话\"、13次\"没有意义\"、13次\"不烧钱\"、11次\"妈的\"，还有20次\"哈哈哈\"。读起来时常想要笑起来。所以，文章尽量保持了他说话风格的原汁原味。\n\n他看上去心情不错。他说过去一年投资人休假很多，见面这天，他就刚休假回来，还看完了电视剧《繁花》。由于被投公司现金流不错，他一点也不焦虑，连一根白头发都没有。\n\n以下为访谈节选。（为方便阅读，作者进行了文本优化）\n\n![](https://image.cubox.pro/cardImg/123r210dxckcegbmpteetrc6qtei2mnxnse0iq755aid52zaev?imageMogr2/quality/90/ignore-error/1)\n\n**\"我信仰AGI，**\n\n**但我信仰应用啊，**\n\n**我信仰能马上商业化的\"**\n\n**腾讯新闻《潜望》：你是什么时候确定，你不会投场上任何一家中国大模型公司的？**\n\n**朱啸虎：**我们一看就知道，这个肯定没戏。\n\n**腾讯新闻《潜望》：一看就知道是什么时候？**\n\n**朱啸虎：**他们出来融的时候。我们一开始就说了，我就不看好大模型。\n\n**腾讯新闻《潜望》：第一家你看的谁？**\n\n**朱啸虎：**我都不愿意去聊，你知道吗？这没有意义------这些公司，要场景没场景，要数据没数据，你说它有什么价值？而且一上来估值这么贵。\n\n\"AI四小龙\"（云从科技、商汤科技、依图科技和旷视科技）投资人赚钱的没几个，对吧？回到大模型，结果可能还不如\"四小龙\"。\"四小龙\"早年还是有些黄金时代的，一开始收入上去算挺快。大模型你有啥收入啊？\n\n关键是我就现在问你一个很扎心的问题：GPT-4你要不要投入做科研？你做GPT-4科研至少砸四五千万美金。\n\n**腾讯新闻《潜望》：（做科研）到GPT-5？**\n\n**朱啸虎：**不是，到GPT-4！！GPT-5要几亿美金！\n\n关键是万一你砸了四五千万美金做出来，别人开源了呢？你不是全白砸了？这个是很扎心的问题。现在中国大部分公司，有几个敢真的砸钱去研发GPT-4的？\n\n今天到GPT-3.5，大家都差不多，但GPT-4是要做一些研究的，不是那么简单，现在还不完全是工程问题。那你万一砸下去，又等别人开源了，你不是全都白砸钱？大厂肯定要自己做。创业公司你敢吗？\n\n**腾讯新闻《潜望》：都说要做。**\n\n**朱啸虎：**真的敢砸钱的，心里肯定很虚的。\n\n**腾讯新闻《潜望》：你在2** **023** **年上半年决定不投大模型公司的时候，压力大吗？** **另一家没有参投大模型公司的基金，就表示压力挺大。毕竟大部分一线美元基金都入场了。**\n\n**朱啸虎：**不大啊。为什么压力很大？中国VC从来没有靠共识赚过钱。\n\n**腾讯新闻《潜望》：也有从业者说，如果你在2023年上半年承认自己不看好大模型，会被视作没有信仰。**\n\n**朱啸虎：**什么叫没有信仰？哈哈哈哈哈。\n\n**腾讯新闻《潜望》：不信仰A** **GI** **（通用人工智能）。**\n\n**朱啸虎：**不，我信仰AGI，但我信仰应用啊，我信仰能马上商业化的。\n\n<br />\n\n\n![](https://image.cubox.pro/cardImg/1woh4cgzj3eo1l4v26bzegj93f78uytr6cx8oimwgzxpcjt3ue?imageMogr2/quality/90/ignore-error/1)\n\n**\"**马上能变现！马上能变现！**\"**\n\n**腾讯新闻《潜望》：你过去一年投了哪些AIGC公司？**\n\n**朱啸虎：**很多不一定是过去这一年投的，但它转型做AIGC反而很好，我们再追加投资。\n\n有个做AI视频面试的，2023年做得非常好。这让我很吃惊！去年招聘市场很冷，但它AI视频面试比2022年翻了一倍以上。哈哈。招多少人我不知道，但面试还是要面的。校招面试成本很贵啊，现在用AI可以降低成本。\n\n这种场景很多。本来做微信私域营销，现在可以用AI取代人------用LLaMA训练两三个月，至少做到人类top 30水平，马上去掉50%人工销售。中国在这方面场景远远领先美国。\n\nFancyTech，你知道吗？------我给你看看------AIGC视频广告，这个很酷的。他们产品做得特别效果好，而且马上能变现。2022年我们投的时候才1000多万收入，去年5000多万了，涨了五六倍，都是盈利的。你说这个在美国能做吗？美国根本做不出来！Pika（一家全球炙手可热的AI视频生成公司）今天根本做不出来的！\n\n**腾讯新闻《潜望》：如果底层是大模型能力，上面应用公司构建的壁垒是什么？**\n\n**朱啸虎：**数据啊，美国没有产品短视频数据。在美国看亚马逊、Shopify，还是基于照片。所有的电商，美国基于照片。中国过去三年全部转成短视频了。\n\n**腾讯新闻《潜望》：可是其他中国公司看到效果好，可以立马抄一家。**\n\n**朱啸虎：**抄很难的，它比别人领先一年。很多垂直领域，都要积累数据、积累优化。他们60%-70%客户授权监控效果，就知道哪些视频适合淘宝，哪些适合小红书，哪些适合抖音，有闭环数据反馈。后面追不容易。\n\n二是销售管理能力。大部分大模型创始人不知道怎么管销售。不懂商业化、不懂管销售，那你做什么？\n\n你说AI视频面试也没啥门槛，但今天全中国只有一个做到人机双盲测试。人面试打分和机器AI打分基本一致。而且它是唯一能机器追问的------我问你一个问题，根据你的回答追问。现在客户抱怨面试时间太长，让机器追问少一点。\n\n它的融资额是竞争对手1/10，但今天竞争对手都死了，只有它一家能做好。2023年招聘市场面试接近100万人次，今年至少200万-300万人次。所以，中国在应用层有很多机会。\n\n**腾讯新闻《潜望》：都是** **to** **B项目？**\n\n**朱啸虎：**对啊，都是to B。\n\n**腾讯新闻《潜望》：你没有投** **to** **C项目？**\n\n**朱啸虎：**to C有的，还有点早。to B马上能商业化，基本不用烧钱。\n\n昨天我们投的一个公司说：AIGC PMF，你十个人找不到，投一百个人同样找不到。和人数、成本没关系的。\n\n你不要去砸钱。砸钱做AIGC，不可能的！关键是找不找得到PMF。你如果找到PMF，不用砸几千万美金去砸个大模型，成本不高，拿LLaMA训练两三个月足够了。\n\n像我们（投）的公司都不需要多少张卡，最差的就一张卡。Fancy可能十几张卡，现在收入高了，所以到一百多张卡。\n\n**腾讯新闻《潜望》：Sora横空出世，会对这些项目形成降维打击吗？**\n\n**朱啸虎：**还是会帮助。我们生成的视频，是大模型不可能100%做的，有部分人工、部分AI。今天大模型，尤其用Transformer这种结构一出来有幻觉和偏差，必然要整合到工作流，需要人工修改，去fine-tuning。你一定要做成AI 100%做不了的东西，这才是中国的机会，100%大模型能做的很快就被颠覆掉，你现在做的都是浪费。\n\n**腾讯新闻《潜望》：所以在中国的AIGC机会第一波爆发在企业服务，可以这么理解？**\n\n**朱啸虎：**短期内肯定做to B，起来快。iPhone、大哥大、电脑出来的时候，都是to B先用啊。马上能提高生产力、见到效果。企业愿意花钱。\n\nto C要见到iPhone3时刻。就像当年移动互联网to C应用爆发是Multi-Touch（多点触控），想不到的，对吧？愤怒的小鸟和切西瓜是Multi-Touch出来以后，才成为全球爆款。\n\n大模型到底在什么点让to C应用爆发，不知道。今天说\"个人助理\"都是技术人员的想象。我就问你，有几个人需要个人助理？都是典型的伪需求！\n\n**腾讯新闻《潜望》：这些** **to B** **公司在A** **I** **上训练达到什么效果，会实现指数级提高？**\n\n**朱啸虎：**很简单，见到客户第一面就能签单。\n\n见面签单，是一个考核指标，就是PMF。以前企服为什么难？销售周期长，半年，所以销售增长难。现在你给客户创造数量级价值提升。定制化那就没戏了，就是标准化服务、第一面POC（Proof of Concept，概念验证）、第二面正式合同。\n\n**腾讯新闻《潜望》：怎么看中国企服投资人都说这个赛道上没有大仗、更没有挣过大钱？（\"** **一个billion return的机会都没有** **。\"）**\n\n**朱啸虎：**美国企服公司第一年三倍，第二年三倍，第三年两倍，第四年两倍，很快做到一亿美金ARR（Annual Recurring Revenue，年度经常性收入）。中国以前的企服软件在几千万人民币的时候增长放到50%了，很难增长。AIGC出来以后不一样，去年很多公司增长三倍到五倍以上。\n\n**腾讯新闻《潜望》：你怎么看过去两年，一些投资机构中，企服赛道投资人被迫群体性消失的这个现象？**\n\n**朱啸虎：** 哈哈哈。就是啊，这个说实话很可惜，没有熬到春天。中国企服还是有机会的，但可能还有三到五年冬天。宏观太多不确定，企服就是剩者为王。今天你能不能靠AIGC迅速达到不烧钱的爆发增长是唯一之路。\n\n**腾讯新闻《潜望》：** **to C** **大爆发需要i** **Phone3** **时刻，现在是什么时刻？**\n\n**朱啸虎：** 刚刚iPhone1、iPhone2吧。大模型进化速度比移动互联网快了十倍。什么时候每个手机上都有大模型，to C应用可能会爆发。\n\n**腾讯新闻《潜望》：如果回顾2023年大模型，不管是全球来看还是中国来看，你会把哪些时刻作为关键节点？**\n\n**朱啸虎：**（此处思考了2秒......）LLaMA上线是非常重要的。\n\n开源是完全不一样的局面，至少让中国在应用层面创新有基础了。LLaMA之前，很多套壳用OpenAI，是有点问题的。但LLaMA以后，至少没啥问题了。\n\n我们那些CTO都很年轻，拿LLaMA训练个两三个月。最差的就一张卡，训练两三个月就马上能商业化了。大家想想看------这个商业化门槛真的很低很低。马上能变现！马上能变现！\n\n**腾讯新闻《潜望》：Google刚推出** **开源** **模型Gemma** **，相对之前的** **LLaMa** **、** **Mistral** **表现怎么样？** **OpenAI之后开源的可能性有多大？**\n\n**朱啸虎：**总体反馈比LLaMa 2好一点，行业里有些人觉得它要抢在LLaMa 3之前发，LLaMa 3也快了。OpenAI目前没必要，现在LLaMa、Mistral和Google，这三个在竞争。离OpenAI差距还远，如果他们表现追上GPT-4，OpenAI开源一个小模型也有机会。很多垂直应用，我们发现Mistral2比LLaMa 2好用。\n\n反正开源一个模型，我们都试试，看看哪个更好用一点。\n\n![](https://image.cubox.pro/cardImg/4oy51jzfxlplyetwilrocwa4t0zxs87a0fj72bwot9p9wns4f1?imageMogr2/quality/90/ignore-error/1)\n\n**\"这是典型的FOMO嘛\"**\n\n**腾讯新闻《潜望》：我问2023年中国大模型卷了一年卷出了什么？一位投资人告诉我，卷出几家大模型创业公司。**\n\n**朱啸虎：**再过一年再看看吧，这几家能有几个还在？\n\n**腾讯新闻《潜望》：他们每一家你都看过吗？**\n\n**朱啸虎：** 我一看见这个概念就知道没戏的，没有可能性的，我一个都不聊。我都很熟的。王慧文（美团联合创始人、光年之外创始人），我这么熟，我都不愿意去找他和他谈这个事。\n\n**腾讯新闻《潜望》：你属于他上一场战争里的敌人战队------他在美团阵营、你在饿了么（作为投资人）。**\n\n**朱啸虎：**没有、没有，和他私交很好的。\n\n你说这些创业公司有啥资格、有啥条件去做大模型？百川发布了给游戏的NPC（角色大模型），你有啥数据去训练游戏的NPC？大厂有大把、大把的数据。我们让一家公司去体验了一下，没看出任何差别。\n\n**腾讯新闻《潜望》：当王慧文振臂一呼，说要入局大模型的时候，你是什么反应？**\n\n**朱啸虎：**大家冷静一点，让子弹飞一会儿。飞半年，你就知道到底行不行了。\n\n**腾讯新闻《潜望》：一个正常的投资人不应该是，我先想办法入局再说？**\n\n**朱啸虎：**很便宜的话入局，大家还试试。这么贵的估值，去那干嘛啊？\n\n我根本聊都不愿意聊。现在和这个\"四小龙\"时不一样，\"四小龙\"是在资本泡沫时期长大的，一轮加一轮呢，根本不停的。你到今天为止，现在谁还能融下一轮？今天这个国产大模型基本都要找政府拿钱，政府的钱现在也不好拿了。而且，估值已经抬到这里了，你后面的估值怎么弄？\n\n**腾讯新闻《潜望》：王慧文携5000万美元入场和突然的病退离场，在大模型战事里扮演什么样的角色？**\n\n**朱啸虎：**这就是技术男的浪漫主义，王慧文没有想明白这个事，他的擅长在商业化。他一开始如果做应用，结果肯定比现在要好很多。\n\n那个时候，大家就FOMO情绪比较高涨的时候。\n\n**腾讯新闻《潜望》：怎么看一些基金在这波大模型公司中的布局？**\n\n**朱啸虎：** 有些是典型的FOMO嘛，就是Fear of Missing Out，怕错过。\n\n**腾讯新闻《潜望》：你不怕错过？**\n\n**朱啸虎：**我们无所谓的，我们有啥好错过的？当年移动互联网刚出来，大家想做中国本地化OS，后来这些公司都在哪里啊？\n\n我们投了点心操作系统（李开复旗下创新工场孵化的第一家公司），后来还好，被百度收了。今天的大模型也要等大厂收，今天大厂怎么收啊？移动互联网的时候还没有反垄断，我们还赚点小钱嘛。\n\n**腾讯新闻《潜望》：如果你现在有一亿美金，必须要投场上的这几家基础大模型公司，你会怎么投？**\n\n**朱啸虎：** 我和王小川在开会的时候见过。我说如果没有反垄断，我愿意投王小川的。至少能卖给腾讯或者阿里。有了反垄断，我不知道怎么退了。所以，我在会场上就和他说，不是说和他关系不好不投他，确实我不知道怎么退，所以大模型我就不愿意看，就不和他聊了------我和王小川说过的。\n\n**腾讯新闻《潜望》：你会投一家，还是投多家呢？一亿美金哦。**\n\n**朱啸虎：**王小川至少技术靠谱的，人也靠谱的，和大厂关系也还可以。\n\n**腾讯新闻《潜望》：如果一亿美金不一定非要投这几家基础大模型公司，而是用来布局整个AI赛道，你会怎么用这笔钱？**\n\n**朱啸虎：** 应用啊。现在我们都是两三千万人民币先进去，好的话持续追加。\n\n你十个人找不到PMF，一百个人同样找不到PMF。花钱是无效的。找到PMF以后速度上去很快，也不用烧很多钱。第二，管理销售能力是稀缺的。\n\n**腾讯新闻《潜望》：2** **024** **年会涌现中国大模型公司的并购或收购潮吗？------就像之前你见证过的美团与点评合并，或者阿里收购饿了么。**\n\n**朱啸虎：** 技术的人，都是不相信我比别人差的。你说这个怎么合并？（笑）\n\n第二，现在谁愿意并购啊？而且今天并购，如果大家都用LLaMA开源改一改，有啥东西是我没有的？我有数据，有场景，你有啥？你就有几个人。\n\n现在可能并购就是为并购一个团队。这个团队值多少钱？你能花多少钱？和以前那个时代是完全不一样的。\n\n**腾讯新闻《潜望》：这些大模型公司的出路在哪？**\n\n**朱啸虎：** 我也不知道。我都不愿意去关心这些事情。今天我对所有的公司就说，你有多少收入？你能不能不烧钱？都只关心这个。\n\n**腾讯新闻《潜望》：你在之前的采访中说，上半年投了大模型的投资人下半年后悔了。这是他们告诉你的，还是你猜的？**\n\n**朱啸虎：**这个就不好说了。肯定有人后悔的。\n\n关键你下一步钱真的不好拿，你现在手上钱又不够。真的很尴尬。你GPT-4到底干不干？------不干，你和别人有啥差异性；你干，万一别人GPT-4开源，你又好后悔。你要做垂直场景，垂直场景哪一个你有优势？\n\n**腾讯新闻《潜望》：很多大模型公司现在沿着王慧文提出的\"双轮驱动\"在做。**\n\n**朱啸虎：**怎么双轮驱动？你双轮能转起来吗？有哪一个大模型双轮转起来的？百度，我说实话都不敢说自己双轮转起来。百度至少还有很多场景，文心一言至少做得早，至少有100万DAU。它也不敢说今年双轮驱动转起来了。\n\n**腾讯新闻《潜望》：但就在今年2月，月之暗面刚融了10亿美金，投资方是阿里、** **砺思资本** **、小红书等。据说其他大模型公司也在做这样大笔的交易。这意味着市场上仍然有人愿意投，而且不少。**\n\n**朱啸虎：** 主要是大厂，大厂还是FOMO，怕自己错失。月之暗面大部分钱是阿里出的。\n\n**腾讯新闻《潜望》：阿里和月之暗面** **会形成微软和OpenAI这样的模式吗？**\n\n**朱啸虎：**需要看阿里的投资部和内部的调节了。这个还不一定，阿里内部也有好几个团队在做，这到底是要看谁好用，业务部门才会用。\n\n**腾讯新闻《潜望》：其他巨头** **接下来会** **也** **这么大笔** **地投资或者干脆并购一家大模型公司吗？**\n\n**朱啸虎：** 关键是对内部团队的信心了。现在看来，大厂就阿里展现出并购意愿。不像以前，大厂都有并购意愿。但阿里今天愿意出的钱，和以前肯定是完全不一样的啊。\n\n字节应该是没有并购意愿的，觉得自己能做。百度肯定觉得自己能干。腾讯现在不好说，腾讯内部好几个团队在做，但至少目前没有看到强烈的并购意愿。而且腾讯一贯思路是不急的，在后面慢慢跟，它有场景、有数据，你看腾讯从游戏到视频到音乐到文学，都是在后面跟着跟着第一了。\n\n**腾讯新闻《潜望》：** **你怎么看美团** **收购** **光年之外** **？** **虽然这个很特殊。**\n\n**朱啸虎：** 完全是给老王（王慧文）一个解脱了，而且基本是投资人把本金拿回来。这也是一个警示------以后的并购，如果不是那么成功的并购，可能就是让投资人拿点本金加利息回去。大厂都不是那么财大气粗，并购和以前没法比的。如果就是让投资人拿点本金加利息回去，那投资有啥意思啊？\n\n当然月之暗面如果证明自己，大模型能追上闭源水平、能做到GPT-4.5或GPT-5，收购是有价值的。但如果只做到开源水平，就收个团队，你能给多少钱？中国大模型的进展，如果追上开源，至少你还有存在价值；如果追不上开源，就没有意义了；如果追上闭源，你才能有独到的额外的价值。\n\n**腾讯新闻《潜望》：对已经入局的同行们，你想说什么？**\n\n**朱啸虎：**（想了好久）这个他妈的不太好说，对吧。\n\n（又想了好久）我觉得这个事大家......这个不太好说，这个不太好说，这个不太好说。\n\n反正他们也无所谓，他们钱多，说实话。\n\n![](https://image.cubox.pro/cardImg/1na2i10rz9yblgn1n5qos8mmd7ai3zo5w8tkzi6ucdq98mo3u?imageMogr2/quality/90/ignore-error/1)\n\n**\"这就是我不建议**\n\n**国内创业者用国内大模型的原因\"**\n\n\n**腾讯新闻《潜望》：中美在这波大模型浪潮中，差异有多大？**\n\n**朱啸虎：**说实话在AIGC这波，中美差距还是非常大。美国是在底层大模型，投入越来越大，像OpenAI说十万张GPU卡连在一起。在中国是不可能的。\n\n美国你看AI的应用创新，说实话只有两条路，一条要么非常、非常薄，因为底层大模型太强大了，所以上面叫套壳应用。另一层是看上去很伟大，但肯定走不通的，像Pika。这种目标很伟大，AIGC生成视频、电影。但这条路可能在几年之内都看不到走通的可能性。\n\n中国反而相反，中国在\"当中\"的多一点------底层大模型不够强大，我在上面加的东西可以比较多。我在上面做增值服务，为客户马上能变现。这种在中国有机会。美国这种几乎没有，因为底层大模型太强大了，上面创业公司能做的很少。中国套壳，现在肯定没人看的。在中国也套不了壳，因为大模型本身功能也就那样，必须在上面有value add。\n\n（中国）整出200多个大模型有啥意义呢？没啥意义。但在应用层有很多创新。中国在数据和应用场景上是远远超过美国的。\n\n\n**腾讯新闻《潜望》：你为什么不去美国投AI？**\n\n**朱啸虎：** 我们美国有团队的。2023年我们上半年每个周打一个电话，中美之间交流AIGC有哪些信息------美国看哪些项目，中国看哪些项目。打了半年我不打了，没有意义。\n\n美国四大模型确实很牛逼，中国投资投不进去，今天的估值投进去也没有意义了。中国有场景，中国电子商务比美国远远发达，后来美国公司就：卧槽你们怎么做出来的？感觉很惊讶，在美国做不出来你知道吧。\n\n我再给你看一个，普通的2G电话，接起来变成虚拟直播，帮你做推销，今年马上直接点击购物了。你如果签代言人，可以让王一博给你打，转化率至少比2G电话翻一翻。我给中东投资人看，中东投资人惊呆了：卧槽，这是什么东西？他都没看到过！这都是中国的创新啊。中国在销售营销当中创新太多了。\n\n**腾讯新闻《潜望》：在你看来，中国的AIGC应用已经大爆发了？------外界没有人这么说。**\n\n**朱啸虎：** 已经大爆发了。大家都不知道！因为都是to B应用，消费者都不知道，你知道吗？\n\n**腾讯新闻《潜望》：投资人也没有人这么说。**\n\n**朱啸虎：**他们都没看到，这些公司都不烧钱的，所以根本无所谓。\n\n**腾讯新闻《潜望》：中美两边的融资环境呢？**\n\n**朱啸虎：**美国确实，像Pika，大把钱可以砸进去。中国你今天一个公司，做垂直模型的，没有商业化收入，一亿美金估值现在都没人投了。\n\n一亿美金估值现在没有人投！可以告诉你。\n\n**腾讯新闻《潜望》：这个变化是2023年中开始？**\n\n**朱啸虎：**对，6月份以后。所以你前面最多几千万美金估值融个两轮，后面的出路在哪里？必须靠自己造血，自己找商业化场景。\n\n**腾讯新闻《潜望》：怎么看中美大模型公司和巨头的关系？**\n\n**朱啸虎：**在美国，大部分会被巨头并购。中国是很难，即使被并购，也很难出好价格，就是买个团队。说实话，今天（中国）大模型有什么差别？\n\n**腾讯新闻《潜望》：所以不该拿着锤子找钉子。**\n\n**朱啸虎：** 现在200多个大模型拿着锤子找钉子，找不到啊！\n\n现在我找到了钉子，找一个锤子是容易的。为了这个钉子，可能我找一个很小的锤子就行了。不需要那么高、那么大的锤子。\n\n**腾讯新闻《潜望》：现在大模型牌桌上的明牌是什么？**\n\n**朱啸虎：**现在开源比非开源落后一代，但长远来看，开源肯定会赶上来。\n\n**腾讯新闻《潜望》：拾象创始人李** **广密** **的判断是，** **开源模型追不上闭源模型，而且差距肯定会越来越大，大模型很像芯片或者Space X。** **从人才密度看，** **LLaMa** **也** **还不够** **，他认为** **硅谷** **大模型的** **核心secret在OpenAI** **、** **Anthropic** **和Google这三家公司。**\n\n**朱啸虎：**现在OpenAI技术迭代曲线还比较陡峭，开源肯定比非开源落后一年甚至一年半。但等非开源技术迭代曲线缓慢下来，开源会上去的。OpenAI就一两百个工程师，开源的全世界几百万、几千万工程师在用，怎么可能一直比非开源的落后？就像安卓，今天比iOS差吗？肯定不会。\n\n就在于十万张卡到底能不能出来？到底\"大力出奇迹\"会不会一直下去？如果十万张卡还能\"大力出奇迹\"，那确实牛逼的；如果十万张卡不能再显著提高性能，就放缓了。技术迭代曲线只要放缓，开源立马就追上去了------谁能永远保证保持秘密，没有秘密可言的。\n\n**腾讯新闻《潜望》：月之暗面创始人杨植麟的观点是，** **开发方式跟以前不一样，以前所有人都可以** **贡献到** **开源，现在开源本身还是中心化的** **，** **开源的贡献可能很多没有经过算力验证** **------** **你怎么看** **他** **这个偏技术推论式的判断** **？**\n\n**朱啸虎：**应用层会更偏向开源，尤其对中国开发者，用开源至少你不担心被别人抄嘛。国内大模型，说实话你在它们上面盖房子，还是担心别人抄你。模型和应用的技能完全不一样，模型需要科学家，这些人对技术懂得很深，而且不需要很多人，只需要精干的人。应用，你需要对场景、市场投放、销售非常了解，和科学家是完全不一样的技能。\n\n**腾讯新闻《潜望》：大模型公司** **理想化的想法是** **，** **我一手做** **最牛的模型** **，** **一手做最牛的应用** **。**\n\n**朱啸虎：** 这就是我不建议国内创业者用国内大模型的原因。你用国内大模型，你做得好，肯定别人会抄你。他们都是做大模型，确实不懂应用啊，但你如果基于它上面做得好，它抄你是容易的。美国有清晰分工，国内大模型公司知道自己大模型比美国落后，然后都想做，那创业者肯定更不敢用它。我一直和国内创业者说，千万不要在别人地基上盖房子。\n\n**腾讯新闻《潜望》：O** **pen** **AI** **是不会做应用的** **？**\n\n**朱啸虎：**它是被逼做一个GPT出来。它确实没发现应用者在上面做很多场景，做了GPT出来展示一下。美国前端场景都有人做，微软为什么和OpenAI合作？微软有一堆场景，OpenAI自己去做也没优势，必须和别人合作。现在美国很明显，大模型以后就是云服务的组成部分。\n\n**腾讯新闻《潜望》：杨植麟团队你怎么看？**\n\n**朱啸虎：**我们投了他的上一个公司。他人是很厉害的，大模型确实比较适合他。他做科研是可以的，但我不知道他怎么商业化。妈的，王小川也一样的。\n\n他们（月之暗面）在国内大模型上领先，但长远还是要证明自己价值，至少能追上美国开源。如果能超过开源，他这个团队是真的有价值了。\n\n**腾讯新闻《潜望》：还有一家大模型公司，** **MiniMax** **呢？**\n\n**朱啸虎：**那个时候我们就没聊过，因为开始就很贵。同样的一个问题，他......哎------这个不点评了，不点评了。\n\n**腾讯新闻《潜望》：你的观点比很多人都更激烈，在线下被同行或者创业者怼过吗？**\n\n**朱啸虎：**没有啊，我问的问题都回答不了啊。谁能回答出来？\n\n我希望被怼，关键是谁能回答出来。你商业化场景在哪？你的数据在哪？都不知道的。你自己去和他聊就知道了。\n\n这个真的比\"AI四小龙\"还差。\"四小龙\"进入的时候竞争对手还没那么多，市场就五六家、七八家，竞争没那么激烈。还有两三年的黄金时期，收入做起来了，到后面才是杀价格。\n\n现在200多大模型。大模型2023年年初，一千万私有化部署一个，到6月份五百万部署一个，到年底一百万都不要。给央企部署一个私有化大模型，不要一百万人民币。一年时间就价格杀到地板价去了。怎么搞？创业公司怎么搞？这么早就陷入价格战，大模型公司就会很难单独生存。\n\n今年就可以看出大模型本身是不是好的商业模式，多少OpenAI的用户会因为价格差异迁移到Google的Gemini------OpenAI 20美金一个月，Gemini 10美金一个月。我们美国团队已经有一半人切换到Gemini，一部分是因为价格，另外一部分是因为Google的ecosystem。\n\n三星的AI手机已经绑定Google Gemini。下面就看苹果的新iPhone会绑定哪个大模型，会向大模型公司收多少钱。\n\n**腾讯新闻《潜望》：** **OpenAI后面会怎么样？**\n\n**朱啸虎：**如果有1/3以上客户迁移，那估计只能卖给大厂了。\n\n**腾讯新闻《潜望》：有人和你观点一致吗？**\n\n**朱啸虎：**现在肯定有很多。大家不大说而已。\n\n**腾讯新闻《潜望》：其他人为什么不大说？**\n\n**朱啸虎：**我也不知道。\n\n**腾讯新闻《潜望》：你说这些有压力吗？**\n\n**朱啸虎：**我也没啥压力。哎呀，现在大家都比较明确的一点，企业都至少别烧钱------今年投资人的共识是这个------所有企业别给我烧钱，都自己造血。\n\n**腾讯新闻《潜望》：从第一天起不烧钱是今天的创业新趋势。**\n\n**朱啸虎：** 对啊，后面有没有人投资不知道的，所以每一轮都要当成最后一轮！千万别烧钱。\n\n**腾讯新闻《潜望》：怎么退出？**\n\n**朱啸虎：**退出再说啊。你不烧钱，这个至少就有机会，现在就要活下去！\n\n像《繁花》讲的一样，要活下去！\n\n真的，一步一个脚印，活下去再说！活下去就有机会。\n\n**腾讯新闻《潜望》：《繁花》好看吗？**\n\n**朱啸虎：**好看，很好看。\n\n**腾讯新闻《潜望》：好看在哪？**\n\n**朱啸虎：**确实那个时代大家真的可以搏一下。\n\n今天就别搏了，就是要活下去！\n\n![](https://image.cubox.pro/cardImg/9g5xnxs3rnx2zsrjp3t36imfs70326h73bu9ylyt8e725aqem?imageMogr2/quality/90/ignore-error/1)\n\n**\"你必须现实\"**\n\n\n**腾讯新闻《潜望》：《繁花》那个时代你多大？**\n\n**朱啸虎：**我刚念大学呢。比我早个十年吧。我毕业的时候黄河路已经不太行了哈哈。\n\n**腾讯新闻《潜望》：你说你现在的状态和2005年左右刚入行的时候很像？你是怎么进入投资行业的？**\n\n**朱啸虎：**2005年、2006年，就是VC刚开始的时候，中国没几个VC，看项目看三到六个月才出手。我和有一个合伙人比较熟悉，我之前创业是卖to B的。妈的，销售周期，我们卖保险公司应用至少半年到一年，实施周期还有半年到一年，太累了。\n\n**腾讯新闻《潜望》：教你投资的老师是谁？从他身上学到最多的是什么？**\n\n**朱啸虎：**美国那个合伙人，他投的小红书和去哪儿。Number-driven（数字驱动），我们都是看数字的，我们不听故事。\n\n当然也看人。所以，哎呀，一鸣（字节跳动创始人、原CEO）当年真的是，看人也看不出来，看数字看不出来，哈哈哈真的是。\n\n**腾讯新闻《潜望》：你错过最后悔的项目是字节，从这里面学到了什么？**\n\n**朱啸虎：** 字节的case确实，哎......就是......说实话一鸣确实很难判断。你和他聊天，他也不太怎么说怎么说。今天你和他去聊天，他也是一样的。他也不会很sharp地告诉你很多事情。所以，真的很难判断。\n\n第二，当时只有今日头条，个性化新闻这件事情确实不大，我判断没错。但后来出来个抖音谁知道？\n\n**腾讯新闻《潜望》：一鸣是怎么找到你的？**\n\n**朱啸虎：**我和王琼（海纳亚洲创投基金合伙人）很熟的，她投了A轮，B轮第一个让我看的。就在大会议室。我还记得就是十一二年前。\n\n一鸣和王琼两个人一起来的。我就和王琼说，你如果第一轮投一千万美金估值，两千万美金，估值翻一倍，我愿意干的。你第一轮就是两千万美金，第二轮要五千万美金，我觉得太贵了。\n\n个性化新闻这个事情失败过很多次，当年百度做也不行，为什么个性化新闻能起来？这个东西确实看不明白，估值又不便宜，而且一鸣又失败了三次。对吧！为什么他能成功？我看不出来啊。\n\n如果人很牛，应该也行，但是一鸣那个时候真的看不出来很牛。过去的经历也看不出很牛，说话也看不出很牛。\n\n**腾讯新闻《潜望》：你从这个** **case** **里学到了什么？**\n\n**朱啸虎：**这个确实不是我的菜。你说做什么99房，做什么酷讯，都很一般啊，真的看不出来很牛。\n\n**腾讯新闻《潜望》：当时对他态度冷淡吗？**\n\n**朱啸虎：**反正也不是那么热情。\n\n我一般都不（听）讲PPT，你就直接聊。十几分钟、二十分钟，最多了吧。那还是看在王琼的面子上。哈哈哈哈。王琼是我师姐，比我高一届。我看在王琼的面子上聊了十几分钟、二十分钟。哈哈哈。\n\n**腾讯新闻《潜望》：你觉得你投过的让你觉得最浪漫主义和理想主义的一个项目是什么？**\n\n**朱啸虎：**饿了么。张旭豪那时候虽然没啥经验，但我觉得他商业头脑还是比较可以的。\n\n**腾讯新闻《潜望》：他跟你看起来比较像。**\n\n**朱啸虎：**对对对，张旭豪是和我比较像的。\n\n**腾讯新闻《潜望》：但张旭豪会被说带有匪气。**\n\n**朱啸虎：**张旭豪那时候是有点匪气，但适合他的生意，他做的就需要这个，特别接地气啊。\n\n**腾讯新闻《潜望》：别人说你匪气，你生气吗？**\n\n**朱啸虎：**你说宝总有没有匪气？当年那个时代，都是有点那个的，对吧？\n\n**腾讯新闻《潜望》：和张旭豪现在沟通多吗？**\n\n**朱啸虎：**现在还行，他也是投了我们基金。成LP了。\n\n**腾讯新闻《潜望》：今天AIGC的创业时代，还有下一个程维、张旭豪、毛文超的机会吗？他们都是你投过的CEO。**\n\n**朱啸虎：**有机会啊。当年我们投张旭豪、毛文超的时候，也不知道他们能做多大。AIGC应用今天也是一样。但你只要不烧钱就有机会------就像宝总一样的，只要活下去就有机会。\n\n**腾讯新闻《潜望》：现在这些中国的AI创业公司在哪个场景能长出独角兽？**\n\n**朱啸虎：** 十亿美金独角兽还是很容易的。但千亿美金，今天是看不见的。\n\n**腾讯新闻《潜望》：你感觉，现在这个时代和上一个时代有哪些共性和不同？**\n\n**朱啸虎：**我觉得Midjourney是守不住的。为什么Midjourney现在还很火？因为技术迭代周期还陡峭。Midjourney 5、Midjourney 6，版本速度快。但是，一旦技术曲线放缓就守不住了，因为to C应用太低频，给里面附加一个东西太容易了。为什么大厂给你机会？美国公司可能还是并购，中国就不一定好做了。\n\n所以，和移动互联网一样，to C应用必须刚需、高频，长远才有机会守得住。我对Midjourney是有很多顾虑的。\n\n**腾讯新闻《潜望》：你** **2023** **年的工作状态和之前几年有什么不一样？**\n\n**朱啸虎：**更悠闲，我刚刚休假回来哈哈。今天投资人的状态就是休假时间会比较多一点，大家都不急的。看到一个项目，都要观察三到六个月的时间。比如像大模型有变化，今天技术迭代的曲线还比较陡峭，大家都看下一款大模型会不会对你有颠覆性的影响。\n\n**腾讯新闻《潜望》：中国** **VC** **的好时代过去了吗？**\n\n**朱啸虎：**这个很正常，市场不需要那么多钱。全行业一年投一两千亿，平均下来全行业是亏损的，没有那么多退出机会。洗牌是正常的、需要的。美国现在一年投的金额也下去很多。\n\n**腾讯新闻《潜望》：你为什么不看新能源车赛道？**\n\n**朱啸虎：** 我们不太喜欢太重的。我们就喜欢软件驱动的，不需要砸很多钱、一张GPU就能跑起来的。这种是比较适合我们的。马上能验证行不行。\n\n**腾讯新闻《潜望》：你有喜欢的创业者画像吗？**\n\n**朱啸虎：**思路很清晰的，十几分钟能讲明白一件事情，而且表达比较直接。\n\n（我问题的问题）基本上都一样，你的市场机会在哪里？市场机会多大？为什么是你？就是这几个问题。能讲明白的不多的。\n\n**腾讯新闻《潜望》：错过的项目有总结过共性的原因吗？**\n\n**朱啸虎：**共性还是对人看不懂。有些人我们确实看不懂。\n\n内敛的看不懂。我就喜欢E人，I人就看不懂。\n\n**腾讯新闻《潜望》：你是哪个** **MBTI** **？**\n\n**朱啸虎：**我是E。\n\n**腾讯新闻《潜望》：你也不准备弥补这一边？**\n\n**朱啸虎：**不需要弥补。\n\n**腾讯新闻《潜望》：你这个性格有在投资生涯里吃过亏吗？**\n\n**朱啸虎：** 妈的，错过了字节这样的，贡献了过去二十年投资圈一半的利润。再多的项目可能都弥补不了一个字节。\n\n**腾讯新闻《潜望》：** **现在** **很多** **人说杨植麟是AI时代的一鸣** **，你会不会再错过一次？**\n\n**朱啸虎：**一鸣始终在用户端，真正能做大的最终还是用户端的。\n\n**腾讯新闻《潜望》：现在业余时间干嘛？**\n\n**朱啸虎：**更悠闲一点，看看书，看看电视剧不挺好的嘛。\n\n《繁花》真的拍得挺好。别加杠杆，别加杠杆，千万别加杠杆。这些都是很朴素的，但是真的在关键时刻能救命的。与人为善，那个强总，别把别人逼向死路，与人为善挺好的。\n\n**腾讯新闻《潜望》：你2022年在国外比较多，有没有一些海外观察？**\n\n**朱啸虎：**国外真的还不如中国。中国供应链体系是无与伦比的，其他国家没法和中国比。中国创业者的拼搏精神，也是创新精神，其他地方没法比的。所以AI就是中国跟美国两个地方，其他地方没机会的。韩国，也是有人才的，到中国来cold call找上来的，你想想看。\n\n我和创业者说，2023年就聚焦中国，先把中国的地圈起来，2024年再考虑出海。\n\n**腾讯新闻《潜望》：很多投资人经过慎重考虑后最终选择离开这个行业，你为什么没有决定退休？**\n\n**朱啸虎：** 宏观上很多不确定性，微观上还是有很多机会的。很多创业者真的能在不烧钱的情况下一年涨两三倍、三五倍。为什么（我）讲NextChinaisstill China？中国创业者真的很厉害------你去找宏观的人聊，找二级投资人聊，都很悲观；但是你和创业者聊天，很幸福、很兴奋的。很多时候是让我们大吃一惊的。\n\n否则，你干嘛呢？哈哈哈。\n\n**腾讯新闻《潜望》：今年给被投企业说的最多的话是什么？**\n\n**朱啸虎：**就是不烧钱，不烧钱。\n\n昨天晚上还有个公司说，今年的baseline假设（基准假设）是：假设收入降20%，你还能打平。你千万别假设收入增长，收入部分达不到，你的成本就先花出去了。\n\n**腾讯新闻《潜望》：会不会有时候觉得自己太过于现实？**\n\n**朱啸虎：** 现在根本没有资本泡沫时期的容错能力，你必须现实。所有公司都得不烧钱。\n\n**腾讯新闻《潜望》：如果你今天讲的关于大模型的判断都是错的，你怎么想？**\n\n**朱啸虎：**那很正常，也是有可能性的。但我个人看来，核心问题还是到底能不能产生AGI，能不能产生人工智能懂世界模型。目前给我感觉，至少5到10年之内是看不见的。\n\n从哲学角度看，智力级别的提升首先需要能量级别的提升。可控核聚变实现前，我不太相信地球有足够的算力能够实现真正的AGI。帮人类降低90%的工作可能未来3到5年可以实现，但最后的10%可能需要天量的算力和能耗，这也是为什么Sam Altman想融天量的资金！行百里者半九十。\n\nSora证明了一个新路数，美国有钱敢于试错，那挺好，中国就在后面慢慢跟呗。技术迭代曲线肯定会放缓，PC刚出来也一样，（电脑的CPU型号）286、386、486，大家都觉得美国牛，但586以后，联想都收购IBM了。技术迭代曲线不可能一直这么陡峭。英伟达昨天又涨20%，说明它离顶部越来越近。\n\n**腾讯新闻《潜望》：你预计技术曲线** **什么时候会放缓？**\n\n**朱啸虎：** GPT-5以后就基本会放缓------GPT-4.5今年应该很快发布，GPT-5不一定，可能明年。GPT-5是把视频生成做到今天图像生成的水平，再往前走不太容易。现在看，语言模型进步差不多见顶，突破在多模态，Sora再发布三四个版本也能见顶。后面突破按他们自己说7万亿美金，至少几十万张卡拿出来训练，成本太高太贵了。就像当年建大型高能对撞机，先让别人试错，我们在后面跟是最好的、最稳健的策略。\n\n**腾讯新闻《潜望》：回到AGI信仰的话题，如果大模型公司注定看不到商业化的可能，退一步讲，你能不能用你手上的钱支持一下人类梦想与科学研究？**\n\n**朱啸虎：** 那个是需要大厂和政府去支持。为什么美国人敢投？微软3万亿美金市值，苹果2万亿美金市值，他们敢砸钱。中国不需要砸，美国有钱在前面试错，它一旦证明路通了，后面要花的钱少一个数量级。\n\n我们跟在后面，花的钱少一个数量级，风险小很多，干嘛不跟在后面？\n\n*------------------End------------------*\n\n（如需交流欢迎添加作者微信：benita_zhangxj，烦请备注公司+职务）\n\n\n****推荐阅读****\n\n[![](https://image.cubox.pro/cardImg/5xryqzuuy2jxky2l4bhxmwcou47z0lyh1x6068wc3ss28tkmhp?imageMogr2/quality/90/ignore-error/1)](http://mp.weixin.qq.com/s?__biz=Mjc1NjM3MjY2MA",
        "tags": [],
        "line": 34,
        "startOffset": 1142,
        "endOffset": 18703,
        "filePath": "Sources/CuboxSync/朱啸虎讲了一个中国现实主义AIGC故事-2024-03-08.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615140059,
        "isNativeComment": false
      },
      {
        "id": "1yehmfw69",
        "text": "&mid=2691527820&idx=1&sn=8ee7d9d882bd2b51da9b2c219ed764a1&chksm=a9eccb579e9b4241b862531f426ca2885d291f500a8d09eecc74663bd30b3aa32c6d4544441c&scene=21#wechat_redirect)\n\n[![](https://image.cubox.pro/cardImg/31wsn4vq1ol6optle4ktoyst4mjk1aj6m67smuy156l3g1wv6q?imageMogr2/quality/90/ignore-error/1)](http://mp.weixin.qq.com/s?__biz=Mjc1NjM3MjY2MA",
        "tags": [],
        "line": 615,
        "startOffset": 19043,
        "endOffset": 19388,
        "filePath": "Sources/CuboxSync/朱啸虎讲了一个中国现实主义AIGC故事-2024-03-08.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615139960,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/最强 AI 大纲笔记软件，Tana 能否超越 Notion-2024-11-01.md": [
      {
        "id": "3tjec5h9q",
        "text": "&mid=2247494690&idx=1&sn=0489b0a78f5f487e5cff4422e0e4edeb&chksm=e9a15bb9ded6d2af8d0016fb8b263337752f745b737577bd2e81e9fc5cadb5e766e480488e0c&scene=21#wechat_redirect)，可获得更好的阅读体验。\r\n\r\n## 前言\r\n\r\n\r\n使用 Tana 的第 1 个小时，我确信这将会是一款非常有趣的产品。\r\n\r\n第一天，我察觉到它具有与 Notion 数据库相仿的潜力，也体验到了比 Logseq 更丝滑的大纲体验，以及比 Roam Research 更好看、更有质感的 UI 设计。第一个礼拜，我惊讶于这样一款完成度如此之高、AI 功能强大、搜索命令（Query）相当完善的产品，竟然还处在 Beta 阶段。\r\n\r\n第十四天，我已经在 Tana 中构建了一个相对完整的笔记框架，并觉得就这么 **All in Tana** 似乎也不错。我想一定有人会问我，作为一名忠实的 Notion 拥趸，并且还是 [Notion 课程](http://mp.weixin.qq.com/s?__biz=MzI0ODIyNjU0OA",
        "tags": [],
        "line": 19,
        "startOffset": 442,
        "endOffset": 981,
        "filePath": "Sources/CuboxSync/最强 AI 大纲笔记软件，Tana 能否超越 Notion-2024-11-01.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259580902,
        "isNativeComment": false
      },
      {
        "id": "l1nmzo6a0",
        "text": "&mid=2247499166&idx=1&sn=fb287c99bcee7f720615f078625e47ab&chksm=e9a14a05ded6c313795eb6099c936380f38684661dc4114e6d581766e8719c8836c6adc0058e&scene=21#wechat_redirect)，了解关于 Heptabase 的更多介绍。\r\n\r\nSupertag 的第二个特性是，你可以为任意节点设置固定的字段值（Field），这个字段的概念类似 Notion 的字段（Property）。\r\n\r\n例如，我可以为 #硬件数码 这个标签设置以下几个默认字段：\r\n\r\n那么当我给任意笔记节点打上这个标签，这个节点下方就会出现这些字段让你填写。所以我们也可以将 Supertag 理解成大纲节点的一种内容模板。\r\n\r\n当然你也可以提前为这些字段设置默认的值，例如将 #Task 的 Status 设置为默认的 To-do。\r\n\r\nSupertag 描述的是这个节点的本质「是什么」，而字段（Field）描述的则是这个节点的属性「有什么」，即这条信息有哪些最基本的构成要素或者特征。\r\n\r\n如果你用过 Anytype 的话，Supertag 类似 Anytype 中的对象（Object），而 Field 则类似 Anytype 中的 Relation，你可以阅读[这篇文章](http://mp.weixin.qq.com/s?__biz=MzI0ODIyNjU0OA",
        "tags": [],
        "line": 122,
        "startOffset": 4929,
        "endOffset": 5583,
        "filePath": "Sources/CuboxSync/最强 AI 大纲笔记软件，Tana 能否超越 Notion-2024-11-01.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259581389,
        "isNativeComment": false
      },
      {
        "id": "witopkgbu",
        "text": "&mid=2247485390&idx=1&sn=ed36284d8d7b1dcfce1e8208d84f6c83&chksm=e9a2b055ded539431644663a24418447f6bc85fffcd7dd23122428351d94a307b55cae479671&scene=21#wechat_redirect) [🔗](http://mp.weixin.qq.com/s?__biz=MzI0ODIyNjU0OA",
        "tags": [],
        "line": 694,
        "startOffset": 21557,
        "endOffset": 21779,
        "filePath": "Sources/CuboxSync/最强 AI 大纲笔记软件，Tana 能否超越 Notion-2024-11-01.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259581017,
        "isNativeComment": false
      },
      {
        "id": "wxif7rbct",
        "text": "&mid=2247487978&idx=1&sn=8f2e8aa7357bf3659079e69c1902bbcb&chksm=e9a2a671ded52f6753f32c4d8c660873493aa86dcd60b525cb339cdc0c9e41899a05322d7841&scene=21#wechat_redirect) [🔗](http://mp.weixin.qq.com/s?__biz=MzI0ODIyNjU0OA",
        "tags": [],
        "line": 696,
        "startOffset": 22019,
        "endOffset": 22241,
        "filePath": "Sources/CuboxSync/最强 AI 大纲笔记软件，Tana 能否超越 Notion-2024-11-01.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259580479,
        "isNativeComment": false
      },
      {
        "id": "jx6uu6dc2",
        "text": "&mid=2247499166&idx=1&sn=fb287c99bcee7f720615f078625e47ab&chksm=e9a14a05ded6c313795eb6099c936380f38684661dc4114e6d581766e8719c8836c6adc0058e&scene=21#wechat_redirect) [🔗](http://mp.weixin.qq.com/s?__biz=MzI0ODIyNjU0OA",
        "tags": [],
        "line": 698,
        "startOffset": 22479,
        "endOffset": 22701,
        "filePath": "Sources/CuboxSync/最强 AI 大纲笔记软件，Tana 能否超越 Notion-2024-11-01.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259580939,
        "isNativeComment": false
      },
      {
        "id": "g1xglcc9i",
        "text": "&mid=2247500420&idx=1&sn=083542e6d1e7d8cdf058f34a5f9a304f&chksm=e9a1751fded6fc09763fdeeb4bb15e4d4a59cccfaa77da27c32a17046fb5c6f1c713c8ba3df2&scene=21#wechat_redirect) [🔗](http://mp.weixin.qq.com/s?__biz=MzI0ODIyNjU0OA",
        "tags": [],
        "line": 700,
        "startOffset": 22937,
        "endOffset": 23159,
        "filePath": "Sources/CuboxSync/最强 AI 大纲笔记软件，Tana 能否超越 Notion-2024-11-01.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259581397,
        "isNativeComment": false
      },
      {
        "id": "a3mduyyz7",
        "text": "&mid=2247499476&idx=1&sn=4a626ce1a3f2819308a9eddb5162b568&chksm=e9a1494fded6c0591505ee3e3797c8d12ab6fb9370ebe4fc73085c60218b8262fe470bdb5d5c&scene=21#wechat_redirect) [🔗](http://mp.weixin.qq.com/s?__biz=MzI0ODIyNjU0OA",
        "tags": [],
        "line": 702,
        "startOffset": 23395,
        "endOffset": 23617,
        "filePath": "Sources/CuboxSync/最强 AI 大纲笔记软件，Tana 能否超越 Notion-2024-11-01.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259580855,
        "isNativeComment": false
      },
      {
        "id": "bucagze5j",
        "text": "&mid=2247500649&idx=1&sn=63ede9a6c01cb34ddf0505dc9186a13f&chksm=e9a174f2ded6fde46ef998e0eceac577ff56be264ca7f616bffac5479e327cf453a6155241ad&scene=21#wechat_redirect) [🔗](http://mp.weixin.qq.com/s?__biz=MzI0ODIyNjU0OA",
        "tags": [],
        "line": 704,
        "startOffset": 23854,
        "endOffset": 24076,
        "filePath": "Sources/CuboxSync/最强 AI 大纲笔记软件，Tana 能否超越 Notion-2024-11-01.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259581314,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/我跑通了全球收付款的流程-2024-11-11.md": [
      {
        "id": "r0v1fbtvs",
        "text": "&mid=2247484435&idx=1&sn=db57229886f140cd826af37ad7a58348&chksm=fb72f276cc057b60931247ae415f5bc03dcd73d0fe2f7751e9ca3310fb61aae6553ff5c00314&scene=21#wechat_redirect) 这个项目的时候，有段时间 token 消耗和服务器流量[费用特别高](http://mp.weixin.qq.com/s?__biz=MzU0NDk4OTk2Mg",
        "tags": [],
        "line": 303,
        "startOffset": 6113,
        "endOffset": 6365,
        "filePath": "Sources/CuboxSync/我跑通了全球收付款的流程-2024-11-11.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615158179,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/我把网站迁移到 cf，省了几万块-2024-08-14.md": [
      {
        "id": "om1req4gy",
        "text": "&mid=2247484435&idx=1&sn=db57229886f140cd826af37ad7a58348&chksm=fb72f276cc057b60931247ae415f5bc03dcd73d0fe2f7751e9ca3310fb61aae6553ff5c00314&scene=21#wechat_redirect)，部署在 Vercel，每个月几十万访问量。\r\n\r\n前几天登录 Vercel 看了一下账单，好家伙！！！一个月给我干到了 5000 多刀的支出，合计人民币 3 万 7 千多元。\r\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_png%2FRwxY4xJSwr6znA2Oa3j1onYpoc4huiavxfkNnQcmxcomvK6ZFicznQTt3W45Cvstsz1vkKKyjSickCbkTOlDn4ENg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg%26tp%3Dwebp%26wxfrom%3D5%26wx_lazy%3D1%26wx_co%3D1&valid=false) 20240812200512\r\n\r\n按理来说几十万的月访问量也不算大，这个服务器支出费用属实有点高了。\r\n\r\n感觉很心疼，一下子对 Vercel 爱不起来了。研究了两天，把部署在 Vercel 的服务迁移到了 AWS 和 Cloudflare，世界变得美好了，谨以此文纪念之。\r\n\r\n## 为什么要用 Vercel\r\n\r\n在这篇文章：[出海第一周，我的 GPTs 导航站🔥了](http://mp.weixin.qq.com/s?__biz=MzU0NDk4OTk2Mg",
        "tags": [],
        "line": 21,
        "startOffset": 479,
        "endOffset": 1262,
        "filePath": "Sources/CuboxSync/我把网站迁移到 cf，省了几万块-2024-08-14.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615158747,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/技巧 - 快捷键大全，开启你的无鼠标工作模式-2023-09-25.md": [
      {
        "id": "qhgn2g6ta",
        "text": "&mid=2247484843&idx=1&sn=07c3d47154770323b72a78c45f764385&chksm=ceea480bf99dc11de18a9ee3013d534f638ad7e6a3a7929bde4c6c4083f829efbca5554384af&token=1288104929&lang=zh_CN\ntags: []\n---\n\n# 技巧 | 快捷键大全，开启你的无鼠标工作模式\n\n进来看看Mac / Windows、Chrome Browser、Xcode IDE的常用快捷键吧。\n\n[Read in Cubox](https://cubox.pro/my/card?id=7105987663018066492)  \n[Read Original](https://mp.weixin.qq.com/s?__biz=Mzg3MjcxNzUxOQ",
        "tags": [],
        "line": 3,
        "startOffset": 142,
        "endOffset": 538,
        "filePath": "Sources/CuboxSync/技巧 - 快捷键大全，开启你的无鼠标工作模式-2023-09-25.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1750860899749,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/手机号绑定了哪些服务？试试借助短信进行排查 - 少数派-2024-04-22.md": [
      {
        "id": "uhq9jhsnd",
        "text": "0` 。\r\n* `destination_caller_id` 就是我们需要的「收信号码」字段。\r\n* `chat_identifier` 是发信号码。\r\n\r\n### 把短信数据拿出来\r\n\r\n此处使用 Python 语言，在 Terminal 中运行 `pip install pytypedstream` 以安装上文提到的包。完成后，我们先定义两个函数，分别用来从 `attributedBody` 中提取短信文本和转换时间戳。\r\n\r\n    # 用于从blob数据类型中抽取短信文本内容\r\n    import typedstream\r\n    def get_value_from_bytesobj(hex_bytes):\r\n        try:\r\n            ts_obj = typedstream.unarchive_from_data(hex_bytes)\r\n            return ts_obj.contents[0].value.value\r\n        except Exception as e:\r\n            return None\r\n\r\n    # 用于将时间戳转换为人类可读的日期时间格式\r\n    from datetime import datetime, timedelta\r\n    # iOS messages的timestamp开始于2001-01-01，且需要转化为北京时间\r\n    def timestamp_converting(timestamp, custom_epoch = datetime(2001, 1, 1)):\r\n        try:\r\n            timestamp_seconds = timestamp / 1e9\r\n            resulting_date = custom_epoch + timedelta(seconds=timestamp_seconds) + timedelta(hours=8)\r\n            return resulting_date.strftime('%Y-%m-%dT%H:%M:%S.%f')[:-3]\r\n        except Exception as e:\r\n            return None\r\n\r\n接下来我们连接到数据库 `chat.db`，取出需要的数据，并且应用刚才定义的两个函数，对数据做初步处理，并写入 Excel 表格。\r\n\r\n    import sqlite3\r\n    import pandas as pd\r\n\r\n    # 建立数据库链接，取数据\r\n    database_path = 'path/to/chat.db'\r\n    connection = sqlite3.connect(database_path)\r\n\r\n    query = '''SELECT a.ROWID AS message_id, c.ROWID AS chat_id, c.chat_identifier, a.attributedbody, a.date, a.destination_caller_id FROM message AS a\r\n    LEFT OUTER JOIN chat_message_join AS b ON a.rowid = b.message_id\r\n    LEFT OUTER JOIN chat AS c ON b.chat_id = c.rowid\r\n    WHERE a.is_from_me = 0 AND a.service = \"SMS\";'''\r\n\r\n    df = pd.read_sql_query(query, connection)\r\n    connection.close()\r\n\r\n    # 初步处理数据，抽取短信内容、转换时间戳，排除空文本短信，写入Excel表格\r\n    df['sms_text'] = df['attributedBody'].apply(get_value_from_bytesobj)\r\n    df['sms_date'] = df['date'].apply(timestamp_converting).apply(lambda x: pd.to_datetime(x, format='%Y-%m-%dT%H:%M:%S.%f'))\r\n    # 去除没有文本内容的短信\r\n    df = df[~df['sms_text'].isnull()]\r\n    df = df[['message_id', 'chat_identifier', 'destination_caller_id', 'sms_date', 'sms_text']].sort_values(by = 'sms_date', ascending = False)\r\n    df.to_excel(\"sms_content.xlsx\",index=None)\r\n\r\n这里解释一下为何选择较为「笨重」的 `.xlsx` 格式存储，而不选择 `.csv`？因为不确定短信文本内容中是否包含了和分隔符（英文逗号 `,` ）一样的符号，导致后续读数时错列。同时数据量也不大， 如果数据量大，可以尝试用 `arrow` 包写 `.parquet` 文件。\r\n\r\n最终，我们可以得到数据字典结构如下的表格，并进行下一步分析。\r\n\r\n|         字段名称          |   数据类型   |              含义及备注              |                   样例                    |\r\n|-----------------------|----------|---------------------------------|-----------------------------------------|\r\n| message_id            | integer  | 短信 ID                           | 5337                                    |\r\n| chat_identifier       | text     | 发信人号码                           | 106905109757920                         |\r\n| destination_caller_id | text     | 本机号码，可能不止一个（双卡双待）               | +8613912345678                          |\r\n| sms_date              | datetime | 收信时间                            | 2024-04-01 12:34:56                     |\r\n| sms_text              | text     | 从 `attributedBody` 字段中提取的短信文本内容 | 【某某音乐】1234 是您某某音乐的验证码，有效时间为 10 分钟，请尽快验证 |\r\n\r\n### 清洗数据，得到检查清单\r\n\r\n注：**从这里开始，编程语言变成了 R。**在解决个人生活问题的项目上，我的编程习惯比较随意，什么语言方便用什么。我在本文最后提供了一个一键导出的应用，供不太熟悉 R 语言读者使用。另外，少数派编辑器的代码块模块还不支持 R 语言，所以语言类型我选择了纯文本，没有高亮。\r\n\r\n    library(data.table)\r\n    library(tidyverse)\r\n    library(readxl)\r\n    library(writexl)\r\n\r\n    # 读取刚才保存的短信数据表格\r\n    sms_df = read_xlsx(\"sms_content.xlsx\") %>% \r\n      setDT()\r\n\r\n    # 这里去除了短信首尾的空白符号和占位符，并且将所有英文符号转为小写\r\n    sms_df[, sms_text := sms_text %>% str_squish() %>% str_remove_all(., \"\\uFFFC\") %>% str_to_lower()]\r\n\r\n    # 此处为了排除一些无关联的IDFA而进行过滤\r\n    # 请将\"new\"和\"old\"替换为自己的手机号\r\n    sms_df = sms_df[destination_caller_id %chin% c(\"new\", \"old\")]\r\n\r\n首先，我们需要将手机号发来的日常短信过滤掉。手机号是 11 位，在 `chat_identifier` 字段中会增加前缀 `+86`。在查阅[资料](https://sspai.com/link?target=https%3A%2F%2Fbaike.baidu.com%2Fitem%2F%25E6%2589%258B%25E6%259C%25BA%25E5%258F%25B7%25E7%25A0%2581%2F1417348)获得手机号段特征后，我们可以通过以下正则表达式将其过滤（关于正则表达式可以参考 [regex101](https://sspai.com/link?target=https%3A%2F%2Fdeerchao.cn%2Ftutorials%2Fregex%2Fregex.htm) 和[少数派这篇文章](https://sspai.com/post/60650)，这里不再赘述）。\r\n\r\n    phone_number_pattern = \"^\\\\+86((135|136|137|138|139|150|151|152|157|158|159|178|182|183|184|187|188|195|197|198|130|131|132|145|155|156|166|175|176|185|186|196|133|149|153|173|177|180|181|189|190|191|193|199|192|162|165|167|170|171)[0-9]{8}|134[0-8]{8})$\"\r\n\r\n    sms_df = sms_df[!str_detect(chat_identifier, phone_number_pattern)]\r\n\r\n然后，把 `【】` 内部的文本抽取出来，选择旧号相关的短信签名，按照出现频率倒序排列，写入 Excel 文件，一一去排查即可。注意，这里我们的正则表达式匹配了位于**开头或结尾**的方头括号，因为有些公司会把短信签名放在末尾（比如交通银行），也许是有自己的独立渠道，不需要受短信服务商模板的约束。\r\n\r\n此外，还需将首尾均未出现签名的短信过滤掉，除了由一些公共机构、政府部门下发的公益短信外，全部都是售假、赌博、色情类内容（不清楚它们是如何绕过审核系统下发的）。\r\n\r\n    # 匹配短信开头和末尾的签名\r\n    sms_df[, `:=`(sms_sign_start = sms_text %>% str_extract(., \"^【(.*?)】\", group = 1), sms_sign_end = sms_text %>% str_extract(., \"【([^】]*)】$\", group = 1))]\r\n\r\n    # 将首尾均未出现签名的短信过滤掉\r\n    sms_df = sms_df[!(is.na(sms_sign_start) & is.na(sms_sign_end))]\r\n\r\n    # 将首尾签名两列数据合并到一列中\r\n    sms_df = sms_df %>%\r\n      pivot_longer(\r\n        cols = starts_with(\"sms_sign\"),\r\n        values_to = \"sms_sign\",\r\n        values_drop_na = T\r\n      ) %>% \r\n      setDT()\r\n\r\n    # 按照出现频率从高到低对短信签名进行排序，并写入文件\r\n    # 这里请将\"old\"替换为你的手机号  \r\n    sms_sign_cnt = sms_sign_cnt[destination_caller_id ",
        "tags": [],
        "line": 86,
        "startOffset": 6253,
        "endOffset": 11559,
        "filePath": "Sources/CuboxSync/手机号绑定了哪些服务？试试借助短信进行排查 - 少数派-2024-04-22.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259580712,
        "isNativeComment": false
      },
      {
        "id": "l86mf2ru1",
        "text": " \"old\" & (str_detect(chat_identifier, \"^1008[56]\") | str_detect(sms_text, \"(中国|江苏|上海)移动\")), .N, sms_sign] %>% \r\n      arrange(., desc(N)) %>% {\r\n        print(.)\r\n      } -> plot_stats_mobile_operators\r\n\r\n|   sms_sign    |  N  |\r\n|---------------|-----|\r\n| 中国移动          | 287 |\r\n| 中国移动心级服务，让爱连接 | 73  |\r\n| 余额不足提醒        | 55  |\r\n| 流量提醒          | 42  |\r\n| 江苏省文旅厅        | 13  |\r\n\r\n    # 这里anti_join()函数的功能是从X中排除出现在Y的内容\r\n    sms_sign_cnt_step1 = sms_sign_cnt %>% \r\n      anti_join(., plot_stats_mobile_operators, by = join_by(sms_sign))\r\n\r\n    plot_stats_step1 = nrow(sms_sign_cnt_step1)\r\n\r\n这一步排查出了 87 个移动运营商和公共机构签名，总排查量还剩 281 个，占比 76%。\r\n\r\n### Step2 排除电商旗舰店\r\n\r\n每逢各类电商活动，商家们的推广信息就纷至沓来。我们的号码和电商平台绑定，不需要额外对这些旗舰店进行解绑操作。因此，包含「旗舰店」字样的短信签名可以被过滤掉。\r\n\r\n    sms_df[destination_caller_id ",
        "tags": [],
        "line": 236,
        "startOffset": 12775,
        "endOffset": 13555,
        "filePath": "Sources/CuboxSync/手机号绑定了哪些服务？试试借助短信进行排查 - 少数派-2024-04-22.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259581234,
        "isNativeComment": false
      },
      {
        "id": "nkjzxulyw",
        "text": " \"old\", .N, .(sms_sign, sms_category)] %>% \r\n      pivot_wider(., names_from = \"sms_category\", values_from = \"N\", values_fill = 0) %>% \r\n      filter(., notification ",
        "tags": [],
        "line": 356,
        "startOffset": 17480,
        "endOffset": 17650,
        "filePath": "Sources/CuboxSync/手机号绑定了哪些服务？试试借助短信进行排查 - 少数派-2024-04-22.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259580939,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/我，技术不过硬，但是团队里的重要“胶水”-2023-09-29.md": [
      {
        "id": "e9d1v1hwn",
        "text": "&mid=2651182970&idx=1&sn=aa87d8dd9b06c23cba0c115a4f2f8633&chksm=bdb82f298acfa63f253fdf8c45d5466a11f64e3c8b3adb94d6fed7a46895e61d044f2354dabf&scene=21#wechat_redirect)  \r\n\r\n[千亿也不够花！OpenAI 想让员工出售股票来筹资，而最大投资人微软正在\"去GPT\"](http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA",
        "tags": [],
        "line": 160,
        "startOffset": 6214,
        "endOffset": 6481,
        "filePath": "Sources/CuboxSync/我，技术不过硬，但是团队里的重要“胶水”-2023-09-29.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615158560,
        "isNativeComment": false
      },
      {
        "id": "syayksupk",
        "text": "&mid=2651182446&idx=1&sn=0f72d38c298a57d5be9134dad2b9a103&chksm=bdb82d3d8acfa42b14038d9a22bee339cb6ddefb069105c941add9cc6ef3971256b27be83eab&scene=21#wechat_redirect)  \r\n\r\n[弃亚马逊转戴尔，彻底下云、去 K8s 后，我们已经节省了 100 万美元](http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA",
        "tags": [],
        "line": 164,
        "startOffset": 6722,
        "endOffset": 6983,
        "filePath": "Sources/CuboxSync/我，技术不过硬，但是团队里的重要“胶水”-2023-09-29.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159068,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/我的阅读工作流（2021版） - 少数派-2022-05-31.md": [
      {
        "id": "ar8p7yh9g",
        "text": "&mid=2247484120&idx=1&sn=ea3c83c573e694e71761560dd09ad227&chksm=e9279503de501c15fdfafec9e3528bb07dd236a4207d1a599fc27fcec0c0525777bdd9e5e61c&scene=21#wechat_redirect)这篇文章中介绍过，感兴趣的朋友可以跳转阅读。\n\n由于目前只支持阅读 pdf 文件和网页，阅读文章时我会尽量在浏览器上进行，阅读书籍时我甚至会将其他所有格式的电子书（.mobi、.equb 等）转化为 pdf 再阅读。\n\n例如下图，是我在阅读《这就是 OKR》一书时的划线与批注：\n![](https://image.cubox.pro/article/2021111515213842341/39949.jpg) 使用 Hypothesis 在书籍中划线批注\n\n但 Hypothesis 目前对移动端的支持比较差，在手机上阅读时的批注行为，只能寻找替代方案。\n\n恰好前面提到的 Cubox，也支持在移动端阅读时划线与批注，多端同步（如图）。可惜手机那样小小的屏幕，用来阅读始终还是太费劲，我就比较少使用这个功能。\n![](https://image.cubox.pro/article/2021111515213819531/30630.jpg) 使用Cubox在手机和PC划线批注\n\n如果你是 [在微信读书阅读公众号文章](http://mp.weixin.qq.com/s?__biz=MzIzOTY0OTQ2MA",
        "tags": [],
        "line": 115,
        "startOffset": 2764,
        "endOffset": 3443,
        "filePath": "Sources/CuboxSync/我的阅读工作流（2021版） - 少数派-2022-05-31.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615158748,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/我用 AI 辅助编程，效率提升 x 倍-2024-11-22.md": [
      {
        "id": "1vgvxj6y0",
        "text": "&mid=2247484435&idx=1&sn=db57229886f140cd826af37ad7a58348&chksm=fb72f276cc057b60931247ae415f5bc03dcd73d0fe2f7751e9ca3310fb61aae6553ff5c00314&scene=21#wechat_redirect) 之类的产品了。\r\n20241119173223\r\n\r\n### 写提示词\r\n\r\nAI 时代最重要的一项技能是写提示词，Prompt Engineering 甚至发展成了一门独立的学科。\r\n\r\n如果你需要写提示词去控制 AI 生成内容，而又不太擅长提示词工程，或许可以试试让 Cursor 帮你写提示词。\r\n\r\n比如在 PodLM 这个项目的开发过程中，我需要在系统内置一些生成 AI 播客脚本的提示词，通过 @ 之前调试好的脱口秀提示词文本，就能让 Cursor 帮我生成风格一致的儿童故事提示词。\r\n\r\n同样，在 ThinkAny / 知了阅读之类的项目开发过程中，我只需要描述清楚我的需求，就能让 Cursor 帮我生成高质量的提示词。\r\n20241119151215\r\n\r\n### 写前端页面\r\n\r\n做 Web 项目开发，我们经常需要写前端页面。我最近一年习惯用 NextJS 框架做全栈开发，页面组件用 React 写，使用 TailwindCSS 写样式，UI 组件库用的是 Shadcn/UI。\r\n\r\n使用 Cursor 之前，如果我想要实现一个登录页面，一般是在 UI 组件库找到可以引入的组件，或者自己写 HTML + TailwindCSS 实现需要的组件。如果是自己写，样式要调的美观，可能会花上一个小时。\r\n\r\n而现在用 Cursor 实现一个登录组件，我只需要一句话描述我的需求，几秒钟的时间，就能得到一个满足需求的登录组件。\r\n20241119145836\r\n\r\n### 截图生成组件\r\n\r\n除了一句话描述自己的需求，让 Cursor 生成组件代码之外，有时候我们可能会看到某个网站的某个组件设计的不错，想把这个组件的样式和逻辑复制到自己的项目中。\r\n\r\n在 Cursor 中，只需要截图参考的组件，让它仿照着写出来就行了。\r\n\r\n这比起以前去 Copy 别人网站的样式，通过审查元素查看 HTML 结构和 CSS 样式，效率高的不止一点半点。\r\n20241119152926\r\n\r\n### 写常用的代码逻辑 / 函数\r\n\r\n作为一个全栈开发，或者后台开发，我们可能更多的时间是在写各种功能函数。\r\n\r\n比起从头开始实现一个个的功能函数，使用 Cursor 我们只需要一句话描述功能需求 / 函数的入参和响应参数，几秒内就能快速生成一个函数。\r\n\r\n如此高效的代码生成能力，可以让我们把更多的时间聚焦在核心业务逻辑的实现上，而不是把时间浪费在写一些重复的代码逻辑上。\r\n20241119145540\r\n\r\n### 代码重构\r\n\r\n在做项目技术架构更新的时候，我们经常需要重构之前的代码。\r\n\r\n比如在 [我把网站迁移到 cf，省了几万块](http://mp.weixin.qq.com/s?__biz=MzU0NDk4OTk2Mg",
        "tags": [],
        "line": 85,
        "startOffset": 2075,
        "endOffset": 3424,
        "filePath": "Sources/CuboxSync/我用 AI 辅助编程，效率提升 x 倍-2024-11-22.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615158091,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/我把网站迁移到 cf，省了几万块-2024-11-09.md": [
      {
        "id": "8aapq5xmb",
        "text": "&mid=2247484435&idx=1&sn=db57229886f140cd826af37ad7a58348&chksm=fb72f276cc057b60931247ae415f5bc03dcd73d0fe2f7751e9ca3310fb61aae6553ff5c00314&scene=21#wechat_redirect)，部署在 Vercel，每个月几十万访问量。\r\n\r\n前几天登录 Vercel 看了一下账单，好家伙！！！一个月给我干到了 5000 多刀的支出，合计人民币 3 万 7 千多元。\r\n![](https://image.cubox.pro/cardImg/5wjczu4ozam80fqy5gj8vrs8asp27x0p60ezawz8ops0ldgmx5?imageMogr2/quality/90/format/gif/ignore-error/1) 20240812200512\r\n\r\n按理来说几十万的月访问量也不算大，这个服务器支出费用属实有点高了。\r\n\r\n感觉很心疼，一下子对 Vercel 爱不起来了。研究了两天，把部署在 Vercel 的服务迁移到了 AWS 和 Cloudflare，世界变得美好了，谨以此文纪念之。\r\n\r\n## 为什么要用 Vercel\r\n\r\n在这篇文章：[出海第一周，我的 GPTs 导航站🔥了](http://mp.weixin.qq.com/s?__biz=MzU0NDk4OTk2Mg",
        "tags": [],
        "line": 21,
        "startOffset": 448,
        "endOffset": 1080,
        "filePath": "Sources/CuboxSync/我把网站迁移到 cf，省了几万块-2024-11-09.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615158721,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/微服务那么热，创业公司怎么选用实践？-2024-01-05.md": [
      {
        "id": "3ps06kvy9",
        "text": "&mid=2650994345&idx=1&sn=0999eb0d4e2b0819751a6b73334c2b0c&chksm=bdbf0efa8ac887ec4eab294794fec20f6883f181f25eb3bf0c41cb1eb27c62a0789e47251772&scene=21#wechat_redirect)  \r\n>\r\n> * [微信小程序来了，产品和运营就不需要跪求程序员了？](http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA",
        "tags": [],
        "line": 401,
        "startOffset": 13334,
        "endOffset": 13588,
        "filePath": "Sources/CuboxSync/微服务那么热，创业公司怎么选用实践？-2024-01-05.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159941,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/微信群消息爆炸？我用Chatlog-MCP神器一键生成自动日报，效率翻倍！-2025-05-16.md": [
      {
        "id": "invt1f7dy",
        "text": "&mid=2247500123&idx=1&sn=f55d74567371900d699d6e31c0e43427&scene=21#wechat_redirect)\n\n[MCP 哪家强？深度分析 Cline、Cursor、Trae、Coze 四大平台](https://mp.weixin.qq.com/s?__biz=Mzk0ODM5NTEyNA",
        "tags": [],
        "line": 177,
        "startOffset": 6366,
        "endOffset": 6545,
        "filePath": "Sources/CuboxSync/微信群消息爆炸？我用Chatlog-MCP神器一键生成自动日报，效率翻倍！-2025-05-16.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615158749,
        "isNativeComment": false
      },
      {
        "id": "i2d6gn72r",
        "text": "&mid=2247499866&idx=1&sn=32692c0796d7dabc86336a922172fbf8&scene=21#wechat_redirect)\n\n[普通人也能造Agent！我用MCP+提示词\"炼\"出DeepSearch，3000字专业报告全自动生成！](https://mp.weixin.qq.com/s?__biz=Mzk0ODM5NTEyNA",
        "tags": [],
        "line": 181,
        "startOffset": 6730,
        "endOffset": 6920,
        "filePath": "Sources/CuboxSync/微信群消息爆炸？我用Chatlog-MCP神器一键生成自动日报，效率翻倍！-2025-05-16.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159113,
        "isNativeComment": false
      },
      {
        "id": "k0xsctbhf",
        "text": "&mid=2247499827&idx=1&sn=2d59917d9d630f4578f14f2e1a42ea52&scene=21#wechat_redirect)\n\n[独家解析｜MCP协议成中国AI生态新标准，阿里腾讯已布局，Coze危险了？](https://mp.weixin.qq.com/s?__biz=Mzk0ODM5NTEyNA",
        "tags": [],
        "line": 185,
        "startOffset": 7088,
        "endOffset": 7264,
        "filePath": "Sources/CuboxSync/微信群消息爆炸？我用Chatlog-MCP神器一键生成自动日报，效率翻倍！-2025-05-16.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615158471,
        "isNativeComment": false
      },
      {
        "id": "tkpup8ant",
        "text": "&mid=2247499753&idx=1&sn=06d45081fb2415e15ae513b5087bc428&scene=21#wechat_redirect)\n\n[重磅实践：无需Manus邀请码，Cursor+MCP打造专业级AI智能助手 \\| 深度指南](https://mp.weixin.qq.com/s?__biz=Mzk0ODM5NTEyNA",
        "tags": [],
        "line": 189,
        "startOffset": 7437,
        "endOffset": 7621,
        "filePath": "Sources/CuboxSync/微信群消息爆炸？我用Chatlog-MCP神器一键生成自动日报，效率翻倍！-2025-05-16.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615158820,
        "isNativeComment": false
      },
      {
        "id": "wawdl61n4",
        "text": "&mid=2247499517&idx=1&sn=0e18ad37018dc19e36ef9570d0eabec2&scene=21#wechat_redirect)\n\n[AI 编程效率翻倍！Cursor+MCP 组合的 5 大超能力解析](https://mp.weixin.qq.com/s?__biz=Mzk0ODM5NTEyNA",
        "tags": [],
        "line": 193,
        "startOffset": 7800,
        "endOffset": 7972,
        "filePath": "Sources/CuboxSync/微信群消息爆炸？我用Chatlog-MCP神器一键生成自动日报，效率翻倍！-2025-05-16.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159183,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/得物商家客服从Electron迁移到Tauri的技术实践-2024-12-20.md": [
      {
        "id": "m5v7sqim5",
        "text": " Some(OsStr::new(\"exe\")) {      // 创建一个新的 OsString，并将 found_path 包裹在引号中，以便在 PowerShell 中正确处理路径      let mut installer_path = std::ffi::OsString::new();      installer_path.push(\"\\\"\");      installer_path.push(&found_path);      installer_path.push(\"\\\"\");            // 构造安装程序参数      let installer_args = [        config          .tauri          .updater          .windows          .install_mode          .nsis_args()          .iter()          .map(ToString::to_string)          .collect(),        vec![\"/ARGS\".to_string()],        current_exe_args,        config          .tauri          .updater          .windows          .installer_args          .iter()          .map(ToString::to_string)          .collect::<Vec<_>>(),      ]      .concat();\r\n          // 创建一个新的命令，指向 PowerShell 的路径。      // 使用 Start-Process 命令来启动安装程序，      // 并设置 -NoProfile 和 -WindowStyle Hidden 选项，      // 以确保 PowerShell 不会加载用户配置文件，并且窗口保持隐藏      let mut cmd = Command::new(powershell_path);      cmd        .args([\"-NoProfile\", \"-WindowStyle\", \"Hidden\", \"Start-Process\"])        .arg(installer_path);      if !installer_args.is_empty() {        cmd.arg(\"-ArgumentList\").arg(installer_args.join(\", \"));      }      // 使用 spawn() 方法启动命令，如果失败，则输出错误信息。      cmd        .spawn()        .expect(\"Running NSIS installer from powershell has failed to start\");\r\n          exit(0);    }\r\n\r\n\r\n* 在通过`PowerShell`启动应用安装程序的时候，就会使用到`tauri.config.json`中配置的`updater.windows.installMode`功能：\r\n\r\n  \"basicUi\"：指定安装过程中包括最终对话框在内的基本用户界面，需要用户手动点击下一步。\r\n\r\n  \"quiet\"：安静模式表示无需用户交互。如果安装程序需要管理员权限（WiX），则需要管理员权限。\r\n\r\n  \"passive\"：会显示一个只有安装进度条的UI，安装过程用户无需参与。\r\n\r\n\r\n需要注意的是：如果以为更新是增量更新，不会卸载之前已经安装好的应用程序只更新需要变更的部分。其实是不对的，整个安装过程可以理解为Tauri在后台帮你重新下载了一个最新的安装包，然后帮你重新安装了一下。\r\n\r\n总结：更新的核心原理就是通过使用Windows的PowerShell来对下载后的安装包进行`open`。然后由安装包进行安装。\r\n\r\n为什么我要花这么大的篇幅来介绍 Tauri 的更新原理呢？\r\n\r\n这是因为我们在更新的过程中碰到了两个比较大的问题：\r\n\r\n* 通过cmd调用`PowerShell`来安装时，会在安装过程中出现一个蓝色的`PowerShell`控制台一闪而过：\r\n\r\n\r\n* 在部分开启了病毒防护的Windows电脑上，使用PowerShell来执行对安装包的打开，会报错：Permission Denied，导致安装更新失败：https://github.com/rust-lang/rustlings/issues/604\r\n\r\n这些都是因为`Tauri`直接使用 `Powershell`的问题，那需要怎么改呢？很简单，那就是使用`Windows`操作系统提供的`ShellExecuteW`来运行安装程序，核心代码如下：\r\n\r\n    windows::Win32::UI::Shell::ShellExecuteW(  0,  operation.as_ptr(),  file.as_ptr(),  parameters.as_ptr(),  std::ptr::null(),  SW_SHOW,)\r\n\r\n\r\n但是这块是`Tauri`的源码，我们没法直接修改，但这个问题的解决方法我们已经给`Tauri`提了`PR`并已合入到官方的`1.6.8`正式版本当中：https://github.com/tauri-apps/tauri/pull/9818\r\n\r\n所以，你要做的就是确保Tauri升级到`v1.6.8`及以后版本。\r\n\r\n\r\n**应用签名**\r\n\r\n\r\nTauri应用程序签名可以分成2个部分，第一部分是应用程序签名，第二部分是安装包程序签名，官网上介绍的签名方法需要配置`tauri.config.json`中如下字段：\r\n\r\n    \"windows\": {    // 签名指纹    \"certificateThumbprint\": \"xxx\",    // 签名算法    \"digestAlgorithm\": \"sha256\",    // 时间戳    \"timestampUrl\": \"http://timestamp.comodoca.com\"}\r\n\r\n\r\n如果你按照官方的步骤来进行签名：https://v1.tauri.app/zh-cn/v1/guides/distribution/sign-windows/，很快就会发现问题所在：官网中签名有一个重要的步骤就是导出一个`.pfx`文件，但是现在业界签名工具基本上都是采用签名狗的方式进行的，这是一个类似于`U盾`签名工具，需要插入电脑中才可以进行签名，不支持直接导出`.pfx`格式的文件：\r\n\r\n\r\n所以我们需要额外处理一下：\r\n\r\n签名狗支持导出一个`.ce``rt`证书，可以查看到证书的指纹：\r\n\r\n\r\n这里证书的指纹对应的就是`certificateThumbprint`字段。\r\n\r\n然后需要插入我们在签名机构购买的USB key。这样，在构建的时候，就会提示让我们输入密码：\r\n\r\n\r\n到这里就可以完成对应用程序的签名。\r\n\r\n不过对于我们而言，USB key签名狗是整个公司共享的，通常不在前端开发手里（尤其是异地办公）。一种做法是在`Tauri`构建的过程中，对于需要签名的软件提供一个`signCommand`命令钩子，并为这个命令传入文件的路径，然后交由开发者对文件进行自行签名（比如上传到拥有签名工具的电脑，上传上去后，远程进行签名，签名完成再下载）。所以这就需要让`Tauri`将签名功能暴露出来，让我们自行进行签名，比如这样：\r\n\r\n    {   \"signCommand\": \"signtool.exe --host xxxx %1\"}\r\n\r\n\r\n该命令中包含一个`%1`，它只是二进制路径的占位符，`Tauri`在构建的时候会将需要签名的文件路径替换掉`%1`。\r\n\r\n\r\n这个功能官网上还没有更新相关的介绍，所以你可能看不到这块的使用方式，因为也是我们最近提交的PR：https://github.com/tauri-apps/tauri/pull/9902。不过目前，这个PR已经被合入`Tauri`的主版本中，你要做的就是就是升级`Tauri`到`1.7.0`升级`@tauri-apps/cli`到`1.6.0`。\r\n\r\n\r\n**四**\r\n\r\n\r\n**收益\\&总结**\r\n\r\n\r\n经过我们的不懈努力（不断地填坑）到目前，得物商家客服`Tauri`版本终于如期上线，基于`Tauri`迁移带来的收益如下：\r\n\r\n整体性能测试相比之前的`Electron`应用有比较明显的提升：\r\n\r\n* 包体积7M，Electron 80M下降91.25%。\r\n\r\n* 平均内存占用249M Electron 497M下降49.9%。\r\n\r\n* 平均CPU占用百分比20%，Electron 63.5%下降 63.19%。\r\n\r\n整体在性能体验上有一个非常显著改善。但是，这里也暴露出使用`Tauri`的一些问题。\r\n\r\n\r\n**社区活跃度还需要提升**\r\n\r\n\r\n直到2024年的今天，`Tauri`依然还不是特别完美，目前官方主要精力是放在了`2.0`的开发上，对于`1.x`的版本维护显得力不从心，主要原因也是因为官方人少。\r\n\r\n比如，`Tauri: dev`分支上，主要贡献者（\\> 30 commit）只有4个人；相对于Electron：主要贡献者有10人。\r\n\r\n\r\n除此之外，Electron实现了对`Chromium`的高级定制，因此在Electron中，我们可以使用`BrowserView`这样的功能，相对于Electron来说，Tauri目前所做的仅仅是对Webview的封装，Webview不支持的功能暂时都不行。另外，系统性的API确实少的可怜。如果要实现一些其他的功能，比如自动更新显示进度条等能力，就不得不使用Rust来扩展API。然后`Rust`语言学习成本是有一点的，所以，也给我们日常开发带来了不少挑战。\r\n\r\n\r\n**Webview2的问题**\r\n\r\n\r\n因为Tauri在Windows系统上比较依托于Webview2作为渲染的容器，虽然Tauri提供了检测本地电脑是否有安装Webview2以及提供联网下载的能力，但是因为Windows电脑千奇百怪，经常会出现未内置Webview2的Windows电脑下载不成功而导致程序无法启动的情况：\r\n\r\n\r\n对于这种情况，我们虽然可以将Webview2内置到安装包里面，在用户安装的时候进行内置解压安装，但是这样包体积就跟Electron相差不大。\r\n\r\n\r\n**成熟度和稳定性还不够**\r\n\r\n\r\n我们在将得物商家客服迁移到Tauri的过程中，就遇到了非常多的问题，有些问题是`Tauri`的`bug`。有些问题是`Tauri`的feature不够，有的是`Rust`社区的问题。单纯这一个迁移工作，我们就为`Tauri`社区共享了7个左右的PR：\r\n\r\n* 多窗口失去焦点无法闪烁：https://github.com/tauri-apps/tao/pull/931\r\n\r\n* 单窗口最小化后消息通知无法闪烁：https://github.com/tauri-apps/tao/pull/947\r\n\r\n* 在有病毒防护的Windows电脑中，应用无法正常更新：https://github.com/tauri-apps/tauri/pull/9818\r\n\r\n* 拓展tauri v1.x自定义签名的能力：https://github.com/tauri-apps/tauri/pull/9902\r\n\r\n* win7下消息提醒会导致主窗口失去焦点：https://github.com/tauri-apps/win7-notifications/pull/65\r\n\r\n* win7下消息提醒过多会导致窗口崩溃：https://github.com/tauri-apps/win7-notifications/pull/69\r\n\r\n* Windows单例模式下重启功能不生效：https://github.com/tauri-apps/tauri/pull/11684\r\n\r\n\r\n在遇到这些问题时，真的特别让人头大，因为社区几乎没有这些问题的答案，需要我们自己去翻Tauri的源码实现，有些是涉及到操作系统底层的一些API，因此我们必须要去看一些操作系统的API介绍和出入参说明，才能更好的理解Tauri的代码实现意图，才能解决我们碰到的这些问题。另外，Tauri和操作系统系统相关的源码都是基于Rust来编写的，也为我们的排查和解决增加了不少难度。最后一句名言和读者共勉：纸上得来终觉浅，绝知此事要躬行。\r\n\r\n\r\n**往期回顾**\r\n\r\n\r\n1.[基于Redis内核的热key统计实现方案｜得物技术](https://mp.weixin.qq.com/s?__biz=MzkxNTE3ODU0NA",
        "tags": [],
        "line": 703,
        "startOffset": 32294,
        "endOffset": 37818,
        "filePath": "Sources/CuboxSync/得物商家客服从Electron迁移到Tauri的技术实践-2024-12-20.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615154559,
        "isNativeComment": false
      },
      {
        "id": "1vxrljlva",
        "text": "&mid=2247535530&idx=1&sn=e00e1d30d69e0d96ee4f2b556f445e59&scene=21#wechat_redirect)\r\n\r\n3.[盘点这些年搭建器在用户体验优化的实践｜得物技术](https://mp.weixin.qq.com/s?__biz=MzkxNTE3ODU0NA",
        "tags": [],
        "line": 841,
        "startOffset": 37980,
        "endOffset": 38146,
        "filePath": "Sources/CuboxSync/得物商家客服从Electron迁移到Tauri的技术实践-2024-12-20.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615155245,
        "isNativeComment": false
      },
      {
        "id": "84r79eo9m",
        "text": "&mid=2247534846&idx=1&sn=f15de75d1e5248ea63f8cb1998cc803c&scene=21#wechat_redirect)\r\n\r\n5.[彩虹桥架构演进之路-负载均衡篇｜得物技术](https://mp.weixin.qq.com/s?__biz=MzkxNTE3ODU0NA",
        "tags": [],
        "line": 845,
        "startOffset": 38309,
        "endOffset": 38472,
        "filePath": "Sources/CuboxSync/得物商家客服从Electron迁移到Tauri的技术实践-2024-12-20.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615154574,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/当下（2023年9月）国内外AI行业状态大致是什么样的可能看 - 即刻App-2023-09-21.md": [
      {
        "id": "91k3rp5rf",
        "text": "&mid=2247507249&idx=1&sn=2619ef3bbed5be8bd576e12dcb9e1099&chksm=fe1a5a0ec96dd318c5118e86662899c7898490e1b887ed36053d0bdea7a6849f8ea963cf909e&mpshare=1&scene=24&srcid=0906DXPJ6BuihusdbF9OQ5wS&sharer_shareinfo=1f90871a7eae95db852f3065db113cb1&sharer_shareinfo_first=1f90871a7eae95db852f3065db113cb1#rd)\n\n3、《千万悬赏，81天竞赛，百度创业大赛卷出了哪些应用？》---百度   \n5月百度文心发布之后就举办了创业大赛，不同于行业内的一些黑客马拉松，这个比赛的时间跨度更长，参与比赛的团队更加\"职业\"，所以比赛最后的获奖项目基本上可以代表当下，在应用层一些相对\"明牌\"的尝试都有哪些。   \n比如最后一等奖是做文档理解和电商购物的，二等奖项目还包括PPT生成、销售AI、营销场景内容、平面设计、BOT、二次元图片生成、医疗、助手、法律等等......反过来讲，这些细分领域都已经比较卷了。   \n[mp.weixin.qq.com](https://mp.weixin.qq.com/s?__biz=MjM5NzU2OTgyMg",
        "tags": [],
        "line": 27,
        "startOffset": 877,
        "endOffset": 1494,
        "filePath": "Sources/CuboxSync/当下（2023年9月）国内外AI行业状态大致是什么样的可能看 - 即刻App-2023-09-21.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615155181,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/废掉一个人最隐蔽的方式：底层牵引力-2023-09-03.md": [
      {
        "id": "7qqh3hjbk",
        "text": "&mid=2650697002&idx=1&sn=501cb3541c7635eb7ef61600facea307&chksm=82e30fd6b59486c0877cb9e3fe2596fb65b2042f9faea004e097219f04c6c62b2e008ac0fb8d&mpshare=1&scene=1&srcid=09023qb9p2LDzJP24fTiJM4e&sharer_shareinfo=7df5af956bbd042f10e5e930fe904d21&sharer_shareinfo_first=7df5af956bbd042f10e5e930fe904d21\ntags: []\n---\n\n# 废掉一个人最隐蔽的方式：底层牵引力\n\n不是每一种观点，都可以叫洞见\n\n[Read in Cubox](https://cubox.pro/my/card?id=7097854308388964821)  \n[Read Original](https://mp.weixin.qq.com/s?__biz=MzAwMDM4Mjg2Nw",
        "tags": [],
        "line": 3,
        "startOffset": 142,
        "endOffset": 624,
        "filePath": "Sources/CuboxSync/废掉一个人最隐蔽的方式：底层牵引力-2023-09-03.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615154769,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/对比学习：Golang VS Python3 - 掘金-2023-12-28.md": [
      {
        "id": "tdfglsx33",
        "text": " 'zeta':          # 判断变量是否为 zeta \n        print('Welcome boss')   # 并输出欢迎信息\n    else:\n        print('Hi, ' + name)  \n\nPython不支持三元表达式，但是可以用一种类似的替代办法\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          title = \"boss\"\n    name = \"zeta\" if title ",
        "tags": [],
        "line": 547,
        "startOffset": 6686,
        "endOffset": 7071,
        "filePath": "Sources/CuboxSync/对比学习：Golang VS Python3 - 掘金-2023-12-28.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615155180,
        "isNativeComment": false
      },
      {
        "id": "b5wt7tfeh",
        "text": " 5:\n            break   # 可以比较以下break和不break的区别\n            pass\n    else:\n        print('loop over')\n\n**for** 遍历循环，循环遍历所有序列对象的子项\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          names = ['zeta', 'chow',  'world']\n    for n in names:\n        print('Hello, ' + n)\n        if n ",
        "tags": [],
        "line": 672,
        "startOffset": 8304,
        "endOffset": 8726,
        "filePath": "Sources/CuboxSync/对比学习：Golang VS Python3 - 掘金-2023-12-28.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615154798,
        "isNativeComment": false
      },
      {
        "id": "y0kdgvvx2",
        "text": " 0 {\n            err = fmt.Errorf(\"参数2不能为 %d\", j) //给err变量赋值一个error对象\n            return //返回r和err，因为定义了返回值变量名，所以不需要在这里写返回变量\n        }\n\n        return i / j, err //如果没有赋值error给err变量，err是nil\n    }\n\n    func main() {\n        //传递add函数和两个数字，计算相加结果\n        n, err := foo(100, 0)\n        if err != nil { //判断返回的err变量是否为nil，如果不是，说明函数调用出错，打印错误内容\n            println(err.Error())\n        } else {\n            println(n)\n        }\n    }\n\n`panic`可以手工调用，但是Golang官方建议尽量不要使用`panic`，每一个异常都应该用error对象捕获。\n\nGo语言在一些情况下会触发内建的`panic`，例如 0 除、数组越界等，修改一下上面的例子，我们让函数引起0除`panic`\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          package main\n\n    func foo(i int, j int) (r int) {\n    \treturn i / j\n    }\n\n    func main() {\n    \t//传递add函数和两个数字，计算相加结果\n    \tn := foo(100, 0)\n    \tprintln(n)\n    }\n\n运行后会出现\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          panic: runtime error: integer divide by zero\n    goroutine 1 [running]:\n    main.foo(...)\n            /lang.go:4\n    main.main()\n            /lang.go:9 +0x12\n    exit status 2\n\n手工`panic`可以这样:\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          func foo(i int, j int) (r int) {\n    \tif j ",
        "tags": [],
        "line": 1491,
        "startOffset": 18098,
        "endOffset": 19637,
        "filePath": "Sources/CuboxSync/对比学习：Golang VS Python3 - 掘金-2023-12-28.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615154592,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/如何让GPTs在对话里主动发送图片，链接，设置加粗或斜体-2024-03-14.md": [
      {
        "id": "gfr2qlq0j",
        "text": "&mid=2247484579&idx=1&sn=28777d245e280fdd40fece73bead643f&chksm=c15c2072f62ba9649e9419e1e59092a6dd85ad95bf8dc5153414d9377a7b4b8be0db87359aa8&scene=21#wechat_redirect)。\n\n同理，图片也有对应的语法。如果你的图片放在网络上的某个地方，你完全可以通过markdown通过插入图片的语法，去把它取过来。  \n\n例如，如果你的图片放在某个链接里。你可以通过 ！\\[图片标题\\](链接) 去引用它。这也是Markdown的语法。\n\n显示在浏览器上的就是链接里的图片了。\n\n**另外推荐一下最近我写的几个GPTs。**   \n\n第一个是\"提示精灵小富贵（Prompt Pet）\"，**它是一只会下金蛋的母鸡，可以生成质量极高的Prompt。**\n\n其中融入了[我在微软Prompt Engineering Conference](http://mp.weixin.qq.com/s?__biz=MzkxNTU1MTY3OA",
        "tags": [],
        "line": 33,
        "startOffset": 917,
        "endOffset": 1409,
        "filePath": "Sources/CuboxSync/如何让GPTs在对话里主动发送图片，链接，设置加粗或斜体-2024-03-14.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615157936,
        "isNativeComment": false
      },
      {
        "id": "fl0cmm0v4",
        "text": "&mid=2247483733&idx=1&sn=5aa3f3f5275f45bef593529fc89ed411&scene=21#wechat_redirect)  \n\n链接：https://chat.openai.com/g/g-N9d6Prmjs-ti-shi-jing-ling-prompt-pet\n\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FCXSqLfCoARlWebGRiaL2IYufy7Kok2569vmthiaHncm8eGuytbFq9ql1Qt7rkvjCJSjc8vwFAAzSAV8tgtGhcHAQ%2F640%3Fwx_fmt%3Djpeg&valid=false)\n\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FCXSqLfCoARlWebGRiaL2IYufy7Kok2569KV0iaSUazvfdicHbGxnvzw0c6V5wJEGFmMzJBibWsjAAGLkos9dTgHDHw%2F640%3Fwx_fmt%3Djpeg&valid=false)\n\n第二个是**\"分治仓鼠博士（Dr. Divide \\& Conquer）\"**\n\n因为事情太多，为了帮自己干活，只好停下来磨刀，写了个利用分治法思想，自动拆解大问题为子问题，并递归地解决它们的GPTs。这让它有能力解决更复杂问题。\n\n分治法是一种古老且著名的算法，其核心思想是\"分而治之，各个击破\"。如果一个人没听说过分治法，那他一定不是学计算机的。关于它在Prompt Engineering上的应用，你可以看我写的[如何用GPT写长篇科幻？用分治法完成复杂任务](https://mp.weixin.qq.com/s?__biz=MzkxNTU1MTY3OA",
        "tags": [],
        "line": 49,
        "startOffset": 1699,
        "endOffset": 2591,
        "filePath": "Sources/CuboxSync/如何让GPTs在对话里主动发送图片，链接，设置加粗或斜体-2024-03-14.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615157718,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/如何用人工智能免费帮你改英文？ - 少数派-2022-05-31.md": [
      {
        "id": "e9so4oslx",
        "text": "&mid=2653540656&idx=1&sn=336e3c9284b15cf24c38d063468ed79e&chksm=f389bbe7c4fe32f1df04ae208ab4350d95503db8deeff3e8c44b3be164af53823f47067e2d6c&token=488185561&lang=zh_CN#rd)、[帮你写文章](http://mp.weixin.qq.com/s?__biz=MzIyODI1MzYyNA",
        "tags": [],
        "line": 29,
        "startOffset": 647,
        "endOffset": 877,
        "filePath": "Sources/CuboxSync/如何用人工智能免费帮你改英文？ - 少数派-2022-05-31.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615157969,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/如何用 Python 和正则表达式抽取文本结构化信息？ - 少数派-2022-05-31.md": [
      {
        "id": "svqyzi7ee",
        "text": "&mid=2653540538&idx=1&sn=90ad36da2d5d89b16eca2db3829b93da&chksm=f389ba6dc4fe337bd2a73249b15a3f729cf24f961cff7e37d545b9d87943d0c39eb2c7a90b7a&token=212680216&lang=zh_CN#rd)，专门讲解 Google Colab 的特点与使用方式。  \r\n\r\n为了你能够更为深入地学习与了解代码，我建议你在 Google Colab 中开启一个全新的 Notebook ，并且根据下文，依次输入代码并运行。在此过程中，充分理解代码的含义。\r\n\r\n这种看似笨拙的方式，其实是学习的有效路径。\r\n\r\n## 代码\r\n\r\n首先，读入 Python 正则表达式包：\r\n\r\n    import re\r\n\r\n然后，我们把数据准备好。注意为了演示代码的通用性，我这里在最后加了一行文字，区别于之前的文字规律，看看我们的代码能否正确处理它：\r\n\r\n    data = \"\"\"张华考上了北京大学\r\n    李萍进了中等技术学校\r\n    韩梅梅进了百货公司\r\n    他们都有光明的前途\"\"\"\r\n\r\n然后，该写正则表达式了。你真的需要自己手动来写吗？当然不必。\r\n\r\n强大的 regex101 网站，已经帮助我们准备好了：\r\n![](https://image.cubox.pro/article/2022042213504344706/19296.jpg)\r\n\r\n请你点击上图中红色圈出的按钮，网站会为你准备好一个初始代码的模板，可以匹配你需要的模式：\r\n![](https://image.cubox.pro/article/2022042213504333439/32756.jpg)\r\n\r\n你不需要完全照搬代码。其中有这样一句，是很重要的，拷贝过来，贴到 Colab Notebook 就好：\r\n\r\n    regex = r\"(.*)[考|进].*了(.*)\"\r\n\r\n以上就是你的正则表达式，在 Python 里面应有的样子。\r\n\r\n我们准备一个空列表，用来接收数据：\r\n\r\n    mylist = []\r\n\r\n接着，写一个循环：\r\n\r\n    for line in data.split('\\n'):\r\n      mysearch = re.search(regex, line)\r\n      if mysearch:\r\n        name = mysearch.group(1)\r\n        dest = mysearch.group(2)\r\n        mylist.append((name, dest))\r\n\r\n我给你解释一下这个循环里面，各条语句的含义：\r\n\r\n* `data.split('\\n')` 把文本数据按行来拆分开。这样我们就可以针对每一行，来获取数据；\r\n* `mysearch = re.search(regex, line)` 这一句尝试匹配模式到该行内容；\r\n* `if mysearch` 这个判断语句，是让程序分辨一下，该行是否有我们要找的模式。例如最后一行文字，里面并没有咱们前面分析的文字模式。遇到这样的行，直接跳过；\r\n* `name = mysearch.group(1)` 是说匹配的第一组内容，也就是 regex101 网站里绿色代表的人名分组存到 `name` 变量里。下一句依次类推。注意 `group` 对应你正则表达式里面小括号出现的顺序，从 1 开始计数；\r\n* `mylist.append((name, dest))` 把该行抽取到的信息，存入到咱们之前定义的空列表里面。\r\n\r\n注意，如果不加 `mysearch = re.search(regex, line)` 这一句，程序会对每一行都尝试匹配并且抽取分组内容，那么结果就会报这样的错误：\r\n![](https://image.cubox.pro/article/2022042213504338844/79454.jpg)\r\n\r\n所以你看，用正则表达式抽取信息时，不能蛮干。\r\n\r\n此时，我们查看一下 `mylist` 这个列表里面的内容：\r\n\r\n    mylist\r\n\r\n结果为：\r\n\r\n    [('张华', '北京大学'), ('李萍', '中等技术学校'), ('韩梅梅', '百货公司')]\r\n\r\n不错，一个不多，一个不少，恰好是我们需要的。\r\n\r\n我们要把它导出成为表格。方法有很多，但是最简便顺手的，是用 Pandas 数据分析软件包：\r\n\r\n    import pandas as pd\r\n\r\n只需要利用 `pd.DataFrame` 函数，我们就能把上面列表和元组（tuple）组成的一个二维结构，变成数据框。\r\n\r\n    df = pd.DataFrame(mylist)\r\n    df.columns = ['姓名', '去向']\r\n\r\n注意，这里我们还非常细心地修改了表头。\r\n\r\n看看你的劳动成果吧：\r\n\r\n    df\r\n\r\n![](https://image.cubox.pro/article/2022042213504310833/89800.jpg)\r\n\r\n有了数据框，转换成为 Excel ，就是一行代码的事情了：\r\n\r\n    df.to_excel(\"dest.xlsx\", index=False)\r\n\r\n进入 Files 标签页，刷新并且查看一下当前目录下的内容：\r\n![](https://image.cubox.pro/article/2022042213504343097/51366.jpg)\r\n\r\n这个 `dest.xlsx` 就是输出的结果了。下载之后我们可以用 Excel 打开查看。\r\n![](https://image.cubox.pro/article/2022042213504378547/27351.jpg)\r\n\r\n任务完成！你可以把结果提交给班主任，看他满意的笑容了。\r\n\r\n## 小结\r\n\r\n这篇教程里面，咱们谈了如何利用文本字符规律，借助 Python 和正则表达式，来提取结构化信息。\r\n\r\n希望你已经掌握了以下本领：\r\n\r\n* 了解正则表达式的功用；\r\n* 用 regex101 网站尝试正则表达式匹配，并且生成初步的代码；\r\n* 用 Python 批量提取信息，并且根据需求导出结构化数据为指定格式。\r\n\r\n再次强调一下，对于这么简单的样例，使用上述方法，绝对是大炮轰蚊子。然而，如果你需要处理的数据是海量的，这个方法给你节省下来的时间，会非常可观。希望你能够举一反三，在自己的工作中灵活运用它。\r\n\r\n## 资源\r\n\r\n先别急着走。由于篇幅所限，教程中我只给你介绍了几项最简单正则语法。肯定会有很多你感兴趣的语法知识，没来得及一一讲给你听。如果你对于正则表达式很感兴趣，因为科研或者工作目的，需要马上学习，也请不要着急。\r\n\r\n我这里刚好有一份**免费的**优秀教程资源分享给你：\r\n![](https://image.cubox.pro/article/2022042213504378468/75777.jpg)\r\n\r\n我在 UNT 讲授 INFO 5731 课程的时候，就是用这份教程结合翻转教学，让从没听说过正则表达式的学生们，在一两周之内掌握并且熟练应用。相信对你来说，这份教程资源也会很有用。\r\n\r\n你可以在我的公众号「玉树芝兰」（nkwangshuyi）后台回复「regex」，查看教程链接。\r\n\r\n如果本文可能对你身边的亲友有帮助，也欢迎你把本文通过微博或朋友圈分享给他们。让他们一起参与到我们的讨论中来。\r\n\r\n祝学习愉快！  \r\n\r\n延伸阅读：\r\n\r\n* [学 Python ，能提升你的竞争力吗？](http://mp.weixin.qq.com/s?__biz=MzIyODI1MzYyNA",
        "tags": [],
        "line": 169,
        "startOffset": 5757,
        "endOffset": 9059,
        "filePath": "Sources/CuboxSync/如何用 Python 和正则表达式抽取文本结构化信息？ - 少数派-2022-05-31.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615158071,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/如何打造个性化 Notion 进度条？ - 少数派-2022-05-31.md": [
      {
        "id": "buh56tg4w",
        "text": " 100, \r\n    \"■■■■■■■■■■ \" + format(round(prop(\"已完成\") / prop(\"总量\") * 100)) + \"%\", \r\n      if(round(prop(\"已完成\") / prop(\"总量\") * 100) < 100 and round(prop(\"已完成\") / prop(\"总量\") * 100) >= 90, \r\n      \"■■■■■■■■■ \" + format(round(prop(\"已完成\") / prop(\"总量\") * 100)) + \"%\", \r\n        if(round(prop(\"已完成\") / prop(\"总量\") * 100) < 90 and round(prop(\"已完成\") / prop(\"总量\") * 100) >= 80, \r\n        \"■■■■■■■■ \" + format(round(prop(\"已完成\") / prop(\"总量\") * 100)) + \"%\", \r\n          if(round(prop(\"已完成\") / prop(\"总量\") * 100) < 80 and round(prop(\"已完成\") / prop(\"总量\") * 100) >= 70, \r\n          \"■■■■■■■ \" + format(round(prop(\"已完成\") / prop(\"总量\") * 100)) + \"%\", \r\n            if(round(prop(\"已完成\") / prop(\"总量\") * 100) < 70 and round(prop(\"已完成\") / prop(\"总量\") * 100) >= 60,\r\n            \"■■■■■■ \" + format(round(prop(\"已完成\") / prop(\"总量\") * 100)) + \"%\",\r\n              if(round(prop(\"已完成\") / prop(\"总量\") * 100) < 60 and round(prop(\"已完成\") / prop(\"总量\") * 100) >= 50, \r\n              \"■■■■■ \" + format(round(prop(\"已完成\") / prop(\"总量\") * 100)) + \"%\", \r\n                if(round(prop(\"已完成\") / prop(\"总量\") * 100) < 50 and round(prop(\"已完成\") / prop(\"总量\") * 100) >= 40, \r\n              \"■■■■ \" + format(round(prop(\"已完成\") / prop(\"总量\") * 100)) + \"%\", \r\n                  if(round(prop(\"已完成\") / prop(\"总量\") * 100) < 40 and round(prop(\"已完成\") / prop(\"总量\") * 100) >= 30, \r\n                  \"■■■ \" + format(round(prop(\"已完成\") / prop(\"总量\") * 100)) + \"%\", \r\n                    if(round(prop(\"已完成\") / prop(\"总量\") * 100) < 30 and round(prop(\"已完成\") / prop(\"总量\") * 100) >= 20, \r\n                    \"■■ \" + format(round(prop(\"已完成\") / prop(\"总量\") * 100)) + \"%\", \r\n                      if(round(prop(\"已完成\") / prop(\"总量\") * 100) < 20 and round(prop(\"已完成\") / prop(\"总量\") * 100) > 0, \r\n                      \"■ \" + format(round(prop(\"已完成\") / prop(\"总量\") * 100)) + \"%\", \r\n                        if(round(prop(\"已完成\") / prop(\"总量\") * 100) ",
        "tags": [],
        "line": 126,
        "startOffset": 3581,
        "endOffset": 5447,
        "filePath": "Sources/CuboxSync/如何打造个性化 Notion 进度条？ - 少数派-2022-05-31.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615157687,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/如何优雅地关闭Kubernetes集群中的Pod-2023-11-13.md": [
      {
        "id": "xopnjrw3g",
        "text": "&mid=2247487192&idx=1&sn=52fc08998b5f4c4cd33be5052d6bbe28&chksm=fa80df4fcdf756594bb4a07e5680e32eb1cce9eb1ce5b2eee11d50b8098840b27fa07a5b07b3&token=2033333242&lang=zh_CN&scene=21\ntags: []\n---\r\n\r\n# 如何优雅地关闭Kubernetes集群中的Pod\r\n\r\nGracefully Shutting Down Pods in a Kubernetes Cluster\r\n\r\n[Read in Cubox](https://cubox.pro/my/card?id=7123699292400782254)  \r\n[Read Original](https://mp.weixin.qq.com/s?__biz=MzUzNTY5MzU2MA",
        "tags": [],
        "line": 3,
        "startOffset": 143,
        "endOffset": 560,
        "filePath": "Sources/CuboxSync/如何优雅地关闭Kubernetes集群中的Pod-2023-11-13.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615157281,
        "isNativeComment": false
      },
      {
        "id": "52zt7ogt5",
        "text": "&mid=2247487176&idx=1&sn=e3cb877a897fa24320f1820ceb80c4d0&chksm=fa80df5fcdf75649c1d517fabd265b37408654917bf6dfe8ffb35625387d0aef23e5516c0fe8&scene=21#wechat_redirect)，我们列举出了简单粗暴地使用`kubectl drain` 命令清除集群节点上的 Pod 的问题和挑战。在这篇文章中，我们将介绍解决这些问题和挑战的手段之一：优雅地关闭 Pod。\r\n\r\n## Pod驱逐的生命周期\r\n\r\n默认情况下，`kubectl drain`命令驱逐节点上的 Pod 时会遵循 Pod 的生命周期，这意味着整个过程会遵守以下规则：\r\n\r\n*\r\n  `kubectl drain`将向控制中心发出删除目标节点上的 Pod 的请求。随后，请求将通知目标节点上的 `kubelet` 开始关闭 Pod。\r\n*\r\n  节点上的`kubelet` 将会调用 Pod 里的 `preStop` 钩子。\r\n*\r\n  当 `preStop` 钩子执行完成后，节点上的`kubelet` 会向Pod容器中运行的程序发送 `TERM`信号 （SIGTERM）。\r\n*\r\n  节点上的`kubelet`将最多等待指定的宽限期（在pod上指定，或从命令行传入；默认为30秒）然后关闭容器，然后强行终止进程（使用SIGKILL）。注意，这个宽限期包括执行 `preStop`钩子的时间。\r\n\r\n> 译注：Kubelet 终止Pod前的等待宽限期有两种方式指定\r\n>\r\n> 1.\r\n>    在Pod定义里通过Pod模板的spec.terminationGracePeriodSeconds 设定\r\n> 2.\r\n>    kubectl delete pod {podName} --grace-period=60\r\n\r\n基于此流程，我们可以利用应用程序 Pod 中的`preStop`钩子和信号处理来正常关闭应用程序，以便在最终终止应用程序之前对其进行\"清理\"。例如，假如有一个工作进程从队列中读取信息然后处理任务，我们可以让应用程序捕获 TERM 系统信号，以指示该应用程序应停止接受新任务，并在所有当前任务完成后停止运行。或者，如果运行的应用程序无法修改以捕获 TERM 信号（例如第三方应用程序），则可以使用`preStop`钩子来实现该服务提供的自定义API，来正常关闭应用。\r\n\r\n在我们的示例中，Nginx 默认情况下不能处理 TERM 信号，因此，我们将改为依靠 Pod 的 `preStop`钩子实现正常停止Nginx。我们将修改资源定义，将生命周期钩子添加到容器的`spec`定义中，如下所示：\r\n\r\n    lifecycle:\r\n    preStop:\r\n    exec:\r\n    command:[\r\n    #Gracefullyshutdownnginx\r\n    \"/usr/sbin/nginx\",\"-s\",\"quit\"\r\n    ]\r\n\r\n应用此配置后，在将 TERM 信号发送给容器中的Nginx进程之前，`kebulet` 调用 Pod 的生命周期钩子发出命令 `/ usr / sbin / nginx -s quit`。请注意，由于该命令将会正常停止 Nginx 进程和 Pod，因此 TERM 信号实际上在这个例子中是一个空操作。\r\n\r\n在定义文件添加了生命周期钩子后，整个 Deployment 资源的定义变成了下面这样\r\n\r\n    ---\r\n    apiVersion:apps/v1\r\n    kind:Deployment\r\n    metadata:\r\n    name:nginx-deployment\r\n    labels:\r\n    app:nginx\r\n    spec:\r\n    replicas:2\r\n    selector:\r\n    matchLabels:\r\n    app:nginx\r\n    template:\r\n    metadata:\r\n    labels:\r\n    app:nginx\r\n    spec:\r\n    containers:\r\n    -name:nginx\r\n    image:nginx:1.15\r\n    ports:\r\n    -containerPort:80\r\n    lifecycle:\r\n    preStop:\r\n    exec:\r\n    command:[\r\n    #Gracefullyshutdownnginx\r\n    \"/usr/sbin/nginx\",\"-s\",\"quit\"\r\n    ]\r\n\r\n## 停机后的后续流量\r\n\r\n使用上面的`preStop`钩子正常关闭 Pod 可以确保 Nginx 在处理完现存流量有才会停止。但是，你可能会发现，Nginx 容器在关闭后仍会继续接收到流量，从而导致服务出现停机时间。\r\n\r\n为了了解造成这个问题的原因，让我们来看一个示例图。假定该节点已接收到来自客户端的流量。应用程序会产生一个工作线程来处理请求。我们用在 Nginx Pod 示例图内的圆圈表示该工作线程。\r\n![图片](https://image.cubox.pro/cardImg/2023111420580431170/84298.jpg?imageMogr2/quality/90/ignore-error/1) 正在处理请求的Nginx\r\n\r\n假设在工作线程处理请求的同时，集群的运维人员决定对 `Node1` 进行维护。运维运行了`kubectl drain node-1` 后，节点上的`kubelet` 会执行 Pod 设置的`preStop`钩子，开始进入Nginx进程正常关闭的流程。\r\n![图片](https://image.cubox.pro/cardImg/2023111420580455209/97098.jpg?imageMogr2/quality/90/ignore-error/1) 对节点进行维护，清出节点上的Pod时会先执行preStop钩子\r\n\r\n由于 Nginx 仍要处理已存流量的请求，所以进入正常关闭流程后 Nginx 不会马上终止进程，但是会拒绝处理后续到达的流量，向新请求返回错误。\r\n\r\n在这个时间点，假设一个新的服务请求到达了 Pod 上层的 Service，因为此时 Pod 仍然是上层 Service 的Endpoint，所以这个即将关闭的 Pod 仍然可能会接收到 Service 分发过来的请求。如果 Pod 真的接收到了分发过来的新请求 Nginx 就会拒绝处理并返回错误。\r\n> 译注：推荐阅读[学练结合快速掌握K8s Service控制器](https://mp.weixin.qq.com/s?__biz=MzUzNTY5MzU2MA",
        "tags": [],
        "line": 28,
        "startOffset": 1072,
        "endOffset": 3974,
        "filePath": "Sources/CuboxSync/如何优雅地关闭Kubernetes集群中的Pod-2023-11-13.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615157210,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/好奇人们在Arc中的工作流程是怎样的。愿意分享一下你的固定标签-空间-文件夹和思考过程吗？：Arc浏...-2024-01-06.md": [
      {
        "id": "9f9ktkt4z",
        "text": "\r\n    !pip install langchain langchain-community chromadb\r\n\r\n    # ",
        "tags": [],
        "line": 40,
        "startOffset": 1512,
        "endOffset": 1583,
        "filePath": "Sources/CuboxSync/好奇人们在Arc中的工作流程是怎样的。愿意分享一下你的固定标签-空间-文件夹和思考过程吗？：Arc浏...-2024-01-06.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "\r\n    !pip install langchain langchain-community chromadb\r\n\r\n    # "
        ],
        "createdAt": 1748615155347,
        "isNativeComment": true
      },
      {
        "id": "z9b2i7ory",
        "text": "\r\n    from langchain.callbacks.manager import CallbackManager\r\n    from langchain.callbacks.streaming_stdout import StreamingStdOutCallbackHandler\r\n    from langchain.chains import LLMChain\r\n    from langchain.prompts import PromptTemplate\r\n    from langchain.prompts.few_shot import FewShotPromptTemplate\r\n    from langchain_community.llms import LlamaCpp\r\n\r\n    # ",
        "tags": [],
        "line": 46,
        "startOffset": 1700,
        "endOffset": 2070,
        "filePath": "Sources/CuboxSync/好奇人们在Arc中的工作流程是怎样的。愿意分享一下你的固定标签-空间-文件夹和思考过程吗？：Arc浏...-2024-01-06.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "\r\n    from langchain.callbacks.manager import CallbackManager\r\n    from langchain.callbacks.streaming_stdout import StreamingStdOutCallbackHandler\r\n    from langchain.chains import LLMChain\r\n    from langchain.prompts import PromptTemplate\r\n    from langchain.prompts.few_shot import FewShotPromptTemplate\r\n    from langchain_community.llms import LlamaCpp\r\n\r\n    # "
        ],
        "createdAt": 1748615155535,
        "isNativeComment": true
      },
      {
        "id": "f2ipdpian",
        "text": "\r\n    from langchain.schema import Document\r\n    # prompt = \"Given the following scripts, rewrite the final two seasons so that the plots are more consistent with the seasons before.\"\r\n\r\n    # source = \"\"\r\n    # currentSeason = 0\r\n    # for example in examples:\r\n    #     if example[\"season\"] != currentSeason:\r\n    #         if currentSeason != 0:\r\n    #             source += \"<END OF SEASON>\\n\"\r\n    #         source += \"\\nSEASON \" + str(example[\"season\"]) + \"\\n\"\r\n    #         currentSeason = example[\"season\"]\r\n\r\n    #     source += example[\"content\"] + \"<END OF EPISODE>\\n\"\r\n\r\n    documents = []\r\n    for example in examples:\r\n        documents.append(\r\n            Document(\r\n                page_content=example[\"content\"],\r\n                metadata={\r\n                    \"title\": example[\"title\"],\r\n                    \"season\": example[\"season\"],\r\n                    \"episode\": example[\"episode\"]\r\n                }\r\n            )\r\n        )\r\n\r\n    # ",
        "tags": [],
        "line": 81,
        "startOffset": 3068,
        "endOffset": 4037,
        "filePath": "Sources/CuboxSync/好奇人们在Arc中的工作流程是怎样的。愿意分享一下你的固定标签-空间-文件夹和思考过程吗？：Arc浏...-2024-01-06.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "\r\n    from langchain.schema import Document\r\n    # prompt = \"Given the following scripts, rewrite the final two seasons so that the plots are more consistent with the seasons before.\"\r\n\r\n    # source = \"\"\r\n    # currentSeason = 0\r\n    # for example in examples:\r\n    #     if example[\"season\"] != currentSeason:\r\n    #         if currentSeason != 0:\r\n    #             source += \"<END OF SEASON>\\n\"\r\n    #         source += \"\\nSEASON \" + str(example[\"season\"]) + \"\\n\"\r\n    #         currentSeason = example[\"season\"]\r\n\r\n    #     source += example[\"content\"] + \"<END OF EPISODE>\\n\"\r\n\r\n    documents = []\r\n    for example in examples:\r\n        documents.append(\r\n            Document(\r\n                page_content=example[\"content\"],\r\n                metadata={\r\n                    \"title\": example[\"title\"],\r\n                    \"season\": example[\"season\"],\r\n                    \"episode\": example[\"episode\"]\r\n                }\r\n            )\r\n        )\r\n\r\n    # "
        ],
        "createdAt": 1748615154903,
        "isNativeComment": true
      },
      {
        "id": "x7cak988b",
        "text": "\r\n    callbackManager = CallbackManager([StreamingStdOutCallbackHandler()])\r\n\r\n    llm = LlamaCpp(\r\n        model_path=\"./mistral-7b-v0.1.Q6_K.gguf\",\r\n        n_ctx=8196,\r\n        n_batch=512,\r\n        n_threads=7,\r\n        n_gpu_layers=1,\r\n        f16_kv=True,\r\n        verbose=False,\r\n        seed=42,\r\n        callback_manager=callbackManager\r\n    )\r\n\r\n    pmt = PromptTemplate(\r\n        template=\"Question: {input}\\nAnswer: Hello!<\",\r\n        input_variables=[\"input\"]\r\n    )\r\n    llm_chain = LLMChain(llm=llm, prompt=pmt)\r\n\r\n    # ",
        "tags": [],
        "line": 140,
        "startOffset": 4889,
        "endOffset": 5429,
        "filePath": "Sources/CuboxSync/好奇人们在Arc中的工作流程是怎样的。愿意分享一下你的固定标签-空间-文件夹和思考过程吗？：Arc浏...-2024-01-06.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "\r\n    callbackManager = CallbackManager([StreamingStdOutCallbackHandler()])\r\n\r\n    llm = LlamaCpp(\r\n        model_path=\"./mistral-7b-v0.1.Q6_K.gguf\",\r\n        n_ctx=8196,\r\n        n_batch=512,\r\n        n_threads=7,\r\n        n_gpu_layers=1,\r\n        f16_kv=True,\r\n        verbose=False,\r\n        seed=42,\r\n        callback_manager=callbackManager\r\n    )\r\n\r\n    pmt = PromptTemplate(\r\n        template=\"Question: {input}\\nAnswer: Hello!<\",\r\n        input_variables=[\"input\"]\r\n    )\r\n    llm_chain = LLMChain(llm=llm, prompt=pmt)\r\n\r\n    # "
        ],
        "createdAt": 1748615155724,
        "isNativeComment": true
      },
      {
        "id": "9wvdlm2lm",
        "text": "\r\n    from langchain.vectorstores import Chroma\r\n    from langchain_community.embeddings import LlamaCppEmbeddings\r\n\r\n    storagePath = \"./storage/chroma\"\r\n    if not os.path.exists(storagePath):\r\n        os.makedirs(storagePath)\r\n\r\n    embeddings = LlamaCppEmbeddings(\r\n        model_path=\"./mistral-7b-v0.1.Q6_K.gguf\",\r\n        n_ctx=8196,\r\n        n_batch=512,\r\n        n_threads=7,\r\n        n_gpu_layers=1,\r\n        f16_kv=True,\r\n        verbose=False,\r\n        seed=42\r\n    )\r\n\r\n    # ",
        "tags": [],
        "line": 175,
        "startOffset": 5806,
        "endOffset": 6300,
        "filePath": "Sources/CuboxSync/好奇人们在Arc中的工作流程是怎样的。愿意分享一下你的固定标签-空间-文件夹和思考过程吗？：Arc浏...-2024-01-06.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "\r\n    from langchain.vectorstores import Chroma\r\n    from langchain_community.embeddings import LlamaCppEmbeddings\r\n\r\n    storagePath = \"./storage/chroma\"\r\n    if not os.path.exists(storagePath):\r\n        os.makedirs(storagePath)\r\n\r\n    embeddings = LlamaCppEmbeddings(\r\n        model_path=\"./mistral-7b-v0.1.Q6_K.gguf\",\r\n        n_ctx=8196,\r\n        n_batch=512,\r\n        n_threads=7,\r\n        n_gpu_layers=1,\r\n        f16_kv=True,\r\n        verbose=False,\r\n        seed=42\r\n    )\r\n\r\n    # "
        ],
        "createdAt": 1748615155641,
        "isNativeComment": true
      }
    ],
    "Sources/CuboxSync/境成分享｜YC S23百家AI项目看硅谷AI创业趋势-2023-09-03.md": [
      {
        "id": "mqlwlbvde",
        "text": "&mid=2247485475&idx=1&sn=86854e087d6650bf773c9309f0b82c6b&chksm=97e42f06a093a6105607e5d098bb3f1e8109caaab82e9b287d8c9f3c9c62bc30da8d2da52e33&mpshare=1&scene=1&srcid=0831NL0cnbA7ruE8TGiESRsJ&sharer_shareinfo=2dfeda008a39e7acfd4ca712b278fb2b&sharer_shareinfo_first=4272b83ba857214f2caf7ccd0259873d\ntags: []\n---\r\n\r\n# 境成分享｜YC S23百家AI项目看硅谷AI创业趋势\r\n\r\nYC最新AI项目盘点，一览海外前沿AI创业方向\r\n\r\n[Read in Cubox](https://cubox.pro/my/card?id=7097933090118435367)  \r\n[Read Original](https://mp.weixin.qq.com/s?__biz=MzIxODc3MjA0Mg",
        "tags": [],
        "line": 3,
        "startOffset": 143,
        "endOffset": 650,
        "filePath": "Sources/CuboxSync/境成分享｜YC S23百家AI项目看硅谷AI创业趋势-2023-09-03.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615155792,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/和佬友们分享下我的clashverge全局扩展脚本配置（基于官方文档&严格阻止DNS泄漏&全局自定义直连-代理规则&链式代理&高可用性DNS配置&默认所有节点启用udp代理） - 开发调优 - 开发调.md": [
      {
        "id": "5o6hf1sfv",
        "text": " null); // Combine proxies config[\"proxies\"] = [...processedProxies, ...landingNodeProxies]; // Handle proxy-providers if (proxyProviderCount > 0) { console.log(\"信息：检测到 proxy-providers。\"); config[\"proxy-providers\"] = pp; } // 转义正则元字符，保证名字按\"字面量\"匹配 function escapeForRegExp(s) { return s.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); } // 取出所有落地节点的名字，并做转义 const landingNodeNames = landingNodeProxies.map(p => p.name); const escapedNames = landingNodeNames .map(escapeForRegExp) .join('|'); // 构造只匹配完全等于这些名字的正则 const excludeLandingFilter = escapedNames ? `^(?:${escapedNames})$` : null; // 去除节点选择中的落地节点 const finalProxyGroups = proxyGroupsConfig.map(group => { if (group[\"name\"] ",
        "tags": [],
        "line": 78,
        "startOffset": 19820,
        "endOffset": 20494,
        "filePath": "Sources/CuboxSync/和佬友们分享下我的clashverge全局扩展脚本配置（基于官方文档&严格阻止DNS泄漏&全局自定义直连-代理规则&链式代理&高可用性DNS配置&默认所有节点启用udp代理） - 开发调优 - 开发调.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615156087,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/华为是一家怎样的公司？ - 知乎-2022-06-02.md": [
      {
        "id": "ifq1e3qk2",
        "text": "总结",
        "tags": [],
        "line": 68,
        "startOffset": 2167,
        "endOffset": 2173,
        "filePath": "Sources/CuboxSync/华为是一家怎样的公司？ - 知乎-2022-06-02.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615155554,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/十个方法，帮你做好任务管理-2024-05-22.md": [
      {
        "id": "ryjdrrqig",
        "text": "&mid=2649904618&idx=1&sn=6faa1b5924cfb5d430481a906681e732&chksm=837bbb53b40c32453f67a540f415df183f56d4f3889e7cce5e60962937b80e42520df19f89e1&scene=21#wechat_redirect)\r\n\r\n## [四象限这波更新，你get了吗？](http://mp.weixin.qq.com/s?__biz=MzAwNzQ5NDYxNA",
        "tags": [],
        "line": 183,
        "startOffset": 5803,
        "endOffset": 6044,
        "filePath": "Sources/CuboxSync/十个方法，帮你做好任务管理-2024-05-22.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615161145,
        "isNativeComment": false
      },
      {
        "id": "etbk06t7v",
        "text": "&mid=2649904584&idx=1&sn=ac87c1cb836d11853f04904d6fcd0988&chksm=837bbb71b40c3267ea503845a0deb67184442c6a05a664e9eb7c7c95e1c65a27b7b42ffebf56&scene=21#wechat_redirect)\r\n\r\n[你如何过一天，就如何过一生](http://mp.weixin.qq.com/s?__biz=MzAwNzQ5NDYxNA",
        "tags": [],
        "line": 188,
        "startOffset": 6265,
        "endOffset": 6501,
        "filePath": "Sources/CuboxSync/十个方法，帮你做好任务管理-2024-05-22.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615160607,
        "isNativeComment": false
      },
      {
        "id": "54c65tb6z",
        "text": "&mid=2649905186&idx=1&sn=4d3c9a5a278a7f174d13393e45fe52f3&chksm=837bb69bb40c3f8dba7c55612554fab6f51d419a6d360694583c7d30859645d4f0e5c261a8bb&scene=21#wechat_redirect)\r\n\r\n[如何用清单形式组织生活？](http://mp.weixin.qq.com/s?__biz=MzAwNzQ5NDYxNA",
        "tags": [],
        "line": 193,
        "startOffset": 6722,
        "endOffset": 6957,
        "filePath": "Sources/CuboxSync/十个方法，帮你做好任务管理-2024-05-22.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615161064,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/创业出海神器 Supabase 自建指南-2024-12-02.md": [
      {
        "id": "8oovra4ir",
        "text": "&mid=2247488726&idx=1&sn=b5c541d382324b6c53bcd555a028a3a5&scene=21#wechat_redirect)中，我们提供了开箱即用的Supabase自建支持。这是一篇关于如何自建 Supabase 的详细教程。完整的教程，我建议您直接参考我们的博客：https://pigsty.cc/zh/blog/db/supabase/\r\n\r\nSupabase是什么？\r\n\r\n**Supabase** 是一个开源的 Firebase，是一个 BaaS （Backend as Service）。Supabase 对 PostgreSQL 进行了封装，并提供了身份认证，消息传递，边缘函数，对象存储，以及基于 PG 数据库模式自动生成的 REST API 与 GraphQL API。\r\n\r\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_png%2FWkpr3rA9wF00n0ibxCoCt36a13StXnlEgqxGTJAS0ffrmOSIAaich5OHCNfwiaaJyjIshgrrYgLoqWGgguMwClxiaQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg%26tp%3Dwebp%26wxfrom%3D5%26wx_lazy%3D1%26wx_co%3D1&valid=false)\r\n\r\n```\r\n\r\n```\r\n\r\nSupabase 旨在为开发者提供一站式的后端解决方案，减少开发和维护后端基础设施的复杂性，使开发者专注于前端开发和用户体验。用大白话来说就是：让开发者告别绝大部分后端开发的工作，只需要懂数据库设计与前端即可快速出活！\r\n\r\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_png%2FWkpr3rA9wF00n0ibxCoCt36a13StXnlEgz5oLAcU2h6DCScOwzLKjDEACL0dgSo9MUiarWE4etNT5Dd3zeHxjSpw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg%26tp%3Dwebp%26wxfrom%3D5%26wx_lazy%3D1%26wx_co%3D1&valid=false)\r\n\r\n目前，Supabase 是 PostgreSQL 生态人气最高的开源项目，在 GitHub 上已经有高达7万4千的Star数。并且和 Neon，Cloudflare 一起并称为赛博菩萨 ------ 因为他们都提供了非常不错的云服务免费计划。目前，Supabase 和 Neon 已经成为许多初创企业的首选数据库 ------ 用起来非常方便，起步还是免费的。\r\n\r\n*** ** * ** ***\r\n\r\n## 为什么要自建Supabase？\r\n\r\n小微规模（4c8g）内的 Supabase 云服务极富性价比^\\[12\\]^，人称赛博菩萨。那么 Supabase 云服务这么香，为什么要自建呢？\r\n\r\n比较直观的原因是是我们在《[**云数据库是智商税吗？**](https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 19,
        "startOffset": 501,
        "endOffset": 1960,
        "filePath": "Sources/CuboxSync/创业出海神器 Supabase 自建指南-2024-12-02.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615154620,
        "isNativeComment": false
      },
      {
        "id": "wyln2uged",
        "text": "&mid=2247486489&idx=1&sn=f2be1be496de46ac5ca816ac39cfdf24&scene=21#wechat_redirect)^\\[14\\]^在性价比上与云端存储有着三到四个数量级的优势，而自建能更好地利用这一点。\r\n\r\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_png%2FWkpr3rA9wF00n0ibxCoCt36a13StXnlEgTEtNWkB4mvoicqKZAL8bHKmFtMMZ2EINdnWXwBg8LiaAYucECLvUUsRA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg%26tp%3Dwebp%26wxfrom%3D5%26wx_lazy%3D1%26wx_co%3D1&valid=false)\r\n\r\n另一个重要的原因是功能， Supabase 云服务的功能受限 ------ [**出于与RDS相同的逻辑**](https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 43,
        "startOffset": 2165,
        "endOffset": 2693,
        "filePath": "Sources/CuboxSync/创业出海神器 Supabase 自建指南-2024-12-02.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615154284,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/全球最火的50个AI应用都是哪些？-2023-10-05.md": [
      {
        "id": "dutvp1faj",
        "text": "&mid=2247490608&idx=1&sn=d4c0004c4e629af7ce1ef02b51336a05&chksm=c00afa0cf77d731ab187182ffe12e9d8bfcfacfd75cba121cdb1b566a46487a5e711199be5b4&scene=21#wechat_redirect)  \r\n\r\n[马斯克为什么创办X.AI：我可不想当谁的宠物小猫猫](http://mp.weixin.qq.com/s?__biz=Mzg5NTc0MjgwMw",
        "tags": [],
        "line": 148,
        "startOffset": 6104,
        "endOffset": 6354,
        "filePath": "Sources/CuboxSync/全球最火的50个AI应用都是哪些？-2023-10-05.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615157507,
        "isNativeComment": false
      },
      {
        "id": "tmadw7pvm",
        "text": "&mid=2247490655&idx=1&sn=ad4146c1844419900a88f2af1895392c&chksm=c00afa63f77d7375409d1d762d0388455cda2b35ace8fa5c417237ff9065849edd7069eaac93&scene=21#wechat_redirect)  \r\n\r\n[转折点之前，OpenAI不为人知的创业故事](http://mp.weixin.qq.com/s?__biz=Mzg5NTc0MjgwMw",
        "tags": [],
        "line": 152,
        "startOffset": 6602,
        "endOffset": 6848,
        "filePath": "Sources/CuboxSync/全球最火的50个AI应用都是哪些？-2023-10-05.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615158005,
        "isNativeComment": false
      },
      {
        "id": "3c4liwj0k",
        "text": "&mid=2247490459&idx=1&sn=34f3db2b92203386e6f2699e24be3760&chksm=c00afda7f77d74b1de41cffc30cc7587af21ccb6dcddabae4a490fafab1e7c8d0a28a350a1ae&scene=21#wechat_redirect)\r\n\r\n[OpenAI科学家Jason Wei专访：思维链灵感来源于冥想](http://mp.weixin.qq.com/s?__biz=Mzg5NTc0MjgwMw",
        "tags": [],
        "line": 157,
        "startOffset": 7096,
        "endOffset": 7350,
        "filePath": "Sources/CuboxSync/全球最火的50个AI应用都是哪些？-2023-10-05.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615157499,
        "isNativeComment": false
      },
      {
        "id": "4ofndty1w",
        "text": "&mid=2247490127&idx=1&sn=8113fc2ec58968281daa43f0648ef373&chksm=c00afc73f77d7565a107138b3025353bbef9e22ee4b1924e1afb45488440fe8c45d7ba68d931&scene=21#wechat_redirect)\r\n\r\n[沸腾 251 天，访谈近百位从业者，关于大模型世界的 5 个现状](http://mp.weixin.qq.com/s?__biz=Mzg5NTc0MjgwMw",
        "tags": [],
        "line": 161,
        "startOffset": 7590,
        "endOffset": 7845,
        "filePath": "Sources/CuboxSync/全球最火的50个AI应用都是哪些？-2023-10-05.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615157993,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/借助 Pod 删除事件的传播实现 Pod 摘流-2023-11-13.md": [
      {
        "id": "xt7h6k47c",
        "text": "&mid=2247487210&idx=1&sn=d73ca74b2e1bc1f969ac094ea44a5b28&chksm=fa80df7dcdf7566bce2f91da94cf33222e8b1bdea147f69403c4139d520641f3c09acc62c927&cur_album_id=1394839706508148737&scene=189\ntags: []\n---\r\n\r\n# 借助 Pod 删除事件的传播实现 Pod 摘流\r\n\r\n\r\n\r\n[Read in Cubox](https://cubox.pro/my/card?id=7123699905507360980)  \r\n[Read Original](https://mp.weixin.qq.com/s?__biz=MzUzNTY5MzU2MA",
        "tags": [],
        "line": 3,
        "startOffset": 143,
        "endOffset": 512,
        "filePath": "Sources/CuboxSync/借助 Pod 删除事件的传播实现 Pod 摘流-2023-11-13.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615155864,
        "isNativeComment": false
      },
      {
        "id": "egmxkngbg",
        "text": "&mid=2247487192&idx=1&sn=52fc08998b5f4c4cd33be5052d6bbe28&scene=21#wechat_redirect)」中我们介绍了 Pod 被驱逐的生命周期，逐出序列的第一步是开始删除 Pod ，这会引发一系列事件，最终导致 Pod 从系统中删除。但是，上篇文章里我们没有谈论到的是，如何从上层的 Service 控制器中注销 Pod，使得 Pod 能停止接收流量。\r\n> 译注：我的理解是要在Pod真正停止运行前，要先把它从Service上拿掉，也就是摘流。\r\n\r\n那么，是什么情况会导致 Pod 从 Service 中注销掉呢？要了解这一点，我们需要更深入一层，来了解从集群中删除Pod时都发生了什么。\r\n\r\n通过 Kubernetes 的 API 将 Pod 从群集中删除后，该 Pod 在元数据服务器中被标记为要删除。这会向所有相关子系统发送一个 Pod 删除通知，然后处理该通知：\r\n> 译注：这里说的元数据服务器，指的应该是Kubernetes APIServer，而子系统则是Kubernetes的一些核心组件。\r\n\r\n*\r\n  Pod 所在节点上的`kubelet`将启动上一篇文章中描述的 Pod 关闭序列。\r\n*\r\n  所有节点上运行的`kube-proxy`守护程序将从 iptables 中删除 Pod的 IP 地址。\r\n*\r\n  端点控制器将从有效端点列表中删除该 Pod，反映到我们这个例子中来就是从 Service 管控的端点（endpoint）列表中移除这个 Pod 端点。\r\n\r\n我们无需了解每个系统的详细信息。这里的重点是涉及多个子系统，这些系统可能在不同的节点上运行，而上面列举的这些操作是会并行发生的。因此，在将 Pod 从所有活动列表中删除之前，Pod 很有可能已经开始执行 preStop 钩子并接收到了 TERM 信号。这就是即使 Pod 在启动关闭序列后，仍继续接收到流量的原因。\r\n\r\n## 摘流方案\r\n\r\n从表面上看，我们可以将上面那些事件序列串联起来，禁止他们并行进行，直到从所有相关子系统注销了要删除的 Pod 之后，再开始 Pod 的关闭序列。但是，由于 Kuberenetes 系统的分布式性质，在实践中很难做到这一点。如果节点之一遇到网络阻隔会怎样？是否要无限期地等待事件传播？如果该节点重新恢复联机怎么办？如果你的Kubernetes 集群有成千上万个节点怎么办？\r\n\r\n不幸的是，现实情况是并不存在防止所有中断的完美解决方案。但是，我们可以做的是在 Pod 关闭序列中引入足够的延迟，以捕获99％的情况。为此，我们在preStop挂钩中引入了一个 sleep指令，以延迟 Pod 关闭序列。接下来，让我们看看在我们的例子中它是如何工作的。\r\n\r\n我们会更新一直以来使用的资源定义文件，使用sleep 命令引入延迟来作为要执行的 preStop 钩子的一部分。在「 Kubernetes in Action」中，作者 `Lukša` 建议使用5到10秒的延迟，因此在这里我们将使用5秒延迟作为 preStop 钩子的一部分：\r\n\r\n    lifecycle:\r\n    preStop:\r\n    exec:\r\n    command:[\r\n    \"sh\",\"-c\",\r\n    #Introduceadelaytotheshutdownsequencetowaitforthe\r\n    #podevictioneventtopropagate.Then,gracefullyshutdown\r\n    #nginx.\r\n    \"sleep5&&/usr/sbin/nginx-squit\",\r\n    ]\r\n\r\n现在，让我们推演一下这个示例关闭序列中会发生什么。像上一篇文章的分析一样，我们将使用`kubectl drain`逐出节点上的 Pod。这将会发送一个Pod deletion 事件，该事件会同时通知给 kubelet 和 Endpoint Controller（端点控制器，这里指的是 Pod 上层的 Service控制器）。在此，我们假设 preStop 钩子在 Service 从自己可用列表中移除 Pod 之前启动。\r\n![图片](https://image.cubox.pro/cardImg/2023111420580459227/64720.jpg?imageMogr2/quality/90/ignore-error/1) 驱逐节点上的Pod，会发送一个Pod Deletion事件\r\n\r\n在 preStop 钩子执行时，首先会延迟5秒执行第二条关闭Nginx的命令。在这个期间，Service 将会从自己的可用列表中移除 Pod。\r\n![图片](https://image.cubox.pro/cardImg/2023111420580476721/44223.jpg?imageMogr2/quality/90/ignore-error/1) 关闭程序被延迟的同时Service会从列表中去掉要关闭的Pod\r\n\r\n在此延迟期间，Pod 仍处于运行状态，因此即使其接收到新的连接请求，它仍能够处理连接。此外，在将 Pod 从Service 中移除后，客户端的连接请求，将不会路由到将要关闭的 Pod 上。因此，在这种情况下，假如 Service 在延迟期间内处理完这些事件，集群将不会有停机时间。\r\n\r\n最后，preStop 钩子进程从休眠中醒来并执行关闭 Nginx 容器，从节点中删除容器：\r\n![图片](https://image.cubox.pro/cardImg/2023111420580411203/51189.jpg?imageMogr2/quality/90/ignore-error/1) ![图片](https://image.cubox.pro/cardImg/2023111420580584797/89554.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n此时，我们就可以安全地在Node1上进行任何升级，包括重启节点加载新的内核版本。如果我们已经启动了一个新节点来容纳Node1运行的工作负载，那么我们也可以关闭Node1节点。\r\n\r\n## 重新创建Pod\r\n\r\n如果你已经看到了这里，你可能想知道如何重新创建最初被调度到维护节点上的 Pod。现在，我们知道了如何正常关闭 Pod，但是如果要维持运行中的 Pod 的数量，该怎么办？这就要靠 Deployment 控制器发挥作用了。\r\n\r\nDeployment 控制器负责在集群上维护指定的期望状态，如果你能回想起我们的资源定义文件里的内容，你会发现我们不是直接创建的 Pod。取而代之的是我们通过给 Deployment 提供创建Pod的模板，让它来自动为我们管理 Pod。下面是定义中的 Pod 模板部分的内容：\r\n\r\n    template:\r\n    metadata:\r\n    labels:\r\n    app:nginx\r\n    spec:\r\n    containers:\r\n    -name:nginx\r\n    image:nginx:1.15\r\n    ports:\r\n    -containerPort:80\r\n\r\n模板指定了创建一个运行`nginx:1.15`镜像的容器的Pod，指定 Pod 携带的标签为`app:nginx`，向外暴露80端口。\r\n\r\n除了Pod模板之外，我们还为 Deployment 资源提供了一个配置，用于指定应维护的 Pod 副本数：\r\n\r\n    spec:\r\n    replicas:2\r\n\r\n这会通知 Deployment 控制器它应始终维持有两个 Pod 运行在集群上。每当运行的 Pod 数量下降时，Deployment 控制器都会自动创建一个新的Pod来替换它。因此，在我们这个例中，当我们使用 `kubectl drain` 操作从节点上驱逐 Pod 时，Deployment 控制器会在其他可用节点上自动重新创建 Pod，保持当前状态与定义里指定的期望状态一直。\r\n\r\n## 总结\r\n\r\n总而言之，在 preStop 钩子有足够的延迟和正常终止的情况下，我们现在能在单个节点上正常关闭 Pod 了。利用Deployment，我们可以自动重新创建被关闭的 Pod。但是，如果我们想一次替换集群中的所有节点怎么办？\r\n\r\n如果我们天真地重启所有节点，因为服务负载均衡器可能没有可用的Pod，而导致系统停机。更糟糕的是，对于有状态的系统，这样操作可能会让仲裁机制失效。\r\n\r\n为了处理这种情况，Kubernetes 提供了一个称为`PodDisruptionBudgets`的功能，该功能指定了在任何给定时间点 Kubernetes 可以承受的关闭的 Pod 数量的上线。在本系列的下一也是最后一部分，我们将介绍如何使用它来控制同时发生的节点驱逐事件的数量。\r\n\r\n### 推荐阅读\r\n\r\n*\r\n  [如何优雅地关闭Kubernetes集群中的Pod](https://mp.weixin.qq.com/s?__biz=MzUzNTY5MzU2MA",
        "tags": [],
        "line": 33,
        "startOffset": 1420,
        "endOffset": 5273,
        "filePath": "Sources/CuboxSync/借助 Pod 删除事件的传播实现 Pod 摘流-2023-11-13.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615156141,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/从0开始实现MCP-Client-2025-05-02.md": [
      {
        "id": "147khn0au",
        "text": " '':\n                        print(\"Please enter a query.\")\n                        continue\n                    response = await self.process_query(query)\n                    print(response)\n\n                except Exception as e:\n                    print(f\"\\nError: {str(e)}\")\n\n        async def cleanup(self):\n            \"\"\"Clean up resources\"\"\"\n            await self.exit_stack.aclose()\n\n    async def main():\n        client = MCPClient()\n        try:\n            await client.connect_to_stdio_server('weather', 'python', ['weather.py'])\n            await client.chat_loop()\n        finally:\n            await client.cleanup()\n\n    if __name__ ",
        "tags": [],
        "line": 360,
        "startOffset": 13154,
        "endOffset": 13809,
        "filePath": "Sources/CuboxSync/从0开始实现MCP-Client-2025-05-02.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615154181,
        "isNativeComment": false
      },
      {
        "id": "w1y2ux08t",
        "text": " 'quit':\n                        break\n                    if query.strip() ",
        "tags": [],
        "line": 528,
        "startOffset": 19269,
        "endOffset": 19349,
        "filePath": "Sources/CuboxSync/从0开始实现MCP-Client-2025-05-02.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615154296,
        "isNativeComment": false
      },
      {
        "id": "7d5yyoeif",
        "text": " \"__main__\":\n        asyncio.run(main())\n\n执行效果演示：\nimage-20250421223848425\n\n同样可以成功调用MCP SSE Server。\n> \"\n>\n> 大家可以直接调用我部署好的MCP SSE Server，\n>\n> 为了方便大家学习，这里可以直接使用的部署好的服务http://47.113.225.16:8000/sse来进行测试。当然也鼓励大家换成其他的服务尝试。\n\n## 采用配置文件进行加载\n\n经过前面的实验，我们现在已经可以通过自己编写的MCP Client连接任意MCP Server，包括stdio和sse通信协议，但是都只连接了一个MCP Server。用过Cursor或其他MCP Client应用的同学应该很清楚，他们是通过一个JSON配置文件去加载多个MCP Server，那么我们自己编写的MCP Client能否达到这个效果呢？\n\n当然可以，接下来的实验我们就一起来编写相关代码，实现这个需求。\n\n首先，我们定义自己的JSON文件协议，例如：\n\n    {\n        \"mcpServers\": {\n          \"weather-sse\": {\n            \"isActive\": true,\n            \"type\": \"stdio\",\n            \"command\": \"python\",\n            \"args\": [\n              \"weather.py\"\n            ],\n            \"name\": \"weather-sse\",\n            \"env\": {}\n          },\n          \"amap-amap-sse\": {\n            \"isActive\": true,\n            \"type\": \"sse\",\n            \"url\": \"https://mcp.amap.com/sse?key={高德API KEY}\",\n            \"name\": \"amap-amap-sse\"\n          }\n        }\n      }\n\n> \"\n>\n> 注意：{高德API KEY}大家可以去高德官网注册账号，可以免费获取。\n\n字段意义如下所示：\n\n1.\n   公共字段：\n   *\n     isActive：用于控制该MCP Server是否被激活。\n   *\n     type：MCP Server的类型，取值为stdio或sse\n   *\n     name：MCP Server别名。\n2.\n   stdio相关字段：\n   *\n     command：命令名称。\n   *\n     args：参数列表\n   *\n     env：环境变量字典\n3.\n   sse相关参数：\n   *\n     url：SSE MCP Server服务地址。\n\n编写mcp_client_mix.py文件，内容如下所示：\n\n    import asyncio\n    from typing import Optional\n    from contextlib import AsyncExitStack\n    import json\n\n    from mcp import ClientSession, StdioServerParameters\n    from mcp.client.stdio import stdio_client\n    from mcp.client.sse import sse_client\n\n    from dotenv import load_dotenv\n    import os, re\n    from openai import OpenAI\n    from lxml import etree\n\n    load_dotenv()  # load environment variables from .env\n\n    class MCPClient:\n        def __init__(self):\n            # Initialize session and client objects\n            self.session: Optional[ClientSession] = None\n            self.exit_stack = AsyncExitStack()\n            # 需要提前在.env文件中设置相关环境变量\n            self.API_KEY = os.getenv(\"API_KEY\")\n            self.BASE_URL = os.getenv(\"BASE_URL\")\n            self.MODEL = os.getenv(\"MODEL\")\n            self.client = OpenAI(api_key=self.API_KEY, base_url=self.BASE_URL)\n            self.sessions = {}\n            self.messages = []\n            with open(\"./MCP_Prompt.txt\", \"r\", encoding=\"utf-8\") as file:\n                self.system_prompt = file.read()\n\n        async def mcp_json_config(self, mcp_json_file):\n            try:\n                with open(mcp_json_file, 'r') as f:\n                    mcp_config: dict = json.load(f)\n            except json.JSONDecodeError:\n                raise ValueError(\"Invalid MCP config\")\n            servers_config: dict = mcp_config.get('mcpServers', {})\n            for k, v in servers_config.items():\n                try:\n                    print('-'*50)\n                    if v.get('isActive', False) ",
        "tags": [],
        "line": 551,
        "startOffset": 20010,
        "endOffset": 22889,
        "filePath": "Sources/CuboxSync/从0开始实现MCP-Client-2025-05-02.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615154037,
        "isNativeComment": false
      },
      {
        "id": "9i1mhqjwn",
        "text": " 'stdio':\n                        command = v.get('command', None)\n                        args = v.get('args', [])\n                        env = v.get('env', {})\n                        if command isNone:\n                            raise ValueError(f'{mcp_name} command is empty.')\n                        if args ",
        "tags": [],
        "line": 667,
        "startOffset": 23077,
        "endOffset": 23397,
        "filePath": "Sources/CuboxSync/从0开始实现MCP-Client-2025-05-02.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615154104,
        "isNativeComment": false
      },
      {
        "id": "6qgnhe9gp",
        "text": " 'sse':\n                        server_url = v.get('url', None)\n                        if server_url isNone:\n                            raise ValueError(f'{mcp_name} server_url is empty.')\n                        await self.connect_to_sse_server(mcp_name, server_url)\n                    else:\n                        raise ValueError(f'{mcp_name} mcp type must in [stdio, sse].')\n                except Exception as e:\n                    print(f\"Error connecting to {mcp_name}: {e}\")\n\n        async def connect_to_stdio_server(self, mcp_name, command: str, args: list[str], env: dict[str, str]={}):\n            \"\"\"Connect to an MCP server\n\n            Args:\n                server_script_path: Path to the server script (.py or .js)\n            \"\"\"\n\n            server_params = StdioServerParameters(\n                command=command,\n                args=args,\n                env=env\n            )\n\n    <br />\n\n\n\n            stdio_transport = await self.exit_stack.enter_async_context(stdio_client(server_params))\n            self.stdio, self.write = stdio_transport\n            self.session = await self.exit_stack.enter_async_context(ClientSession(self.stdio, self.write))\n            self.sessions[mcp_name] = self.session\n\n            await self.session.initialize()\n            # 将MCP信息添加到system_prompt\n            response = await self.session.list_tools()\n            available_tools = ['##' + mcp_name + '\\n### Available Tools\\n- ' + tool.name + \"\\n\" + tool.description + \"\\n\" + json.dumps(tool.inputSchema) for tool in response.tools]\n            self.system_prompt = self.system_prompt.replace(\"<$MCP_INFO$>\", \"\\n\".join(available_tools)+\"\\n<$MCP_INFO$>\")\n            tools = response.tools\n            print(f\"Successfully connected to {mcp_name} server with tools:\", [tool.name for tool in tools])\n\n        async def connect_to_sse_server(self, mcp_name, server_url: str):\n            \"\"\"Connect to an MCP server\n\n            Args:\n                server_script_path: Path to the server script (.py or .js)\n            \"\"\"\n\n            stdio_transport = await self.exit_stack.enter_async_context(sse_client(server_url))\n            self.sse, self.write = stdio_transport\n            self.session = await self.exit_stack.enter_async_context(ClientSession(self.sse, self.write))\n            self.sessions[mcp_name] = self.session\n\n    <br />\n\n\n\n            await self.session.initialize()\n            # List available tools\n            response = await self.session.list_tools()\n            available_tools = ['##' + mcp_name + '\\n### Available Tools\\n- ' + tool.name + \"\\n\" + tool.description + \"\\n\" + json.dumps(tool.inputSchema) for tool in response.tools]\n            self.system_prompt = self.system_prompt.replace(\"<$MCP_INFO$>\", \"\\n\".join(available_tools)+\"\\n<$MCP_INFO$>\\n\")\n            tools = response.tools\n            print(f\"Successfully connected to {mcp_name} server with tools:\", [tool.name for tool in tools])\n\n        async def process_query(self, query: str) -> str:\n            \"\"\"Process a query using Claude and available tools\"\"\"\n            self.messages.append(\n                {\n                    \"role\": \"system\",\n                    \"content\": self.system_prompt\n                }\n            )\n            self.messages.append(\n                {\n                    \"role\": \"user\",\n                    \"content\": query\n                }\n            )\n\n            # Initial Claude API call\n            response = self.client.chat.completions.create(\n                model=self.MODEL,\n                max_tokens=1024,\n                messages=self.messages,\n            )\n\n            # Process response and handle tool calls\n            final_text = []\n            content = response.choices[0].message.content\n            if'<use_mcp_tool>'notin content:\n                final_text.append(content)\n            else:\n                # 解析tool_string\n                server_name, tool_name, tool_args = self.parse_tool_string(content)\n\n                # 执行工具调用\n                result = await self.sessions[server_name].call_tool(tool_name, tool_args)\n                print(f\"[Calling tool {tool_name} with args {tool_args}]\")\n                print(\"-\"*40)\n                print(\"Server:\", server_name)\n                print(\"Tool:\", tool_name)\n                print(\"Args:\", tool_args)\n                print(\"-\"*40)\n                print(\"Result:\", result.content[0].text)\n                print(\"-\"*40)\n                self.messages.append({\n                    \"role\": \"assistant\",\n                    \"content\": content\n                })\n                self.messages.append({\n                    \"role\": \"user\",\n                    \"content\": f\"[Tool {tool_name} \\n returned: {result}]\"\n                })\n\n                response = self.client.chat.completions.create(\n                    model=self.MODEL,\n                    max_tokens=1024,\n                    messages=self.messages\n                )\n                final_text.append(response.choices[0].message.content)\n            return\"\\n\".join(final_text)\n        \n        def parse_tool_string(self, tool_string: str) -> tuple[str, str, dict]:\n            tool_string = re.findall(\"(<use_mcp_tool>.*?</use_mcp_tool>)\", tool_string, re.S)[0]\n            root = etree.fromstring(tool_string)\n            server_name = root.find('server_name').text\n            tool_name = root.find('tool_name').text\n            try:\n                tool_args = json.loads(root.find('arguments').text)\n            except json.JSONDecodeError:\n                raise ValueError(\"Invalid tool arguments\")\n            return server_name, tool_name, tool_args\n\n        async def chat_loop(self):\n            \"\"\"Run an interactive chat loop\"\"\"\n            print(\"\\nMCP Client Started!\")\n            print(\"Type your queries or 'quit' to exit.\")\n            self.messages = []\n            whileTrue:\n                try:\n                    query = input(\"\\nQuery: \").strip()\n\n                    if query.lower() ",
        "tags": [],
        "line": 676,
        "startOffset": 23608,
        "endOffset": 29610,
        "filePath": "Sources/CuboxSync/从0开始实现MCP-Client-2025-05-02.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615154635,
        "isNativeComment": false
      },
      {
        "id": "e1d4x2bsr",
        "text": " '':\n                        print(\"Please enter a query.\")\n                        continue\n                    response = await self.process_query(query)\n                    print(response)\n\n                except Exception as e:\n                    print(f\"\\nError: {str(e)}\")\n\n        async def cleanup(self):\n            \"\"\"Clean up resources\"\"\"\n            await self.exit_stack.aclose()\n\n    async def main():\n        client = MCPClient()\n        try:\n            mcp_config_file = './mcp.json'\n            await client.mcp_json_config(mcp_config_file)\n            await client.chat_loop()\n        finally:\n            await client.cleanup()\n\n    if __name__ ",
        "tags": [],
        "line": 820,
        "startOffset": 29686,
        "endOffset": 30356,
        "filePath": "Sources/CuboxSync/从0开始实现MCP-Client-2025-05-02.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615154713,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/从 Flask 转换到 FastAPI - 掘金-2023-09-12.md": [
      {
        "id": "9wrcakepo",
        "text": " \"__main__\":\n        app.run()\n\n**FastAPI**\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            python\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          # fastapi_code.py\n\n    import uvicorn\n    from fastapi import FastAPI\n\n    app = FastAPI()\n\n    @app.get(\"/\")\n    def home():\n        return {\"Hello\": \"World\"}\n\n    if __name__ ",
        "tags": [],
        "line": 164,
        "startOffset": 4677,
        "endOffset": 5147,
        "filePath": "Sources/CuboxSync/从 Flask 转换到 FastAPI - 掘金-2023-09-12.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615154700,
        "isNativeComment": false
      },
      {
        "id": "gmnhxlhpu",
        "text": " \"__main__\":\n        app.run()\n\n现在，在你运行服务器之前，设置适当的环境变量：\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            ini\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          export MESSAGE=\"hello, world\"\n\n**FastAPI**\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            python\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          import uvicorn\n    from fastapi import FastAPI\n    from pydantic import BaseSettings\n\n    class Settings(BaseSettings):\n        message: str\n\n    settings = Settings()\n    app = FastAPI()\n\n    @app.get(\"/settings\")\n    def get_settings():\n        return { \"message\": settings.message }\n\n    if __name__ ",
        "tags": [],
        "line": 326,
        "startOffset": 6880,
        "endOffset": 7773,
        "filePath": "Sources/CuboxSync/从 Flask 转换到 FastAPI - 掘金-2023-09-12.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615154903,
        "isNativeComment": false
      },
      {
        "id": "kg5rsj2mq",
        "text": " \"POST\":\n            return {\"Hello\": \"POST\"}\n        # handle GET\n        return {\"Hello\": \"GET\"}\n\n**FastAPI**\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            python\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          @app.get(\"/\")\n    def home():\n        return {\"Hello\": \"GET\"}\n\n    @app.post(\"/\")\n    def home_post():\n        return {\"Hello\": \"POST\"}\n\nFastAPI 为每个方法提供单独的装饰器：\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            less\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          @app.get(\"/\")\n    @app.post(\"/\")\n    @app.delete(\"/\")\n    @app.patch(\"/\")\n\n### URL 参数\n\n通过 URL（如 `/employee/1` ）传递信息以管理状态：\n\n**Flask**\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            python\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          @app.route(\"/employee/<int:id>\")\n    def home():\n        return {\"id\": id}\n\n**FastAPI**\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            python\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          @app.get(\"/employee/{id}\")\n    def home(id: int):\n        return {\"id\": id}\n\nURL参数的指定类似于一个 f-string 表达式。此外，你还可以利用类型提示。这里，我们在运行时告诉 Pydantic， `id` 是 `int` 类型的。在开发中，这也可以帮助完成更好的代码完成度。\n\n### 查询参数\n\n与 URL 参数一样，查询参数（如 `/employee?department=sales` ）也可用于管理状态（通常用于过滤或排序）：\n\n**Flask**\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            python\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          from flask import request\n\n    @app.route(\"/employee\")\n    def home():\n        department = request.args.get(\"department\")\n        return {\"department\": department}\n\n**FastAPI**\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            python\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          @app.get(\"/employee\")\n    def home(department: str):\n        return {\"department\": department}\n\n### 模板\n\n**Flask**\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            python\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          from flask import render_template\n\n    @app.route(\"/\")\n    def home():\n        return render_template(\"index.html\")\n\n默认情况下，Flask会在 \"templates \"文件夹中寻找模板。\n\n**FastAPI**\n\n你需要安装 [Jinja](https://link.juejin.cn/?target=https%3A%2F%2Fjinja.palletsprojects.com%2F \"https://jinja.palletsprojects.com/\")：\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          pip install jinja2\n\n实现：\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            python\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          from fastapi import Request\n    from fastapi.templating import Jinja2Templates\n    from fastapi.responses import HTMLResponse\n\n    app = FastAPI()\n\n    templates = Jinja2Templates(directory=\"templates\")\n\n    @app.get(\"/\", response_class=HTMLResponse)\n    def home(request: Request):\n        return templates.TemplateResponse(\"index.html\", {\"request\": request})\n\n对于 FastAPI，你需要明确地定义 \"模板 \"文件夹。然后对于每个响应，需要提供请求上下文。\n\n### 静态文件\n\n**Flask**\n\n默认情况下，Flask 从\"static\"文件夹中提供静态文件。\n\n**FastAPI**\n\n在 FastAPI 中，需要为静态文件挂载一个文件夹：\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            python\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          from fastapi.staticfiles import StaticFiles\n\n    app = FastAPI()\n\n    app.mount(\"/static\", StaticFiles(directory=\"static\"), name=\"static\")\n\n### 异步任务\n\n**Flask**\n\n从 [Flask 2.0](https://link.juejin.cn/?target=https%3A%2F%2Fpalletsprojects.com%2Fblog%2Fflask-2-0-released%2F \"https://palletsprojects.com/blog/flask-2-0-released/\") 开始，您可以使用 `async/await` 创建异步路由处理程序：\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            python\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          @app.route(\"/\")\n    async def home():\n        result = await some_async_task()\n        return result\n\n> 有关 Flask 中异步视图的更多信息，请查看 [Flask 2.0](https://link.juejin.cn/?target=https%3A%2F%2Ftestdriven.io%2Fblog%2Fflask-async%2F \"https://testdriven.io/blog/flask-async/\") 中的异步一文。\n\nFlask 中的异步也可以通过使用线程（并发）或多处理（并行）或 [Celery](https://link.juejin.cn/?target=https%3A%2F%2Fflask.palletsprojects.com%2Fen%2F2.0.x%2Fpatterns%2Fcelery%2F \"https://flask.palletsprojects.com/en/2.0.x/patterns/celery/\") 或 [RQ](https://link.juejin.cn/?target=https%3A%2F%2Fpython-rq.org%2F \"https://python-rq.org/\") 等工具来实现：\n\n1. [Asynchronous Tasks with Flask and Celery](https://link.juejin.cn/?target=https%3A%2F%2Ftestdriven.io%2Fblog%2Fflask-and-celery%2F \"https://testdriven.io/blog/flask-and-celery/\")\n2. [Asynchronous Tasks with Flask and Redis Queue](https://link.juejin.cn/?target=https%3A%2F%2Ftestdriven.io%2Fblog%2Fasynchronous-tasks-with-flask-and-redis-queue%2F \"https://testdriven.io/blog/asynchronous-tasks-with-flask-and-redis-queue/\")\n\n**FastAPI**\n\n由于 FastAPI 对 asyncio 的原生支持，它极大地简化了异步任务。要使用的话，只需在视图函数中添加 `async` 关键字：\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            python\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          @app.get(\"/\")\n    async def home():\n        result = await some_async_task()\n        return result\n\nFastAPI 还具有[后台任务](https://link.juejin.cn/?target=https%3A%2F%2Ffastapi.tiangolo.com%2Ftutorial%2Fbackground-tasks%2F \"https://fastapi.tiangolo.com/tutorial/background-tasks/\")功能，您可以使用它来定义返回响应后要运行的后台任务。这对于不需要在发送回响应之前完成的操作很有用。\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            python\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          from fastapi import BackgroundTasks\n\n    def process_file(filename: str):\n        # process file :: takes minimum 3 secs (just an example)\n        pass\n\n    @app.post(\"/upload/{filename}\")\n    async def upload_and_process(filename: str, background_tasks: BackgroundTasks):\n        background_tasks.add_task(process_file, filename)\n        return {\"message\": \"processing file\"}\n\n在这里，响应将被即时发送，而不会让用户等待文件处理完成。\n\n当你需要进行繁重的后台计算时，或者你需要一个任务队列来管理任务(tasks)和工作者(workers)时，你可能想使用Celery 而不是 `BackgroundTasks`。更多内容请参考 [FastAPI 和 Celery 的异步任务](https://link.juejin.cn/?target=https%3A%2F%2Ftestdriven.io%2Fblog%2Ffastapi-and-celery%2F \"https://testdriven.io/blog/fastapi-and-celery/\")。\n\n### 依赖注入\n\n**Flask**\n\n虽然你可以实现自己的依赖注入解决方案，但 Flask 默认没有真正的一流支持。相反，你需要使用一个外部包，如 [flask-injector](https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Falecthomas%2Fflask_injector \"https://github.com/alecthomas/flask_injector\")。\n\n**FastAPI**\n\n另一方面，FastAPI 具有处理依赖注入的强大[解决方案](https://link.juejin.cn/?target=https%3A%2F%2Ffastapi.tiangolo.com%2Ftutorial%2Fdependencies%2F%23dependencies-first-steps \"https://fastapi.tiangolo.com/tutorial/dependencies/#dependencies-first-steps\")。\n\n例如：\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            python\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          from databases import Database\n    from fastapi import Depends\n    from starlette.requests import Request\n\n    from db_helpers import get_all_data\n    def get_db(request: Request):\n        return request.app.state._db\n\n    @app.get(\"/data\")\n    def get_data(db: Database = Depends(get_db)):\n        return get_all_data(db)\n\n因此，`get_db` 将获取对在应用程序的启动事件处理程序中创建的数据库连接的引用。 [Depends](https://link.juejin.cn/?target=https%3A%2F%2Ffastapi.tiangolo.com%2Ftutorial%2Fdependencies%2F \"https://fastapi.tiangolo.com/tutorial/dependencies/\") 然后用于向 FastAPI 指示路由\"依赖于\" `get_db`。因此，它应该在路由处理程序中的代码之前执行，并且结果应该\"注入\"到路由本身。\n\n### 数据校验\n\n**Flask**\n\nFlask 没有任何内部数据验证支持。您可以使用功能强大的 Pydantic 包通过 [Flask-Pydantic](https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fbauerji%2Fflask_pydantic \"https://github.com/bauerji/flask_pydantic\") 进行数据验证。\n\n**FastAPI**\n\nFastAPI 如此强大的原因之一是它支持 Pydantic。\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            python\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          from pydantic import BaseModel\n\n    app = FastAPI()\n\n    class Request(BaseModel):\n        username: str\n        password: str\n\n    @app.post(\"/login\")\n    async def login(req: Request):\n        if req.username ",
        "tags": [],
        "line": 471,
        "startOffset": 8541,
        "endOffset": 18061,
        "filePath": "Sources/CuboxSync/从 Flask 转换到 FastAPI - 掘金-2023-09-12.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615154564,
        "isNativeComment": false
      },
      {
        "id": "vfrxzruds",
        "text": " \"testdriven.io\":\n            return {\"message\": \"success\"}\n        return {\"message\": \"Authentication Failed\"}\n\n在这里，我们接受一个模型 `Request` 的输入。该 payload 必须包含一个用户名和密码。\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            css\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          # correct payload format\n    ✗ curl -X POST 'localhost:8000/login' \\\n        --header 'Content-Type: application/json' \\\n        --data-raw '{\"username\": \"testdriven.io\",\"password\":\"testdriven.io\"}'\n\n    {\"message\":\"success\"}\n\n    # incorrect payload format\n    ✗ curl -X POST 'localhost:8000/login' \\\n        --header 'Content-Type: application/json' \\\n        --data-raw '{\"username\": \"testdriven.io\",\"passwords\":\"testdriven.io\"}'\n\n    {\"detail\":[{\"loc\":[\"body\",\"password\"],\"msg\":\"field required\",\"type\":\"value_error.missing\"}]}\n\n注意到这个请求。我们把密码 `passwords` 作为一个键而不是 `password` 传递进去。Pydantic 模型会自动告诉用户，`password` 字段是缺失的。\n\n### 序列化和反序列化\n\n**Flask**\n\n最简单的序列化方法是使用 [jsonify](https://link.juejin.cn/?target=https%3A%2F%2Fflask.palletsprojects.com%2Fen%2F2.0.x%2Fapi%2F%23flask.json.jsonify \"https://flask.palletsprojects.com/en/2.0.x/api/#flask.json.jsonify\")：\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            python\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          from flask import jsonify\n    from data import get_data_as_dict\n\n    @app.route(\"/\")\n    def send_data():\n        return jsonify(get_data_as_dict)\n\n对于复杂的对象，Flask 开发者经常使用 [Flask-Marshmallow](https://link.juejin.cn/?target=https%3A%2F%2Fflask-marshmallow.readthedocs.io%2Fen%2Flatest%2F \"https://flask-marshmallow.readthedocs.io/en/latest/\")\n\n**FastAPI**\n\nFastAPI 自动序列化任何返回的字典 `dict` 。对于更复杂和结构化的数据，使用 Pydantic：\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            python\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          from pydantic import BaseModel\n\n    app = FastAPI()\n\n    class Request(BaseModel):\n        username: str\n        email: str\n        password: str\n\n    class Response(BaseModel):\n        username: str\n        email: str\n\n    @app.post(\"/login\", response_model=Response)\n    async def login(req: Request):\n        if req.username ",
        "tags": [],
        "line": 1054,
        "startOffset": 18095,
        "endOffset": 20587,
        "filePath": "Sources/CuboxSync/从 Flask 转换到 FastAPI - 掘金-2023-09-12.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615154118,
        "isNativeComment": false
      },
      {
        "id": "ic820zuy7",
        "text": " \"testdriven.io\":\n            return req\n        return {\"message\": \"Authentication Failed\"}\n\n在这里，我们添加了一个包含三个输入的 `Request` 模型：用户名、电子邮件和密码。我们还定义了一个仅包含用户名和电子邮件的 `Response` 模型。输入 `Request` 模型处理反序列化，而输出 `Response` 模型处理对象序列化。然后通过 [response_model](https://link.juejin.cn/?target=https%3A%2F%2Ffastapi.tiangolo.com%2Ftutorial%2Fresponse-model%2F \"https://fastapi.tiangolo.com/tutorial/response-model/\") 参数将响应模型传递给装饰器。\n\n现在，如果我们将请求本身作为响应返回，`Pydantic` 将省略 `password` ，因为我们定义的响应模型不包含密码字段。\n\n例如：\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            css\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          # output\n    ✗ curl -X POST 'localhost:8000/login' \\\n        --header 'Content-Type: application/json' \\\n        --data-raw '{\"username\":\"testdriven.io\",\"email\":\"admin@testdriven.io\",\"password\":\"testdriven.io\"}'\n\n    {\"username\":\"testdriven.io\",\"email\":\"admin@testdriven.io\"}\n\n### 中间件\n\n中间件被用来在每个请求被视图功能处理之前应用逻辑。\n\n**Flask**\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            python\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          class middleware:\n        def __init__(self, app) -> None:\n            self.app = app\n\n        def __call__(self, environ, start_response):\n            start = time.time()\n            response = self.app(environ, start_response)\n            end = time.time() - start\n            print(f\"request processed in {end} s\")\n            return response\n\n    app = Flask(__name__)\n    app.wsgi_app = middleware(app.wsgi_app)\n\n**FastAPI**\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            python\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          from fastapi import Request\n\n    @app.middleware(\"http\")\n    async def add_process_time_header(request: Request, call_next):\n        start_time = time.time()\n        response = await call_next(request)\n        process_time = time.time() - start_time\n        print(f\"request processed in {process_time} s\")\n        return response\n\n`@app.middleware(\"http\")` 装饰器是在 FastAPI 中[创建](https://link.juejin.cn/?target=https%3A%2F%2Ffastapi.tiangolo.com%2Ftutorial%2Fmiddleware%2F%23create-a-middleware \"https://fastapi.tiangolo.com/tutorial/middleware/#create-a-middleware\")中间件的必备工具。上述中间件计算处理请求所花费的时间。视图函数处理请求后，计算总处理时间并将其作为响应头返回。\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            scss\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          # flask output(logs)\n    request processed in 0.0010077953338623047 s\n    127.0.0.1 - - [22/Sep/2020 18:56:21] \"GET / HTTP/1.1\" 200 -\n\n    # fastapi output(logs)\n    request processed in 0.0009925365447998047 s\n    INFO:     127.0.0.1:51123 - \"GET / HTTP/1.1\" 200 OK\n\n### 模块化\n\n随着应用程序的发展，在某些时候你会想把类似的视图、模板、静态文件和模型组合在一起，以帮助把应用程序分解成更小的组件。\n\n**Flask**\n\n在 Flask 中，[蓝图](https://link.juejin.cn/?target=https%3A%2F%2Fflask.palletsprojects.com%2Fen%2F2.0.x%2Fblueprints%2F \"https://flask.palletsprojects.com/en/2.0.x/blueprints/\")被用来实现模块化：\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            python\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          # blueprints/product/views.py\n    from flask import Blueprint\n\n    product = Blueprint(\"product\", __name__)\n\n    @product.route(\"/product1\")\n        ...\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            python\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          # main.py\n\n    from blueprints.product.views import product\n\n    app.register_blueprint(product)\n\n**FastAPI**\n\n同时，在 FastAPI 中，模块化是通过 [APIRouter](https://link.juejin.cn/?target=https%3A%2F%2Ffastapi.tiangolo.com%2Ftutorial%2Fbigger-applications%2F%23apirouter \"https://fastapi.tiangolo.com/tutorial/bigger-applications/#apirouter\") 实现的：\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            python\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          # routers/product/views.py\n    from fastapi import APIRouter\n\n    product = APIRouter()\n\n    @product.get(\"/product1\")\n        ...\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            python\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          # main.py\n\n    from routers.product.views import product\n\n    app.include_router(product)\n\n## 其他特点\n\n### 自动文档\n\n**Flask**\n\nFlask 不会自动创建开箱即用的 API 文档。然而，有几个扩展可以处理这个问题，比如 [flask-swagger](https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fgangverk%2Fflask-swagger \"https://github.com/gangverk/flask-swagger\") 和 [Flask RESTX](https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fpython-restx%2Fflask-restx \"https://github.com/python-restx/flask-restx\")，但它们需要额外的设置。\n\n**FastAPI**\n\n默认情况下，FastAPI 支持 OpenAPI 以及 [Swagger UI](https://link.juejin.cn/?target=https%3A%2F%2Fswagger.io%2Ftools%2Fswagger-ui%2F \"https://swagger.io/tools/swagger-ui/\") 和 [ReDoc](https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2FRedocly%2Fredoc \"https://github.com/Redocly/redoc\")。这意味着每个端点都自动从与端点关联的元数据中记录下来。\n\n![所有注册的端点都列在这里](https://image.cubox.pro/cardImg/2023091210320396489/59316.jpg?imageMogr2/quality/90/format/gif/ignore-error/1)\n\n此处列出了所有已注册的端点\n\n![image.png](https://image.cubox.pro/cardImg/2023091210320329180/68275.jpg?imageMogr2/quality/90/format/gif/ignore-error/1)\n\n替代文档\n\n![image.png](https://image.cubox.pro/cardImg/2023091210320346536/26861.jpg?imageMogr2/quality/90/format/gif/ignore-error/1)\n\n### 管理应用\n\n**Flask**\n\nFlask 有一个广泛使用的第三方管理包，称为 [Flask-Admin](https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fflask-admin%2Fflask-admin \"https://github.com/flask-admin/flask-admin\")，用于快速对您的模型执行 CRUD 操作。\n\n**FastAPI**\n\n截至目前，有两个流行的 FastAPI 扩展用于此：\n\n1. [FastAPI Admin](https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Ffastapi-admin%2Ffastapi-admin \"https://github.com/fastapi-admin/fastapi-admin\") - 功能性管理面板，提供用于对数据执行 CRUD 操作的用户界面。\n2. [SQLAlchemy Admin](https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Faminalaee%2Fsqladmin \"https://github.com/aminalaee/sqladmin\") -FastAPI/Starlette 的管理面板，可与 SQLAlchemy 模型一起使用。\n\n### 身份认证\n\n**Flask**\n\n虽然 Flask 没有原生解决方案，但可以使用多个[第三方扩展](https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fmjhea0%2Fawesome-flask%23auth \"https://github.com/mjhea0/awesome-flask#auth\")。\n\n**FastAPI**\n\nFastAPI 通过 `fastapi.security` 包原生支持许多安全和身份验证工具。通过几行代码，您可以将基本的 HTTP 身份验证添加到您的应用程序中：\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            python\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          import secrets\n\n    from fastapi import Depends, FastAPI, HTTPException, status\n    from fastapi.security import HTTPBasic, HTTPBasicCredentials\n\n    app = FastAPI()\n\n    security = HTTPBasic()\n\n\n    def get_current_username(credentials: HTTPBasicCredentials = Depends(security)):\n        correct_username = secrets.compare_digest(credentials.username, \"stanleyjobson\")\n        correct_password = secrets.compare_digest(credentials.password, \"swordfish\")\n        if not (correct_username and correct_password):\n            raise HTTPException(status_code=status.HTTP_401_UNAUTHORIZED)\n        return credentials.username\n\n\n    @app.get(\"/whoami\")\n    def who_ami_i(username: str = Depends(get_current_username)):\n        return {\"username\": username}\n\nFastAPI 通过 [OpenAPI 标准](https://link.juejin.cn/?target=https%3A%2F%2Fswagger.io%2Fdocs%2Fspecification%2Fauthentication%2F \"https://swagger.io/docs/specification/authentication/\")实现 [OAuth2](https://link.juejin.cn/?target=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FOAuth%23OAuth_2.0_2 \"https://en.wikipedia.org/wiki/OAuth#OAuth_2.0_2\") 和 [OpenID Connect](https://link.juejin.cn/?target=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FOpenID_Connect \"https://en.wikipedia.org/wiki/OpenID_Connect\")。\n\n查看官方文档中的以下资源以获取更多信息：\n\n1. [Security Intro](https://link.juejin.cn/?target=https%3A%2F%2Ffastapi.tiangolo.com%2Ftutorial%2Fsecurity%2F \"https://fastapi.tiangolo.com/tutorial/security/\")\n2. [Advanced Security](https://link.juejin.cn/?target=https%3A%2F%2Ffastapi.tiangolo.com%2Fadvanced%2Fsecurity%2F \"https://fastapi.tiangolo.com/advanced/security/\")\n\n**其他资源**\n\n1. [Web Authentication Methods Compared](https://link.juejin.cn/?target=https%3A%2F%2Ftestdriven.io%2Fblog%2Fweb-authentication-methods%2F \"https://testdriven.io/blog/web-authentication-methods/\")\n2. [Adding Social Authentication to Flask](https://link.juejin.cn/?target=https%3A%2F%2Ftestdriven.io%2Fblog%2Fflask-social-auth%2F \"https://testdriven.io/blog/flask-social-auth/\")\n3. [Session-based Auth with Flask for Single Page Apps](https://link.juejin.cn/?target=https%3A%2F%2Ftestdriven.io%2Fblog%2Fflask-spa-auth%2F \"https://testdriven.io/blog/flask-spa-auth/\")\n4. [Securing FastAPI with JWT Token-based Authentication](https://link.juejin.cn/?target=https%3A%2F%2Ftestdriven.io%2Fblog%2Ffastapi-jwt-auth%2F \"https://testdriven.io/blog/fastapi-jwt-auth/\")\n\n### CORS\n\nCORS（跨源资源共享）中间件检查请求是否来自允许的来源。如果是，则将请求传递给下一个中间件或视图函数。如果不是，它会拒绝请求，并将错误响应发送回调用者。\n\n**Flask** Flask 需要一个名为 [Flask-CORS](https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fcorydolphin%2Fflask-cors \"https://github.com/corydolphin/flask-cors\") 的外部包来支持 CORS：\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          pip install flask-cors\n\n基本实现：\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            python\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          from flask_cors import CORS\n\n    app = Flask(__name__)\n\n    CORS(app)\n\n**FastAPI**\n\nFastAPI 原生支持 CORS：\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            python\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          from fastapi.middleware.cors import CORSMiddleware\n\n    app = FastAPI()\n\n    origins = [\"*\"]\n\n    app.add_middleware(CORSMiddleware, allow_origins=origins)\n\n## 测试\n\n**Flask**\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            python\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          import pytest\n    from flask import Flask\n\n    app = Flask(__name__)\n\n    @app.route(\"/\")\n    def home():\n        return {\"message\": \"OK\"}\n\n    def test_hello():\n        res = app.test_client().get(\"/\")\n\n        assert res.status_code ",
        "tags": [],
        "line": 1188,
        "startOffset": 20621,
        "endOffset": 32041,
        "filePath": "Sources/CuboxSync/从 Flask 转换到 FastAPI - 掘金-2023-09-12.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615154644,
        "isNativeComment": false
      },
      {
        "id": "honzghwat",
        "text": " b'{\"message\":\"OK\"}\\n'\n\n**FastAPI**\n\n      \n      \n        \n          \n       \n       \n         \n           \n        \n        \n          \n            python\n\n        \n        \n          \n            \n    复制代码\n\n       \n       \n         \n           \n      \n      \n        \n          from fastapi import FastAPI\n    from fastapi.testclient import TestClient\n\n    app = FastAPI()\n\n    @app.get(\"/\")\n    async def home():\n        return {\"message\": \"OK\"}\n\n    client = TestClient(app)\n\n    def test_home():\n        res = client.get(\"/\")\n\n        assert res.status_code ",
        "tags": [],
        "line": 1745,
        "startOffset": 32070,
        "endOffset": 32638,
        "filePath": "Sources/CuboxSync/从 Flask 转换到 FastAPI - 掘金-2023-09-12.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615154093,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/云计算泥石流-2024-09-17.md": [
      {
        "id": "ytjexurnn",
        "text": "&mid=2247486489&idx=1&sn=f2be1be496de46ac5ca816ac39cfdf24&scene=21#wechat_redirect \"重新拿回计算机硬件的红利\")\r\n\r\n[扒皮云对象存储：从降本到杀猪](http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 26,
        "startOffset": 613,
        "endOffset": 782,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615160087,
        "isNativeComment": false
      },
      {
        "id": "evzong5sz",
        "text": "&mid=2247485745&idx=4&sn=93746ecea381afd8e2f9820447b09ec7&chksm=fe4b3ceac93cb5fc44f33ffff226747bc317854acbb3882aeb0d9a7e196eeb5df002d0e77275&scene=21#wechat_redirect)\r\n\r\n[云数据库是不是智商税](http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 30,
        "startOffset": 1010,
        "endOffset": 1243,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159484,
        "isNativeComment": false
      },
      {
        "id": "0cjdulfzk",
        "text": "&mid=2247485391&idx=1&sn=4cec9af2b58160eb345a6b12411f0b68&scene=21#wechat_redirect \"公有云是不是杀猪盘？\")[垃圾腾讯云CDN：从入门到放弃](https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 34,
        "startOffset": 1463,
        "endOffset": 1628,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159937,
        "isNativeComment": false
      },
      {
        "id": "9zoxlvoeh",
        "text": "&mid=2247485745&idx=1&sn=6109bb1be67f9e7e02124c4fc3b47ea3&scene=21#wechat_redirect \"FinOps终点是下云\")\r\n\r\n[云计算为啥还没挖沙子赚钱？](https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 38,
        "startOffset": 1808,
        "endOffset": 1976,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615160282,
        "isNativeComment": false
      },
      {
        "id": "wbx222yt2",
        "text": "&mid=2247485601&idx=1&sn=5521562d414b547a192b3dbc45ce720f&scene=21#wechat_redirect \"云SLA是不是安慰剂？\")\r\n\r\n[杀猪盘真的降价了吗？](https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 42,
        "startOffset": 2140,
        "endOffset": 2305,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159614,
        "isNativeComment": false
      },
      {
        "id": "ekhtf8r11",
        "text": "&mid=2247485301&idx=1&sn=2fb038f8b9f26c095d97eb0d87e8b262&scene=21#wechat_redirect \"范式转移：从云到本地优先\")\r\n\r\n**下云奥德赛篇**\r\n\r\n[](http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 46,
        "startOffset": 2467,
        "endOffset": 2636,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159941,
        "isNativeComment": false
      },
      {
        "id": "095y3ljim",
        "text": "&mid=2247486772&idx=1&sn=88783a2b7982f9db9e0b9ea4843fc2cb&chksm=fe4b38efc93cb1f9267d158ac9c52d9e0b9d1a24b765cbf034e3a52a25521aa20764a8bdc8d7&scene=21#wechat_redirect)\r\n\r\n[半年下云省千万：DHH下云FAQ答疑](http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 50,
        "startOffset": 2866,
        "endOffset": 3107,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615160340,
        "isNativeComment": false
      },
      {
        "id": "qg1r096li",
        "text": "&mid=2247486366&idx=1&sn=c28407399af8b1ddeadf93e902ed23cc&scene=21#wechat_redirect \"是时候放弃云计算了吗？\")[](http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 54,
        "startOffset": 3338,
        "endOffset": 3488,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159812,
        "isNativeComment": false
      },
      {
        "id": "znkqou5p2",
        "text": "&mid=2247486772&idx=1&sn=88783a2b7982f9db9e0b9ea4843fc2cb&chksm=fe4b38efc93cb1f9267d158ac9c52d9e0b9d1a24b765cbf034e3a52a25521aa20764a8bdc8d7&scene=21#wechat_redirect)   \r\n\r\n\r\n[下云奥德赛](https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 54,
        "startOffset": 3703,
        "endOffset": 3937,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615160177,
        "isNativeComment": false
      },
      {
        "id": "zmwwmavwi",
        "text": "&mid=2247485745&idx=1&sn=6109bb1be67f9e7e02124c4fc3b47ea3&scene=21#wechat_redirect \"FinOps终点是下云\")\r\n\r\n[从降本增笑到真的降本增效](http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 61,
        "startOffset": 4096,
        "endOffset": 4262,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159570,
        "isNativeComment": false
      },
      {
        "id": "frlnrn0qz",
        "text": "&mid=2247486468&idx=1&sn=7fead2b49f12bc2a2a94aae942403c22&scene=21#wechat_redirect \"我们能从阿里云史诗级故障中学到什么\")\r\n\r\n[阿里云周爆：云数据库管控又挂了](http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 65,
        "startOffset": 4499,
        "endOffset": 4674,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159973,
        "isNativeComment": false
      },
      {
        "id": "xfy74ftl4",
        "text": "&mid=2247486452&idx=1&sn=29cff4ee30b90483bd0a4f0963876f28&scene=21#wechat_redirect \"【阿里】云计算史诗级大翻车来了\")\r\n\r\n**RDS翻车篇**\r\n\r\n[更好的开源RDS替代：Pigsty](http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 70,
        "startOffset": 4914,
        "endOffset": 5103,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615160388,
        "isNativeComment": false
      },
      {
        "id": "p2ojwvca3",
        "text": "&mid=2247485335&idx=1&sn=c37c2ee787fe4fc1b6909500c5f05583&scene=21#wechat_redirect \"驳《再论为什么你不应该招DBA》\")\r\n\r\n[云RDS：从删库到跑路](https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 77,
        "startOffset": 5344,
        "endOffset": 5515,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159818,
        "isNativeComment": false
      },
      {
        "id": "629sy1vje",
        "text": "&mid=2247486587&idx=1&sn=16521d6854711a4fe429464aeb2df6bd&chksm=fe4b39a0c93cb0b6d57c1345b79a6c87972e58eeed65831bc6ba8cf73d2a99d6a11d48d2f706&scene=21#wechat_redirect)   \r\n\r\n\r\n[把数据库放入Docker是一个好主意吗？](http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 81,
        "startOffset": 5678,
        "endOffset": 5926,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615160152,
        "isNativeComment": false
      },
      {
        "id": "flnx5m68r",
        "text": "&mid=2247486766&idx=1&sn=b17b224eb2a2faa401957886cf7ea832&chksm=fe4b38f5c93cb1e3765c88f0cd4133090497527e50c747654f3e312c8db83f801b44bd562e74&scene=21#wechat_redirect)   \r\n\r\n\r\n[门内的国企如何看门外的云厂商](http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 88,
        "startOffset": 6169,
        "endOffset": 6411,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159643,
        "isNativeComment": false
      },
      {
        "id": "3o4br0k9k",
        "text": "&mid=2247486691&idx=1&sn=6858441ede03a6e700155390cf0086f4&chksm=fe4b3938c93cb02eb36992769204ec829f4a9fe55c37329546a1db6039301ddf47094dddf7e1&scene=21#wechat_redirect)\r\n\r\n[互联网故障背后的草台班子们](https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 93,
        "startOffset": 6642,
        "endOffset": 6879,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615160116,
        "isNativeComment": false
      },
      {
        "id": "stjfy1j32",
        "text": "&mid=2247486387&idx=1&sn=20ac92e33ed5a6b8e3120e99aefaf1cc&scene=21#wechat_redirect \"云厂商眼中的客户：又穷又闲又缺爱\")\r\n\r\n【转载】   \r\n\r\n*** ** * ** ***\r\n\r\n\r\n序\r\n\r\n世人常道云上好，托管服务烦恼少。\r\n\r\n我言云乃杀猪盘，溢价百倍实厚颜。\r\n\r\n赛博地主搞垄断，坐地起价剥血汗。\r\n\r\n运维外包嫖开源，租赁电脑炒概念。\r\n\r\n世人皆趋云上游，不觉开销似水流。\r\n\r\n云租天价难为持，开源自建更稳实。\r\n\r\n下云先锋把路趟，引领潮流一肩扛。\r\n\r\n不畏浮云遮望眼，只缘身在最前线。\r\n\r\n曾几何时，\"上云\"近乎成为技术圈的政治正确，整整一代应用开发者的视野被云遮蔽。DHH 以及像我这样的人愿意成为这个质疑者，用实打实的数据与亲身经历，讲清楚公有云租赁模式的陷阱。\r\n\r\n很多开发者并没有意识到，底层硬件已经出现了翻天覆地的变化，性能与成本以指数方式攀升与坍缩。许多习以为常的工作假设都已经被打破，无数利弊权衡与架构方案值得重新思索与设计。\r\n\r\n公有云有其存在意义 ------ 对那些非常早期、或两年后不复存在的公司，那些完全不在乎花钱、有着极端大起大落不规则负载的公司，对那些需要出海合规，CDN服务的公司而言，公有云仍然是非常值得考虑的选项。\r\n\r\n然而对绝大多数已经发展起来，有一定规模与韧性，能在几年内摊销资产的公司而言，真的应该重新审视一下这股云热潮。好处被大大夸张了 ------**在云上跑东西通常和你自己弄一样复杂，却贵得离谱** ，我们真诚建议您好好算一下账。\r\n\r\n最近十年间，硬件以摩尔定律的速度持续演进，IDC2.0与资源云提供了公有云资源的物美价廉替代，开源软件与开源管控调度软件的出现更是让自建能力唾手可及 ------ 云下开源自建，在成本，性能，与安全自主可控上都会有显著回报。\r\n\r\n我们提倡下云理念，并提供了实践的路径与切实可用的自建替代品 ------ 我们将为认同这一结论的追随者提前铺设好意识形态与技术上的道路。不为别的，只是期望所有用户都能拥有自己的数字家园，而不是从科技巨头云领主那里租用农场。这也是一场对互联网集中化与反击赛博地主垄断收租的运动，让互联网 ------ 这个美丽的自由避风港与理想乡可以走得更长。\r\n\r\n*** ** * ** ***\r\n\r\n云基础资源篇\r\n\r\nEC2 / S3 / EBS 这样的基础资源价格，是所有云服务的定价之锚。基础资源篇的五篇文章，分别剖析了 EC2 算力，S3 对象存储，EBS 云盘，RDS 云数据库，以及 CDN 网络的方方面面：质量、安全、效率，以及大家最关心的一系列问题。\r\n\r\n[重新拿回计算机硬件的红利](http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 97,
        "startOffset": 7048,
        "endOffset": 8264,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159522,
        "isNativeComment": false
      },
      {
        "id": "hvcpxv3q1",
        "text": "&mid=2247486688&idx=1&sn=bbdee063b65994cb5e15d3e3b7d87523&chksm=fe4b393bc93cb02d76c48f0fbfe3d60c8821b8079b1cfc05f8ccc56c1351b4a7a76b5794019a&scene=21#wechat_redirect)\r\n\r\n对象存储是云计算的定义性服务，曾是云上降本的典范。然而随着硬件的发展，资源云（Cloudflare / IDC 2.0）与开源平替（MinIO）的出现，曾经\"物美价廉\"的对象存储服务失去了性价比，和[EBS](http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 146,
        "startOffset": 8726,
        "endOffset": 9051,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615160200,
        "isNativeComment": false
      },
      {
        "id": "50ubuskol",
        "text": "&mid=2247485745&idx=4&sn=93746ecea381afd8e2f9820447b09ec7&chksm=fe4b3ceac93cb5fc44f33ffff226747bc317854acbb3882aeb0d9a7e196eeb5df002d0e77275&scene=21#wechat_redirect)\r\n\r\nEC2 / S3 / EBS 是所有云服务的定价之锚。如果说 EC2/S3 定价还勉强能算合理，那么 EBS 的定价乃是故意杀猪。公有云厂商最好的块存储服务与自建可用的 PCI-E NVMe SSD 在性能规格上基本相同。然而相比直接采购硬件，AWS EBS 的成本高达 **120** 倍，而阿里云的 ESSD 则可高达 **200** 倍。\r\n\r\n公有云的弹性就是针对其商业模式设计的：**启动成本极低，维持成本极高** 。低启动成本吸引用户上云，而且良好的弹性可以随时适配业务增长，可是业务稳定后形成供应商锁定，尾大不掉，极高的维持成本就会让用户痛不欲生了。这种模式有一个俗称 ------**杀猪盘**。\r\n\r\n[](http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 152,
        "startOffset": 9450,
        "endOffset": 9983,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159924,
        "isNativeComment": false
      },
      {
        "id": "7h800ftvu",
        "text": "&mid=2247485745&idx=5&sn=a7d610ea37c3f3fa78ee4ba0ee705962&chksm=fe4b3ceac93cb5fc6f1975f94be04424e7b3690eedd1658951deb8d016f5f19ade8806d86417&scene=21#wechat_redirect)\r\n\r\n\r\n近日，Basecamp \\& HEY 联合创始人 DHH 的一篇文章引起热议，主要内容可以概括为一句话：\"*我们每年在云数据库（RDS/ES）上花50万美元，你知道50万美元可以买多少牛逼的服务器吗？我们要下云，拜拜了您呐！* \"\r\n\r\n在专业甲方用户眼中，云数据库只能算 60 分及格线上的大锅饭标品，却敢于卖出十几倍的天价资源溢价。如果用云数据库1年的钱，就够买几台甚至十几台性能更好的服务器自建更好的本地 RDS，那么使用云数据库的意义到底在哪里？在有完整开源平替的情况下，这算不算交了智商税？\r\n\r\n[](https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 158,
        "startOffset": 10208,
        "endOffset": 10688,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159682,
        "isNativeComment": false
      },
      {
        "id": "z6gdzy4g6",
        "text": "&mid=2247485363&idx=1&sn=8622b25fd2309d4fc969d22964a04129&scene=21#wechat_redirect \"垃圾腾讯云CDN：从入门到放弃\")\r\n\r\n本来我相信至少在 IaaS 的存储，计算，网络三大件上，公有云厂商还是可以有不小优势的。只不过在腾讯云 CDN 上的亲身体验让我的想法动摇了。\r\n\r\n*** ** * ** ***\r\n\r\n云商业模式篇\r\n\r\n[FinOps终点是下云](https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 165,
        "startOffset": 10849,
        "endOffset": 11123,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615160323,
        "isNativeComment": false
      },
      {
        "id": "140g1l8op",
        "text": "&mid=2247485629&idx=1&sn=7ec768fac5905b0c7052e7b3a6825c4e&scene=21#wechat_redirect \"云计算为啥还没挖沙子赚钱？\")\r\n\r\n公有云毛利不如挖沙子，杀猪盘为何成为赔钱货？\r\n\r\n卖资源模式走向价格战，开源替代打破垄断幻梦。\r\n\r\n服务竞争力逐渐被抹平，云计算行业将走向何方？\r\n\r\n业界标杆的 AWS 与 Azure 毛利就可以轻松到 60% 与 70% 。反观国内云计算行业，毛利普遍在个位数到**15%** 徘徊，至于像金山云这样的云厂商，毛利率直接一路干到**2.1%** ，还不如打工挖沙子的毛利高。这不禁让人好奇，这些本土云厂商是怎么把一门百分之三四十纯利的生意能做到这种地步的？\r\n\r\n[云SLA是不是安慰剂？](https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 183,
        "startOffset": 11598,
        "endOffset": 12002,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615160072,
        "isNativeComment": false
      },
      {
        "id": "76urjbn17",
        "text": "&mid=2247485601&idx=1&sn=5521562d414b547a192b3dbc45ce720f&chksm=fe4b3d7ac93cb46c37f64f61593a102eb0a6c624a95fe37e0cccf2c03c766cda5ad268671e14&scene=21#wechat_redirect)（SLA）曾被视为云厂商对其服务质量的承诺。然而，当我们深入研究这些由一堆9组成的[**SLA**](https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 195,
        "startOffset": 12167,
        "endOffset": 12435,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159641,
        "isNativeComment": false
      },
      {
        "id": "rj5nlfqtz",
        "text": "&mid=2247485559&idx=1&sn=9279f44f0aa804a6e2698e503d5eacea&scene=21#wechat_redirect \"杀猪盘真的降价了吗？\")\r\n\r\n存算资源降价跟不上摩尔定律发展其实就是变相涨价。但能看到有云厂商率先打起了降价第一枪，还是让人欣慰的：云厂商向 PLG 的康庄大道迈出了第一步：用技术优化产品，靠提高效率去降本，而不是靠销售吹逼打折杀猪。\r\n\r\n[范式转移：从云到本地优先](https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 199,
        "startOffset": 12742,
        "endOffset": 13014,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615160216,
        "isNativeComment": false
      },
      {
        "id": "zcm6ferii",
        "text": "&mid=2247486772&idx=1&sn=88783a2b7982f9db9e0b9ea4843fc2cb&chksm=fe4b38efc93cb1f9267d158ac9c52d9e0b9d1a24b765cbf034e3a52a25521aa20764a8bdc8d7&scene=21#wechat_redirect)\r\n\r\n[下云奥德赛](https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 213,
        "startOffset": 13393,
        "endOffset": 13622,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159867,
        "isNativeComment": false
      },
      {
        "id": "6ikdw1mej",
        "text": "&mid=2247485760&idx=1&sn=97096da1077a4fbb4c43452a3c4983c7&scene=21#wechat_redirect \"下云奥德赛\")》，记录了他们从云上搬下来的完整旅程。后续更新《[是时候放弃云计算了吗？](https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 219,
        "startOffset": 13904,
        "endOffset": 14084,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615160378,
        "isNativeComment": false
      },
      {
        "id": "9ltw0ujzk",
        "text": "&mid=2247486366&idx=1&sn=c28407399af8b1ddeadf93e902ed23cc&scene=21#wechat_redirect \"是时候放弃云计算了吗？\")\r\n\r\nDHH 下云已省下了近**百万美元** 云支出，未来的五年还能省下上**千万美元**。我们跟进了下云先锋的最新进展，新挑选了五篇博文，译为中文以飨读者。\r\n\r\n## 10-27 推特下云省掉60% 云开销\r\n\r\n## 10-06 托管云服务的代价\r\n\r\n## 09-15 下云后已经省了百万美金\r\n\r\n## 06-23 我们已经下云了！\r\n\r\n## 05-03 从云遣返到主权云！\r\n\r\n## 05-02 下云还有性能回报？\r\n\r\n## 04-06 下云所需的硬件已就位！\r\n\r\n## 03-23 裁员前不先考虑下云吗？\r\n\r\n## 03-11 失控的不仅仅是云成本！\r\n\r\n## 02-22 指导下云的五条价值观\r\n\r\n## 02-21 下云将给咱省下五千万！\r\n\r\n## 01-26 折腾硬件的乐趣重现\r\n\r\n## 01-10 \"企业级\"替代品还要离谱\r\n\r\n## 2022-10-19 我们为什么要下云？\r\n\r\n[下云高可用的秘诀：拒绝智力自慰](http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 221,
        "startOffset": 14259,
        "endOffset": 14837,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159733,
        "isNativeComment": false
      },
      {
        "id": "jpxdp7yvl",
        "text": "&mid=2247486660&idx=1&sn=ecd2371c822d737d41ffd9a6323f78fb&chksm=fe4b391fc93cb009f1927a142c02d0f72c13c94afe835c94ab7c4205ed819063592472b69d63&scene=21#wechat_redirect)\r\n\r\nDHH 与 X马斯克的下云举措在全球引发了激烈的讨论，有许多的支持者，也有许多的质疑者。面对众人提出的问题与质疑，DHH 给出了自己充满洞见的回复。\r\n\r\n在硬件上省下的成本，会不会被更大规模的团队薪资抵消掉？\r\n\r\n为什么你选择下云，而不是优化云账单呢？\r\n\r\n你有没有试过用\"云原生\"应用的方式上云？\r\n\r\n那么安全性呢？你不担心被黑客攻击吗？\r\n\r\n不需要一支世界级超级工程师团队来干这些吗？\r\n\r\n这是否意味着你们在建造自己的数据中心？\r\n\r\n谁来做码放服务器、拔插网络电缆这些活呢？\r\n\r\n那么可靠性呢？难道云不是为你做到了这些吗？\r\n\r\n那国际化业务的性能呢？云不是更快吗？\r\n\r\n你有考虑到以后更换服务器的成本吗？\r\n\r\n那么隐私法规和GDPR呢？\r\n\r\n那么需求激增时怎么办？自动伸缩呢？\r\n\r\n你在服务合同和授权许可费上花费了多少？\r\n\r\n如果云这么贵，你们为什么会选择它？\r\n\r\n*** ** * ** ***\r\n\r\n\r\n云故障复盘篇\r\n\r\n[](https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 259,
        "startOffset": 15293,
        "endOffset": 15948,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159767,
        "isNativeComment": false
      },
      {
        "id": "2svjmibgw",
        "text": "&mid=2247486468&idx=1&sn=7fead2b49f12bc2a2a94aae942403c22&scene=21#wechat_redirect \"我们能从阿里云史诗级故障中学到什么\")\r\n\r\n[【阿里】云计算史诗级大翻车来了](https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 298,
        "startOffset": 16099,
        "endOffset": 16275,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159573,
        "isNativeComment": false
      },
      {
        "id": "44wlrfaur",
        "text": "&mid=2247486452&idx=1&sn=29cff4ee30b90483bd0a4f0963876f28&scene=21#wechat_redirect \"史诗级的大翻车\")。根据阿里云官方的服务状态页，**全球范围内所有可用区** x **所有服务**全部都出现异常，时间从 17:44 到 21: 11，共计3小时27分钟。规模与范围创下全球云计算行业的历史纪录。\r\n\r\n[阿里云周爆：云数据库管控又挂了](http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 302,
        "startOffset": 16468,
        "endOffset": 16730,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159942,
        "isNativeComment": false
      },
      {
        "id": "dyw1rw3ny",
        "text": "&mid=2247486452&idx=1&sn=29cff4ee30b90483bd0a4f0963876f28&chksm=fe4b3e2fc93cb739af6ce49cffa4fa3d010781190d99d3052b4dbfa87d28c0386f44667e4908&scene=21#wechat_redirect)过去，还没有看到官方的详细[复盘报告](http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 306,
        "startOffset": 16967,
        "endOffset": 17203,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615160441,
        "isNativeComment": false
      },
      {
        "id": "dh4ecd033",
        "text": "&mid=2247486468&idx=1&sn=7fead2b49f12bc2a2a94aae942403c22&scene=21#wechat_redirect \"我们能从阿里云史诗级故障中学到什么\")\r\n\r\n## 时隔一年阿里云又出大故障，并创造了云计算行业闻所未闻的新记录------全球所有区域/所有服务同时异常。\r\n\r\n## 阿里云不愿意发布故障复盘报告，那我就来替他复盘 ------ 我们应当如何看待这一史诗级故障案例，以及，能从中学习到什么经验与教训？\r\n\r\n\r\n[从降本增笑到真的降本增效](http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 311,
        "startOffset": 17598,
        "endOffset": 17904,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615160072,
        "isNativeComment": false
      },
      {
        "id": "xg4dgmy0z",
        "text": "&mid=2247486452&idx=1&sn=29cff4ee30b90483bd0a4f0963876f28&chksm=fe4b3e2fc93cb739af6ce49cffa4fa3d010781190d99d3052b4dbfa87d28c0386f44667e4908&scene=21#wechat_redirect)，然后开始了11月连环炸模式------ 从月爆到周爆再到日爆。话音未落，**滴滴** 又出现了一场超过12小时，资损几个亿的大故障。\r\n\r\n年底正是冲绩效的时间，互联网大厂大事故却是一波接一波。硬生生把降本增效搞成了\"**降本增笑** \" ------ 这已经不仅仅是梗了，而是来自官方的自嘲。大厂故障频发，处理表现远远有失水准，乱象的背后到底是什么问题？\r\n\r\n*** ** * ** ***\r\n\r\n\r\nRDS翻车篇\r\n\r\n[更好的开源RDS替代：Pigsty](http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 320,
        "startOffset": 18154,
        "endOffset": 18604,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159628,
        "isNativeComment": false
      },
      {
        "id": "m5mbc9l9k",
        "text": "&mid=2247485335&idx=1&sn=c37c2ee787fe4fc1b6909500c5f05583&scene=21#wechat_redirect \"驳《再论为什么你不应该招DBA》\")\r\n\r\n云计算鼓吹者马工大放厥词说：云数据库可以取代 DBA。之前在《[你怎么还在招聘DBA](http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 335,
        "startOffset": 19180,
        "endOffset": 19380,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159654,
        "isNativeComment": false
      },
      {
        "id": "0a7cszm5k",
        "text": "&mid=2247485269&idx=1&sn=a46b8b218331ece956c336b5c2a8df79&chksm=fe4b328ec93cbb98434b258ed1bfa6c63aecd0f3675002db75520edd21456eb39e97455fe995&scene=21#wechat_redirect)》中，我们便已交锋过。\r\n\r\n当别人把屎盆子扣在这个行业所有人头上时，还是需要人来站出来说几句的。因此撰文以驳斥马工的谬论：《[再论为什么你不应该招DBA](http://mp.weixin.qq.com/s?__biz=MzkwODMyMDE2NQ",
        "tags": [],
        "line": 337,
        "startOffset": 19613,
        "endOffset": 19908,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615160087,
        "isNativeComment": false
      },
      {
        "id": "87n6vpz9q",
        "text": "&mid=2247485093&idx=1&sn=5815f71f1d832101d35a75f5aa4acd3c&scene=21#wechat_redirect \"云RDS：从删库到跑路\")\r\n\r\n用户都已经花钱买了'开箱即用'的云数据库了，为什么连 PITR 恢复这么基本的兜底都没有呢？因为云厂商心机算计，把WAL日志归档/PITR这些PG的基础功能阉割掉，放进所谓的\"高可用\"版本高价出售。\r\n\r\n云数据库也是数据库，云数据库并不是啥都不用管的运维外包魔法，不当配置使用，一样会有数据丢失的风险。没有开启WAL归档就无法使用PITR，甚至无法登陆服务器获取现存WAL来恢复误删的数据。当故障发生时，用户甚至被断绝了自救的可能性，只能原地等死。\r\n\r\n[数据库应该放入K8S里吗？](http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 341,
        "startOffset": 20141,
        "endOffset": 20537,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159615,
        "isNativeComment": false
      },
      {
        "id": "s4ih7gjj5",
        "text": "&mid=2247486572&idx=1&sn=274a51976bf8ae5974beb1d3173380c1&chksm=fe4b39b7c93cb0a14c4d99f8ffd1e00c36b972a8058fd99e9d06e6035c4f378b6d327892260b&scene=21#wechat_redirect)\r\n\r\n对于无状态的应用服务而言，**容器** 是一个相当完美的开发运维解决方案。然而对于带持久状态的服务 ------ 数据库来说，事情就没有那么简单了。我认为就目前而言，将生产环境数据库放入Docker / K8S 中仍然是一个馊主意。\r\n\r\n对于云厂商来说，使用容器的利益是自己的，弊端是用户的，他们有动机这样去做，但这样的利弊权衡对普通用户而言并不成立。  \r\n\r\n*** ** * ** ***\r\n\r\n云厂商画像篇\r\n\r\n这个系列多数来自云计算鼓吹者马工，为本土云厂商与互联网大厂绘制了精准幽默，幽默滑稽的肖像。  \r\n\r\n[卡在政企客户门口的阿里云](http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 353,
        "startOffset": 21055,
        "endOffset": 21553,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159529,
        "isNativeComment": false
      },
      {
        "id": "ye2yjmqnt",
        "text": "&mid=2247486590&idx=1&sn=d4d85de483fafb867487f024631a3e6c&scene=21#wechat_redirect \"互联网故障背后的草台班子们\")\r\n\r\n[云厂商眼中的客户：又穷又闲又缺爱](https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 367,
        "startOffset": 21786,
        "endOffset": 21959,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615160260,
        "isNativeComment": false
      },
      {
        "id": "dsn20zfvw",
        "text": "&mid=2247486766&idx=1&sn=b17b224eb2a2faa401957886cf7ea832&chksm=fe4b38f5c93cb1e3765c88f0cd4133090497527e50c747654f3e312c8db83f801b44bd562e74&scene=21#wechat_redirect)\r\n\r\n[门内的国企如何看门外的云厂商](http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng",
        "tags": [],
        "line": 371,
        "startOffset": 22124,
        "endOffset": 22361,
        "filePath": "Sources/CuboxSync/云计算泥石流-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159598,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/万字长文深入浅出教你优雅开发复杂AI Agent-2025-06-25.md": [
      {
        "id": "g8e3lnmkw",
        "text": "&mid=2649794129&idx=1&sn=8d1bcb2faee434e9754c84974e2dc743&chksm=bf9b03be2f4388e19ee8285a1aa5dcc16dac8e5f154a460b9cc5bc06c729bf32af92f9bf803a&mpshare=1&srcid=06250hoOKaKZ4Ry8kxCivnDr&sharer_shareinfo=a70365d690c3af8d9a079aceea2d992e&sharer_shareinfo_first=a70365d690c3af8d9a079aceea2d992e&from=groupmessage&scene=1&subscene=10000&clicktime=1750824893&enterid=1750824893&sessionid=0&ascene=1&fasttmpl_type=0&fasttmpl_fullversion=7791309-zh_CN-zip&fasttmpl_flag=0&realreporttime=1750824893978&devicetype=android-35&version=28003c51&nettype=WIFI&abtest_cookie=AAACAA",
        "tags": [],
        "line": 3,
        "startOffset": 142,
        "endOffset": 708,
        "filePath": "Sources/CuboxSync/万字长文深入浅出教你优雅开发复杂AI Agent-2025-06-25.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1750841836898,
        "isNativeComment": false
      },
      {
        "id": "71w95k9do",
        "text": "&mid=2649794129&idx=1&sn=8d1bcb2faee434e9754c84974e2dc743&chksm=bf9b03be2f4388e19ee8285a1aa5dcc16dac8e5f154a460b9cc5bc06c729bf32af92f9bf803a&mpshare=1&srcid=06250hoOKaKZ4Ry8kxCivnDr&sharer_shareinfo=a70365d690c3af8d9a079aceea2d992e&sharer_shareinfo_first=a70365d690c3af8d9a079aceea2d992e&from=groupmessage&scene=1&subscene=10000&clicktime=1750824893&enterid=1750824893&sessionid=0&ascene=1&fasttmpl_type=0&fasttmpl_fullversion=7791309-zh_CN-zip&fasttmpl_flag=0&realreporttime=1750824893978&devicetype=android-35&version=28003c51&nettype=WIFI&abtest_cookie=AAACAA",
        "tags": [],
        "line": 12,
        "startOffset": 1366,
        "endOffset": 1932,
        "filePath": "Sources/CuboxSync/万字长文深入浅出教你优雅开发复杂AI Agent-2025-06-25.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1750841837122,
        "isNativeComment": false
      },
      {
        "id": "ewgs76ttv",
        "text": " 0 {\n            return compose.END, nil\n          }\n          return\"ToolNode\", nil\n        }, map[string]bool{\n          compose.END: true, // edge:3\n          \"ToolNode\":  true, // edge:4\n        }))\n      _ = g.AddEdge(\"ToolNode\", \"ChatModel\") // edge:5\n\n    // 编译运行图\n      r, err := g.Compile(ctx, compose.WithMaxRunSteps(10))\n    if err != nil {\n        panic(err)\n      }\n\n    // 执行\n      in := map[string]any{\"location\": \"广州\"}\n      ret, err := r.Invoke(ctx, in)\n    if err != nil {\n        panic(err)\n      }\n    // 输出天气信息\n      log.Println(\"invoke result: \", ret)\n    }\n\nEino框架通过State提供了并发安全的状态管理，确保共享的State可以被安全地读写。在上述例子中，通过WithStatePreHandler以及WithStatePostHandler回调，将模型输入、输出的上下文记录到全局状态中完成ReAct的迭代。\n\n###### Callbacks：切面\n\n在大模型应用的开发过程中，Component组件和Graph编排虽然解决了\"定义业务逻辑\"的核心问题，但仅有业务逻辑远远不够。一个完整的AI应用还需要具备logging、tracing、metrics等可观测能力，以及中间执行过程的流式展示功能。这些非核心业务逻辑的功能同样关键，因为AI推理过程往往是\"黑盒\"的，开发者和用户都需要了解中间执行状态。例如，在AI搜索场景中，用户不仅关心最终答案，更希望看到搜索使用的关键词、检索到的文档片段、推理依据等中间信息。在RAG（检索增强生成）应用中，展示引用的文档名称、相关性评分、向量检索过程等中间状态，能够显著提升用户对AI系统的信任度和满意度。这些能力决定了应用的可维护性、可调试性和用户体验质量。\n\nEino框架通过Callback机制优雅地解决了这一挑战。Callback实现了\"横切面功能注入\"和\"中间状态透出\"两大核心功能。其工作原理是：用户提供并注册自定义的Callback Handler函数，Component和Graph在执行过程中的固定时机（如组件开始执行、执行完成、发生错误等关键切面）主动回调这些函数，并传递对应的执行信息。这种设计实现了核心业务逻辑控制面与可观测组件的完全解耦。这种解耦带来的价值是显著的。首先，业务逻辑代码保持纯粹，不被监控、日志等横切关注点污染；其次，可观测能力可以灵活配置和扩展，不同环境可以注册不同的Callback Handler；最后，中间状态的透出变得标准化和可控，开发者可以精确控制哪些信息需要暴露给用户或监控系统。\n\nCallback有以下几个触发时机，分别对应了Handler里边的回调方法：\n\n    const (\n        TimingOnStart CallbackTiming = iota// 进入并开始执行\n        TimingOnEnd // 成功完成即将 return\n        TimingOnError // 失败并即将 return err \n        TimingOnStartWithStreamInput // OnStart，但是输入是 StreamReader\n        TimingOnEndWithStreamOutput // OnEnd，但是输出是 StreamReader\n    )\n\n    type Handler interface {\n        OnStart(ctx context.Context, info *RunInfo, input CallbackInput) context.Context\n        OnEnd(ctx context.Context, info *RunInfo, output CallbackOutput) context.Context\n        OnError(ctx context.Context, info *RunInfo, err error) context.Context\n        OnStartWithStreamInput(ctx context.Context, info *RunInfo,\n           input *schema.StreamReader[CallbackInput]) context.Context\n        OnEndWithStreamOutput(ctx context.Context, info *RunInfo,\n           output *schema.StreamReader[CallbackOutput]) context.Context\n    }\n\nEino通过数据复制的方式，保证了在Callbacks的处理过程中数据流的并发安全性，每个Handler都能消费到一份独立的数据流。\n\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2Fj3gficicyOvasxT65FAVKanwgAyu09L2icE6iaFugx1BvqicsHkJlFo2fX3z3lWgKYlgPFfrHibhlxsoxrOsgiamMP5tw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg%26tp%3Dwebp%26wxfrom%3D5%26wx_lazy%3D1&valid=false)\n\n###### Checkpoint：检查点\n\nHuman In The Loop（HITL）是一种让人类用户能够实时参与和干预AI Agent执行过程的机制。在复杂或高风险的AI应用场景中，完全依赖自动化决策往往难以满足安全性、准确性或合规性等要求。通过引入Human In The Loop，系统可以在关键节点暂停执行，等待用户输入、确认或修正，从而大幅提升AI系统的可控性、透明度和最终结果的可靠性。\n\nHITL可以实现以下重要功能：\n\n*\n  质量审核：在人机协同工作中，用户可以在重要决策节点实时干预，例如审核AI生成的内容、修改推荐结果等，确保关键任务（如数据库敏感数据、运维操作等）的准确性和安全性。\n*\n  实时干预：通过人类在关键节点的参与，系统可以及时调整，避免偏差，从而提高整体决策的准确性。\n*\n  模型优化：收集人类反馈数据，用于后续模型训练和优化，逐步提升AI系统的表现和适应能力。\n*\n  用户互动：在复杂任务中询问用户的意见，以提高用户体验，增强互动性。\n\nHITL的典型应用包括：在AI生成内容前让用户确认、在多轮推理中让用户补充信息、在任务分解或执行过程中让用户选择分支或修正Agent的行为等。这不仅提升了用户体验，也为AI系统的安全和合规提供了保障。\n\nEino框架通过Checkpoint（检查点）机制优雅地实现了Human In The Loop的能力。Checkpoint允许开发者在Agent执行流的任意位置设置\"暂停点\"，当执行到该点时，系统会将当前上下文和中间结果保存，并将控制权交还给外部（如前端或人工审核系统）。用户可以在此时查看、编辑或补充信息，确认后再恢复Agent的后续执行。通过这种机制，开发者可以在Agent执行流的检查点询问用户的意见，进一步提高用户体验。这一机制极大地增强了AI Agent的交互性和灵活性。\n\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2Fj3gficicyOvasxT65FAVKanwgAyu09L2icEicRYPaoYcl2uCkc9BsbMIK1eWQfpQIDQcacxzI1JVBapJ3tzfLOKSyA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg%26tp%3Dwebp%26wxfrom%3D5%26wx_lazy%3D1&valid=false)\n\n以下使用一个简单的例子，展示使用CheckPoint的能力实现Human In The Loop的效果：\n\n    func main() {\n      _ = compose.RegisterSerializableType[myState](\"state\")\n      ctx := context.Background()\n      g := compose.NewGraph[map[string]any, *schema.Message](\n        compose.WithGenLocalState(\n          func(ctx context.Context) *myState {\n            return &myState{}\n          },\n        ),\n      )\n      _ = g.AddChatTemplateNode(\"ChatTemplate\", newChatTemplate(ctx))\n      _ = g.AddChatModelNode(\"ChatModel\", newChatModel(ctx),\n        compose.WithStatePreHandler(\n          func(ctx context.Context, in []*schema.Message, state *myState) ([]*schema.Message, error) {\n            state.History = append(state.History, in...)\n            return state.History, nil\n          }),\n        compose.WithStatePostHandler(\n          func(ctx context.Context, out *schema.Message, state *myState) (*schema.Message, error) {\n            state.History = append(state.History, out)\n            return out, nil\n          }),\n      )\n      _ = g.AddLambdaNode(\"HumanInTheLoop\", compose.InvokableLambda(\n        func(ctx context.Context, input *schema.Message) (output *schema.Message, err error) {\n          var userInput string\n          _ = compose.ProcessState(ctx, func(ctx context.Context, s *myState) error {\n            userInput = s.Input\n            returnnil\n          })\n          if userInput ",
        "tags": [],
        "line": 487,
        "startOffset": 26647,
        "endOffset": 31727,
        "filePath": "Sources/CuboxSync/万字长文深入浅出教你优雅开发复杂AI Agent-2025-06-25.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1750841837403,
        "isNativeComment": false
      },
      {
        "id": "zbwubdk7j",
        "text": " \"n\" {\n            returnnil, fmt.Errorf(\"user cancel\")\n          }\n          return input, nil\n        }))\n      _ = g.AddToolsNode(\"ToolsNode\", newToolsNode(ctx),\n        compose.WithStatePreHandler(\n          func(ctx context.Context, in *schema.Message, state *myState) (*schema.Message, error) {\n            return state.History[len(state.History)-1], nil\n          }))\n      _ = g.AddEdge(compose.START, \"ChatTemplate\")\n      _ = g.AddEdge(\"ChatTemplate\", \"ChatModel\")\n      _ = g.AddEdge(\"ToolsNode\", \"ChatModel\")\n      _ = g.AddBranch(\"ChatModel\",\n        compose.NewGraphBranch(func(ctx context.Context, in *schema.Message) (endNode string, err error) {\n          iflen(in.ToolCalls) > 0 {\n            return\"HumanInTheLoop\", nil\n          }\n          return compose.END, nil\n        }, map[string]bool{\"HumanInTheLoop\": true, compose.END: true}))\n      _ = g.AddEdge(\"HumanInTheLoop\", \"ToolsNode\")\n\n      runner, err := g.Compile(ctx, compose.WithCheckPointStore(newCheckPointStore(ctx)))\n    if err != nil {\n        panic(err)\n      }\n\n      taskID := uuid.New().String()\n    var history []*schema.Message\n    var userInput string\n    for {\n        result, err := runner.Invoke(ctx, map[string]any{\"name\": \"Alice\", \"location\": \"广州\"},\n          compose.WithCheckPointID(taskID),\n          compose.WithStateModifier(func(ctx context.Context, path compose.NodePath, state any) error {\n            state.(*myState).Input = userInput\n            state.(*myState).History = history\n            returnnil\n          }))\n        if err ",
        "tags": [],
        "line": 601,
        "startOffset": 31834,
        "endOffset": 33376,
        "filePath": "Sources/CuboxSync/万字长文深入浅出教你优雅开发复杂AI Agent-2025-06-25.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1750841837590,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/万维钢：怎么把AI使用到最高水平？-2025-07-17.md": [
      {
        "id": "ri6pnat1l",
        "text": "&mid=3009355472&idx=1&sn=58d6d3df3c3390d4af8b4f64413c58e4&scene=21#wechat_redirect)**\n\n07-10 能力精细化，是很多人的唯一解法\n\n\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_jpg%2FI0y5GhSOx6SiaPDjJweq8j8jEF3ufXZ3MGq8BAVMC2SeibZPgSPArrBBAMGUFhTkSyqicAWGBgHUkFD74mfpu30icw%2F640%3Fwx_fmt%3Djpeg%26tp%3Dwebp%26wxfrom%3D5%26wx_lazy%3D1&valid=false)\n\n\n**[这三种认知，决定孩子长大后的命运](https://mp.weixin.qq.com/s?__biz=MjM5NjAxOTU4MA",
        "tags": [],
        "line": 222,
        "startOffset": 7000,
        "endOffset": 7446,
        "filePath": "Sources/CuboxSync/万维钢：怎么把AI使用到最高水平？-2025-07-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752747307623,
        "isNativeComment": false
      },
      {
        "id": "dx0p0w2mf",
        "text": "&mid=3009355449&idx=1&sn=914450aaa655bd1ca11edf336a258ea5&scene=21#wechat_redirect)**\n\n07-07 与其追求伟大，不如专注当下的行动\n\n\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_jpg%2FI0y5GhSOx6SiaPDjJweq8j8jEF3ufXZ3MEXPLFPfb8ibvswpoLAxrnw8XReVlbL4RnzL9pzROiayKyXYvKzhsQ9Mw%2F640%3Fwx_fmt%3Djpeg%26tp%3Dwebp%26wxfrom%3D5%26wx_lazy%3D1&valid=false)\n\n\n**[真正厉害的爸妈，暑假都带娃去这里\"开眼\"](https://mp.weixin.qq.com/s?__biz=MjM5NjAxOTU4MA",
        "tags": [],
        "line": 238,
        "startOffset": 7889,
        "endOffset": 8339,
        "filePath": "Sources/CuboxSync/万维钢：怎么把AI使用到最高水平？-2025-07-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752747308512,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/一篇文章让你透彻认识 Mac 应用切换和窗口切换的逻辑-2024-06-14.md": [
      {
        "id": "5kqpqhgl3",
        "text": "两边的空间白白浪费掉了",
        "tags": [],
        "line": 357,
        "startOffset": 14541,
        "endOffset": 14556,
        "filePath": "Sources/CuboxSync/一篇文章让你透彻认识 Mac 应用切换和窗口切换的逻辑-2024-06-14.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159722,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/一文带你彻底厘清 Kubernetes 中的证书工作机制-赵化冰的博客 - Zhaohuabing Blog-2024-08-12.md": [
      {
        "id": "5fjnpogzi",
        "text": "\r\n        server: https://localhost:8443\r\n      name: kubernetes\r\n    contexts:\r\n    - context:\r\n        cluster: kubernetes\r\n        user: system:kube-controller-manager\r\n      name: system:kube-controller-manager@kubernetes\r\n    current-context: system:kube-controller-manager@kubernetes\r\n    kind: Config\r\n    preferences: {}\r\n    users:\r\n    - name: system:kube-controller-manager\r\n      user:\r\n        # 用于访问 kube-apiserver 的客户端证书\r\n        client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lJZVE4aDNXSlNmZEF3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2JXbHVhV3QxWW1WRFFUQWVGdzB5TURBek1EY3dNRE0zTVRGYUZ3MHlNVEExTVRrd05qVTNNemxhTUNreApKekFsQmdOVkJBTVRIbk41YzNSbGJUcHJkV0psTFdOdmJuUnliMnhzWlhJdGJXRnVZV2RsY2pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU5DTzJpTEZzNGRTTW9sR2plN2tjY1VFbURDVjEvbWQKV1p1cS9DT0RvV1p2Uy80clNrOXNsaFQvektIVTVkVmg3SFV4TGNWU1RkQXZScGEwN3dXK3h2eWlDR3Y5UmMyVAp0bkFnUFFhQ2VkOC8zZlFpMzI1QmZCZVl4UjRTTm8raEM1b0ZYYkhpdC9OWWlQTVMvM1hFOGVCc0dEZCtjd1pzCnhNTDZzc0pJNzVOSmNXckV3eXlMbzIrb1JSRmJ2TlpJWFRZekJpRGd3QkZxNUkzZVA5QTl2d29rUG5STFBSdlYKQU9SV3hUZDMyblJLOTY1SU9uV25mNzY0bHhSeEV6bHIyS09rSzc5NlVJWTlyL0lYOWdGQjNqbGZFK1lBOE5VLwpuV2x3cElNL0ZpMk9hL1hjNnQzNUJHSnNXcTR4bHQ5RDdqS3V2bTNONmJlanJPOFZNODU5QU44Q0F3RUFBYU1uCk1DVXdEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUNNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCZVg4QmVuTlJoUTVWaVpMMjRxcWxIMjRlMDVyYWVVTFZJQlQzWE90cmdQcXF1WXRGWgptRG9naEpuSW05aVVMcHFTTUxHMlJrQ0RBMEk2Rit0SGVFVHRMRDlNdjA2N1huQ2VCclhkTFVTYzkwaHNZWm1KClNsVG11c21TZGUxUXJsRnFxQVRZY2VCVWgwM0lSbXZIL1BtS21va1FUZDZER0paVVVhM3ducEN6Nko4aGcySGwKWlZFaURKcHNoeXNBaVdCUWZBN01TRlFlb0poSjhUdHgzdEhNZDlaaHlmcVVHOVByUGJkMUlBQTIrRlVudXRsNwpoRmdZdTBxbG5aZFZCWE9JM1dvZndWZ2dDTEQrbFVCeGgzNVhLNStxYXhWNVlDTit0ZTNFeDJERHVmRW1UV0FoCkwwUVNTc0RTZGd0Vi9TNFhvV2xQcXU0Q2lRVnZydUg3WHkxMwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg",
        "tags": [],
        "line": 154,
        "startOffset": 9674,
        "endOffset": 11570,
        "filePath": "Sources/CuboxSync/一文带你彻底厘清 Kubernetes 中的证书工作机制-赵化冰的博客 - Zhaohuabing Blog-2024-08-12.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615159766,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/【代码实践】使用FastAPI+Supabase+LangChain开发AI应用 - 掘金-2023-09-12.md": [
      {
        "id": "7t7aon7d1",
        "text": "0.23.1\" \"fastapi[all]",
        "tags": [],
        "line": 227,
        "startOffset": 5514,
        "endOffset": 5539,
        "filePath": "Sources/CuboxSync/【代码实践】使用FastAPI+Supabase+LangChain开发AI应用 - 掘金-2023-09-12.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615154037,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/【07-08 更新 Refresh Token】【新手教程】oaifree 喂饭级 Step-by-step 一步步打开潘多拉 - 资源荟萃 - LINUX DO-2024-11-05.md": [
      {
        "id": "faev1vn6g",
        "text": " env.API_KEY) {\r\n          console.error('Invalid API Key');\r\n          return new Response('Invalid API Key', { status: 401 });\r\n        }\r\n\r\n        const tokens = env.ACCESS_TOKEN.split(',');\r\n        let retryCount = 0;\r\n\r\n        while (retryCount < tokens.length) {\r\n          const headers = new Headers(request.headers);\r\n          let authorizationKey = `Bearer ${tokens[retryCount]}`;\r\n          if (env.CHATGPT_ACCOUNT_ID) {\r\n            authorizationKey += `,${env.CHATGPT_ACCOUNT_ID}`;\r\n          }\r\n          headers.set('Authorization', authorizationKey);\r\n\r\n          for (const key of headers.keys()) {\r\n            if (key.toLowerCase().startsWith('x-') && key !",
        "tags": [],
        "line": 289,
        "startOffset": 12490,
        "endOffset": 13174,
        "filePath": "Sources/CuboxSync/【07-08 更新 Refresh Token】【新手教程】oaifree 喂饭级 Step-by-step 一步步打开潘多拉 - 资源荟萃 - LINUX DO-2024-11-05.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615153991,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/《黑神话：悟空》的10条新手指南-2024-08-20.md": [
      {
        "id": "4vhjt5unk",
        "text": "&mid=2650577624&idx=1&sn=da9deb73202e924cb300b69cd8dac0ad&chksm=bec99bbf89be12a927eeddd1c976d8cf12f4ffb3a940e469c919ba8393afa196d11097ad7e68&scene=21#wechat_redirect)\r\n\r\n[视频版：今日欢呼孙大圣丨《黑神话：悟空》机核体验视频版](http://mp.weixin.qq.com/s?__biz=MjM5OTAzMjg0MA",
        "tags": [],
        "line": 43,
        "startOffset": 1430,
        "endOffset": 1680,
        "filePath": "Sources/CuboxSync/《黑神话：悟空》的10条新手指南-2024-08-20.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615154237,
        "isNativeComment": false
      },
      {
        "id": "yd03ph8se",
        "text": "&mid=2650577789&idx=1&sn=a7588494647abb76e1abb545199a4a7c&chksm=bec99a1a89be130c7f955e784e5ba95a4c142874686692d3673a7192f500ced1c8550e39f489&scene=21#wechat_redirect)\r\n\r\n倒计时已然开启，我们还有什么想说的？其实几乎所有能说的，我们都在这三种内容当中、倾尽全力想要带给大家了。\r\n\r\n我们的体验和反馈，很多玩家已然心中有数。但也不得不承认，在这些体验当中，一些用词也确有门槛，比如视频版提及\"类似盾斧GP\"，就会有弹幕问------什么是盾斧，什么是GP？\r\n\r\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FK4RTahQxUE8LMEuewxicEPwhXW4kWaSvZarSoIiaib0qv13TEDGlTUicuXnwlMCqsVpZ4sMHwlhkBwAlHC8XMWHTDg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg%26tp%3Dwebp%26wxfrom%3D5%26wx_lazy%3D1%26wx_co%3D1&valid=false)\r\n\r\n\r\n实际上，在\"万字长文\"当中，我们已经在「第9部分」特别提及了新手体验，本篇也只是单独拎出来，叙述难免重复；但很多时候， \"新手\"最不怕的就是重复，因为这部分朋友，可能会有最多的疑问，而他们，和核心玩家相比，同样重要。\r\n\r\n**\"玩游戏的都是朋友。\"** 游戏水平在机核处于最菜一档的本文作者，又念了一遍这句曾经的slogan。\r\n\r\n*\\*一些问题可能看上去有些基础，但仍然请随意转发给有需要的朋友。*\r\n\r\n\r\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FK4RTahQxUE91c7CWVMicicXE6cVuCovCZxDyAxMyZPxdibd4BFy5JBXFibL5SAoVy7ZBgFkZMDj6hSQ8b0kNaXhHeQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg%26tp%3Dwebp%26wxfrom%3D5%26wx_lazy%3D1%26wx_co%3D1&valid=false)\r\n\r\n**《黑神话：悟空》是什么类型的游戏**\r\n\r\n\r\n《黑神话：悟空》是一款单机买断游戏，\"单机\"意味着它的游玩本身没有联网要素；\"买断\"意味着购买之后，你可以将它视为\"属于你\"的商品。\r\n\r\n《黑神话：悟空》目前登陆了PlayStation 5、Steam、Epic Game Store、WeGame平台，其中第一个属于主机游戏平台，需要你购买一台PS5主机，连接电视或者显示器使用；后三者属于PC平台，需要你有一台能够运行游戏的设备。\r\n\r\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_jpg%2FK4RTahQxUE8LMEuewxicEPwhXW4kWaSvZWKk1icicoqVYQKgE99eiaUB74sSOLAxWxWicoDlt965f5qkSns3Bzibj2Eg%2F640%3Fwx_fmt%3Djpeg%26from%3Dappmsg%26tp%3Dwebp%26wxfrom%3D5%26wx_lazy%3D1%26wx_co%3D1&valid=false)\r\n\r\n\r\n根据主创的采访的明确说法，《黑神话：悟空》属于动作冒险类游戏（ACT，Action Game）。实际上，游戏分类并不是一门非常严谨的学问，也无法严谨。很多时候，考虑到明确的角色扮演、尤其是角色成长内容，我们也会把《黑神话：悟空》归类到ARPG（ACTRPG）游戏，RPG的意思是Role-playing game。\r\n\r\n无论你准备在哪个平台游玩，你都需要注册一个账号，以人数较多的Steam为例：直接百度Steam，可能不一定指向正确的网站，你可以去哔哩哔哩查看相关教程。\r\n\r\n\r\n**我有一台电脑，我能玩《黑神话：悟空》吗？**\r\n\r\n\r\n不一定。\r\n\r\n目前，游戏科学已经有了比较好解决这个问题的方案，在Steam下载《黑神话：悟空 性能测试工具》，打开后，按照默认设置，运行一段数分钟的实机演示，即可。\r\n\r\n通常来说，30帧是一个可玩的水平，60帧是一个可以流畅游玩的水平。值得一提的是，作为一款AAA级游戏，《黑神话：悟空》对配置的要求不低。购置全新主机，在主流分辨率下畅玩，可能会花费上千元到上万元不等的购机费用。\r\n\r\n\r\n准备就绪后，你也需要注意一些事项，比如，你的硬盘有没有足够的空间？你的手柄或者键鼠好用吗？\r\n\r\n\r\n**我用键盘玩还是用手柄玩？**\r\n\r\n\r\n如果你实在不知道，你可以在进入游戏后多试试两种的不同手感。\r\n\r\n以我浅薄的经验，这一类的游戏用手柄的操作更爽快一点、更符合逻辑一些，所以更推荐纯新手使用手柄游玩，左摇杆控制行动，右摇杆控制视角，右侧的按键负责动作，左侧的按键辅助，是很多大型单机游戏的基础操作。\r\n\r\n\r\n当然，如果你有FPS（第一人称射击）或者MMO（大型多人在线）游戏的基础，习惯用WASD走路，键盘其他按键和鼠标施法，自然也可以选择鼠标游玩，但比较注意的是，《黑神话：悟空》仍然是一款偏向近战的游戏。\r\n\r\n如果你心理素质不太好，操作时非常容易出现特别用力的情况（尤其是手柄），这会让你手指头变得有点疼，这些都是正常现象。\r\n\r\n不要问我怎么知道的。\r\n\r\n\r\n**《黑神话：悟空》难度如何？**\r\n\r\n\r\n《黑神话：悟空》对新手玩家有不小的难度。\r\n\r\n当然，游戏科学绝非\"故意为难\"，而是作为一种成熟的、最受玩家和各类游戏奖项亲睐的成熟品类，它有一定的设计范式------难度早就已经和体验融为一体，举例而言，如果每个BOSS都能轻易击杀，那它很难成为一个优秀的动作冒险游戏。\r\n\r\n\r\n某种意义上，这种\"不妥协\"，恰恰是游戏科学的认真。\r\n\r\n对老手而言，《黑神话：悟空》难度适中，可能不同的人会有一个上下的摇摆，考虑到丰富的技能组，总的来说，它不会有同样出圈的\"魂系游戏\"考验玩家难。例如，本文作者在第二章已经出现了中等程度的\"卡关\"，而中等水平可能出现在第三章。\r\n\r\n对新手而言，《黑神话：悟空》的难度主要体现在\"没有难度选项\"------并且，在ACT（动作游戏）和RPG（角色扮演游戏）两大关键词的光谱中间，《黑神话：悟空》更靠近ACT一些。\r\n\r\n\r\n这意味着，你无法通过\"角色成长+数值碾压\"来\"逃课\"，根据提前游玩的体验，打过BOSS的难度，在游戏前期和后期不会有特别大的反差------是的，它很适合成为你的第一款ARPG。\r\n\r\n\r\n**那它会不会\"劝退\"我？**\r\n\r\n\r\n\"劝退\"是一个相对的名词。相信我，哪怕你是没有接触过的新手，如果你想要体会游戏的乐趣、进入到游戏的世界，你其实很难被\"劝退\"。\r\n\r\n但另一方面，\"劝退\"又是一件常有的事情。尤其是，在一名玩家刚刚开始尝试基本操作，就会被一个怪物\"虐\"，反复死亡复活的时候，灰心是很正常的反应。\r\n\r\n\r\n我自己曾经在《怪物猎人：世界》被蛮颚龙\"劝退\"过，在《只狼》被蝴蝶夫人劝退过，在《艾尔登法环》被大树守卫劝退过，并因此退缩了一段时间（是的我就是这么菜）。但最终，我都在一个合适的时间\"卷土重来\"，当我战胜他们的时候，喜悦也都是爆发式的。\r\n\r\n不过相比之下，《黑神话：悟空》的劝退体验，可能更接近你或许听说过的《只狼》------没有联网要素，你需要战胜的，也包括自己的\"心魔\"。\r\n\r\n这或许也很契合《西游记》的主题，每一次涉险过关，都值得记载。\r\n\r\n\r\n**以我的水平很早就卡关了怎么办？**\r\n\r\n\r\n别怕，这个游戏有不少的方法让你\"成长\"。比如，构筑你能力的点数，它的\"洗点\"（重新分配成长点数）是完全没有代价的，一种不行，就换一种。详情可以看我们[\"万字报告\"](http://mp.weixin.qq.com/s?__biz=MjM5OTAzMjg0MA",
        "tags": [],
        "line": 47,
        "startOffset": 1926,
        "endOffset": 5476,
        "filePath": "Sources/CuboxSync/《黑神话：悟空》的10条新手指南-2024-08-20.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615154733,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/prometheus operator_51CTO博客_prometheus operator部署-2023-10-13.md": [
      {
        "id": "7rhqbguly",
        "text": " 0) > (count(up{job=\"etcd\"}) / 2 - 1)\r\n      for: 3m\r\n      labels:\r\n        severity: critical\r\n   \r\n   \r\n     \r\n       \r\n    \r\n    \r\n      \r\n        \r\n* 1.\r\n\r\n    \r\n    \r\n      \r\n        \r\n* 2.\r\n\r\n    \r\n    \r\n      \r\n        \r\n* 3.\r\n\r\n    \r\n    \r\n      \r\n        \r\n* 4.\r\n\r\n    \r\n    \r\n      \r\n        \r\n* 5.\r\n\r\n    \r\n    \r\n      \r\n        \r\n* 6.\r\n\r\n    \r\n    \r\n      \r\n        \r\n* 7.\r\n\r\n    \r\n    \r\n      \r\n        \r\n* 8.\r\n\r\n    \r\n    \r\n      \r\n        \r\n* 9.\r\n\r\n    \r\n    \r\n      \r\n        \r\n* 10.\r\n\r\n    \r\n    \r\n      \r\n        \r\n* 11.\r\n\r\n    \r\n    \r\n      \r\n        \r\n* 12.\r\n\r\n    \r\n    \r\n      \r\n        \r\n* 13.\r\n\r\n    \r\n    \r\n      \r\n        \r\n* 14.\r\n\r\n    \r\n    \r\n      \r\n        \r\n* 15.\r\n\r\n    \r\n    \r\n      \r\n        \r\n* 16.\r\n\r\n    \r\n    \r\n      \r\n        \r\n* 17.\r\n\r\n    \r\n    \r\n      \r\n        \r\n* 18.\r\n\r\n    \r\n    \r\n      \r\n        \r\n* 19.\r\n\r\n    \r\n    \r\n      \r\n        \r\n* 20.\r\n\r\n    \r\n    \r\n      \r\n        \r\n* 21.\r\n\r\n   \r\n   \r\n     \r\n       \r\n```\r\n\r\n　　注意 label 标签一定至少要有 prometheus=k8s 和 role=alert-rules，创建完成后，隔一会儿再去容器中查看下 rules 文件夹：\r\n\r\n```\r\nkubectl exec -it prometheus-k8s-0 /bin/sh -n monitoring\r\nDefaulting container name to prometheus.\r\nUse 'kubectl describe pod/prometheus-k8s-0 -n monitoring' to see all of the containers in this pod.\r\n/prometheus $ ls /etc/prometheus/rules/prometheus-k8s-rulefiles-0/\r\nmonitoring-etcd-rules.yaml            monitoring-prometheus-k8s-rules.yaml\r\n   \r\n   \r\n     \r\n       \r\n    \r\n    \r\n      \r\n        \r\n* 1.\r\n\r\n    \r\n    \r\n      \r\n        \r\n* 2.\r\n\r\n    \r\n    \r\n      \r\n        \r\n* 3.\r\n\r\n    \r\n    \r\n      \r\n        \r\n* 4.\r\n\r\n    \r\n    \r\n      \r\n        \r\n* 5.\r\n\r\n   \r\n   \r\n     \r\n       \r\n```\r\n\r\n　　可以看到我们创建的 rule 文件已经被注入到了对应的 rulefiles 文件夹下面了，证明我们上面的设想是正确的。然后再去 Prometheus Dashboard 的 Alert 页面下面就可以查看到上面我们新建的报警规则了：\r\n\r\n![prometheus operator_应用程序_14](https://image.cubox.pro/cardImg/2023101313520149661/62265.jpg?imageMogr2/quality/90/format/gif/ignore-error/1)\r\n\r\n### 5.2 配置报警\r\n\r\n　　我们知道了如何去添加一个报警规则配置项，但是这些报警信息用怎样的方式去发送呢？前面的课程中我们知道我们可以通过 AlertManager 的配置文件去配置各种报警接收器，现在我们是通过 Operator 提供的 alertmanager 资源对象创建的组件，应该怎样去修改配置呢？\r\n\r\n　　首先我们将 alertmanager-main 这个 Service 改为 NodePort 类型的 Service，修改完成后我们可以在页面上的 status 路径下面查看 AlertManager 的配置信息:\r\n\r\n![prometheus operator_应用程序_15](https://image.cubox.pro/cardImg/2023101313520186666/46102.jpg?imageMogr2/quality/90/format/gif/ignore-error/1)\r\n\r\n　　这些配置信息实际上是来自于我们之前在prometheus-operator/contrib/kube-prometheus/manifests目录下面创建的 alertmanager-secret.yaml 文件：\r\n\r\n```\r\napiVersion: v1\r\ndata:\r\n  alertmanager.yaml: Imdsb2JhbCI6IAogICJyZXNvbHZlX3RpbWVvdXQiOiAiNW0iCiJyZWNlaXZlcnMiOiAKLSAibmFtZSI6ICJudWxsIgoicm91dGUiOiAKICAiZ3JvdXBfYnkiOiAKICAtICJqb2IiCiAgImdyb3VwX2ludGVydmFsIjogIjVtIgogICJncm91cF93YWl0IjogIjMwcyIKICAicmVjZWl2ZXIiOiAibnVsbCIKICAicmVwZWF0X2ludGVydmFsIjogIjEyaCIKICAicm91dGVzIjogCiAgLSAibWF0Y2giOiAKICAgICAgImFsZXJ0bmFtZSI6ICJEZWFkTWFuc1N3aXRjaCIKICAgICJyZWNlaXZlciI6ICJudWxsIg",
        "tags": [],
        "line": 3600,
        "startOffset": 50339,
        "endOffset": 53221,
        "filePath": "Sources/CuboxSync/prometheus operator_51CTO博客_prometheus operator部署-2023-10-13.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141640,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/mitmproxy教程(转载) - 知乎-2024-04-26.md": [
      {
        "id": "w5v6ptgn5",
        "text": " \"www.google.com\":\r\n            # 返回一个非 2xx 响应断开连接\r\n            flow.response = http.HTTPResponse.make(404)\r\n\r\n为了实现第四个需求，我们需要将代码整理一下，即易于管理也易于查看。\r\n\r\n创建一个 `joker.py` 文件，内容为：\r\n\r\n    import mitmproxy.http\r\n    from mitmproxy import ctx, http\r\n\r\n\r\n    class Joker:\r\n        def request(self, flow: mitmproxy.http.HTTPFlow):\r\n            if flow.request.host != \"www.baidu.com\" or not flow.request.path.startswith(\"/s\"):\r\n                return\r\n\r\n            if \"wd\" not in flow.request.query.keys():\r\n                ctx.log.warn(\"can not get search word from %s\" % flow.request.pretty_url)\r\n                return\r\n\r\n            ctx.log.info(\"catch search word: %s\" % flow.request.query.get(\"wd\"))\r\n            flow.request.query.set_all(\"wd\", [\"360搜索\"])\r\n\r\n        def response(self, flow: mitmproxy.http.HTTPFlow):\r\n            if flow.request.host != \"www.so.com\":\r\n                return\r\n\r\n            text = flow.response.get_text()\r\n            text = text.replace(\"搜索\", \"请使用谷歌\")\r\n            flow.response.set_text(text)\r\n\r\n        def http_connect(self, flow: mitmproxy.http.HTTPFlow):\r\n            if flow.request.host ",
        "tags": [],
        "line": 351,
        "startOffset": 12679,
        "endOffset": 13809,
        "filePath": "Sources/CuboxSync/mitmproxy教程(转载) - 知乎-2024-04-26.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141828,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/go - gRPC服务发现&负载均衡 - grpc - SegmentFault 思否-2024-08-02.md": [
      {
        "id": "otztnlg0o",
        "text": " \"\" {\r\n        return nil, errors.New(\"grpclb: no service name provided\")\r\n    }\r\n\r\n    // generate etcd client\r\n    client, err := etcd3.New(etcd3.Config{\r\n        Endpoints: strings.Split(target, \",\"),\r\n    })\r\n    if err != nil {\r\n        return nil, fmt.Errorf(\"grpclb: creat etcd3 client failed: %s\", err.Error())\r\n    }\r\n\r\n    // Return watcher\r\n    return &watcher{re: re, client: *client}, nil\r\n}\r\n```\r\n\r\n2）服务发现实现：watcher.go\r\n\r\n```\r\npackage etcdv3\r\n\r\nimport (\r\n    \"fmt\"\r\n    etcd3 \"github.com/coreos/etcd/clientv3\"\r\n    \"golang.org/x/net/context\"\r\n    \"google.golang.org/grpc/naming\"\r\n    \"github.com/coreos/etcd/mvcc/mvccpb\"\r\n)\r\n\r\n// watcher is the implementaion of grpc.naming.Watcher\r\ntype watcher struct {\r\n    re            *resolver // re: Etcd Resolver\r\n    client        etcd3.Client\r\n    isInitialized bool\r\n}\r\n\r\n// Close do nothing\r\nfunc (w *watcher) Close() {\r\n}\r\n\r\n// Next to return the updates\r\nfunc (w *watcher) Next() ([]*naming.Update, error) {\r\n    // prefix is the etcd prefix/value to watch\r\n    prefix := fmt.Sprintf(\"/%s/%s/\", Prefix, w.re.serviceName)\r\n\r\n    // check if is initialized\r\n    if !w.isInitialized {\r\n        // query addresses from etcd\r\n        resp, err := w.client.Get(context.Background(), prefix, etcd3.WithPrefix())\r\n        w.isInitialized = true\r\n        if err ",
        "tags": [],
        "line": 94,
        "startOffset": 3492,
        "endOffset": 4811,
        "filePath": "Sources/CuboxSync/go - gRPC服务发现&负载均衡 - grpc - SegmentFault 思否-2024-08-02.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141245,
        "isNativeComment": false
      },
      {
        "id": "2yj5rsn22",
        "text": " nil || resp.Kvs ",
        "tags": [],
        "line": 176,
        "startOffset": 5846,
        "endOffset": 5867,
        "filePath": "Sources/CuboxSync/go - gRPC服务发现&负载均衡 - grpc - SegmentFault 思否-2024-08-02.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141599,
        "isNativeComment": false
      },
      {
        "id": "js59e9s0m",
        "text": " rpctypes.ErrKeyNotFound {\r\n                    if _, err := client.Put(context.TODO(), serviceKey, serviceValue, etcd3.WithLease(resp.ID)); err != nil {\r\n                        log.Printf(\"grpclb: set service '%s' with ttl to etcd3 failed: %s\", name, err.Error())\r\n                    }\r\n                } else {\r\n                    log.Printf(\"grpclb: service '%s' connect to etcd3 failed: %s\", name, err.Error())\r\n                }\r\n            } else {\r\n                // refresh set to true for not notifying the watcher\r\n                if _, err := client.Put(context.Background(), serviceKey, serviceValue, etcd3.WithLease(resp.ID)); err != nil {\r\n                    log.Printf(\"grpclb: refresh service '%s' with ttl to etcd3 failed: %s\", name, err.Error())\r\n                }\r\n            }\r\n            select {\r\n            case <-stopSignal:\r\n                return\r\n            case <-ticker.C:\r\n            }\r\n        }\r\n    }()\r\n\r\n    return nil\r\n}\r\n\r\n// UnRegister delete registered service from etcd\r\nfunc UnRegister() error {\r\n    stopSignal <- true\r\n    stopSignal = make(chan bool, 1) // just a hack to avoid multi UnRegister deadlock\r\n    var err error;\r\n    if _, err := client.Delete(context.Background(), serviceKey); err != nil {\r\n        log.Printf(\"grpclb: deregister '%s' failed: %s\", serviceKey, err.Error())\r\n    } else {\r\n        log.Printf(\"grpclb: deregister '%s' ok.\", serviceKey)\r\n    }\r\n    return err\r\n}\r\n```\r\n\r\n4）接口描述文件：helloworld.proto\r\n\r\n```\r\nsyntax = \"proto3\";\r\n\r\noption java_multiple_files = true;\r\noption java_package = \"com.midea.jr.test.grpc\";\r\noption java_outer_classname = \"HelloWorldProto\";\r\noption objc_class_prefix = \"HLW\";\r\n\r\npackage helloworld;\r\n\r\n// The greeting service definition.\r\nservice Greeter {\r\n    //   Sends a greeting\r\n    rpc SayHello (HelloRequest) returns (HelloReply) {\r\n    }\r\n}\r\n\r\n// The request message containing the user's name.\r\nmessage HelloRequest {\r\n    string name = 1;\r\n}\r\n\r\n// The response message containing the greetings\r\nmessage HelloReply {\r\n    string message = 1;\r\n}\r\n```\r\n\r\n5）实现服务端接口：helloworldserver.go\r\n\r\n```\r\npackage main\r\n\r\nimport (\r\n    \"flag\"\r\n    \"fmt\"\r\n    \"log\"\r\n    \"net\"\r\n    \"os\"\r\n    \"os/signal\"\r\n    \"syscall\"\r\n    \"time\"\r\n\r\n    \"golang.org/x/net/context\"\r\n    \"google.golang.org/grpc\"\r\n\r\n    grpclb \"com.midea/jr/grpclb/naming/etcd/v3\"\r\n    \"com.midea/jr/grpclb/example/pb\"\r\n)\r\n\r\nvar (\r\n    serv = flag.String(\"service\", \"hello_service\", \"service name\")\r\n    port = flag.Int(\"port\", 50001, \"listening port\")\r\n    reg = flag.String(\"reg\", \"http://127.0.0.1:2379\", \"register etcd address\")\r\n)\r\n\r\nfunc main() {\r\n    flag.Parse()\r\n\r\n    lis, err := net.Listen(\"tcp\", fmt.Sprintf(\"0.0.0.0:%d\", *port))\r\n    if err != nil {\r\n        panic(err)\r\n    }\r\n\r\n    err = grpclb.Register(*serv, \"127.0.0.1\", *port, *reg, time.Second*10, 15)\r\n    if err != nil {\r\n        panic(err)\r\n    }\r\n\r\n    ch := make(chan os.Signal, 1)\r\n    signal.Notify(ch, syscall.SIGTERM, syscall.SIGINT, syscall.SIGKILL, syscall.SIGHUP, syscall.SIGQUIT)\r\n    go func() {\r\n        s := <-ch\r\n        log.Printf(\"receive signal '%v'\", s)\r\n        grpclb.UnRegister()\r\n        os.Exit(1)\r\n    }()\r\n\r\n    log.Printf(\"starting hello service at %d\", *port)\r\n    s := grpc.NewServer()\r\n    pb.RegisterGreeterServer(s, &server{})\r\n    s.Serve(lis)\r\n}\r\n\r\n// server is used to implement helloworld.GreeterServer.\r\ntype server struct{}\r\n\r\n// SayHello implements helloworld.GreeterServer\r\nfunc (s *server) SayHello(ctx context.Context, in *pb.HelloRequest) (*pb.HelloReply, error) {\r\n    fmt.Printf(\"%v: Receive is %s\\n\", time.Now(), in.Name)\r\n    return &pb.HelloReply{Message: \"Hello \" + in.Name}, nil\r\n}\r\n```\r\n\r\n6）实现客户端接口：helloworldclient.go\r\n\r\n```\r\npackage main\r\n\r\nimport (\r\n    \"flag\"\r\n    \"fmt\"\r\n    \"time\"\r\n\r\n    grpclb \"com.midea/jr/grpclb/naming/etcd/v3\"\r\n    \"com.midea/jr/grpclb/example/pb\"\r\n    \"golang.org/x/net/context\"\r\n    \"google.golang.org/grpc\"\r\n    \"strconv\"\r\n)\r\n\r\nvar (\r\n    serv = flag.String(\"service\", \"hello_service\", \"service name\")\r\n    reg = flag.String(\"reg\", \"http://127.0.0.1:2379\", \"register etcd address\")\r\n)\r\n\r\nfunc main() {\r\n    flag.Parse()\r\n    r := grpclb.NewResolver(*serv)\r\n    b := grpc.RoundRobin(r)\r\n\r\n    ctx, _ := context.WithTimeout(context.Background(), 10*time.Second)\r\n    conn, err := grpc.DialContext(ctx, *reg, grpc.WithInsecure(), grpc.WithBalancer(b))\r\n    if err != nil {\r\n        panic(err)\r\n    }\r\n\r\n    ticker := time.NewTicker(1 * time.Second)\r\n    for t := range ticker.C {\r\n        client := pb.NewGreeterClient(conn)\r\n        resp, err := client.SayHello(context.Background(), &pb.HelloRequest{Name: \"world \" + strconv.Itoa(t.Second())})\r\n        if err ",
        "tags": [],
        "line": 236,
        "startOffset": 7419,
        "endOffset": 12097,
        "filePath": "Sources/CuboxSync/go - gRPC服务发现&负载均衡 - grpc - SegmentFault 思否-2024-08-02.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141172,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/Windows 软件商店平替——Winget - CG艺术实验室-2024-08-02.md": [
      {
        "id": "bxmw66deq",
        "text": "a in (software_list.txt) do (\r\n        echo Installing software: ",
        "tags": [],
        "line": 129,
        "startOffset": 4776,
        "endOffset": 4845,
        "filePath": "Sources/CuboxSync/Windows 软件商店平替——Winget - CG艺术实验室-2024-08-02.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "a in (software_list.txt) do (\r\n        echo Installing software: "
        ],
        "createdAt": 1748615142393,
        "isNativeComment": true
      }
    ],
    "Sources/CuboxSync/Sequoia 红杉资本：AI 的第二篇章-2023-12-07.md": [
      {
        "id": "tzjjt4mis",
        "text": "&mid=2455852146&idx=1&sn=12ebb9226f0c8afb5cb605f08ba49ef0&chksm=8044646eb733ed780a2aa03f76eb14232d27329a3cfb6b89e4a404ded79e039298c7e4938bfc&scene=21\ntags: []\n---\n# Sequoia 红杉资本：AI 的第二篇章\n\n生成式人工智能从技术工具演变为实际应用和价值，以及生成式人工智能应用日益多模态化的特性\n\n[Read in Cubox](https://cubox.pro/my/card?id=7132372159778785277)  \n[Read Original](https://mp.weixin.qq.com/s?__biz=MzIyMDA3MjMwNw",
        "tags": [],
        "line": 3,
        "startOffset": 142,
        "endOffset": 510,
        "filePath": "Sources/CuboxSync/Sequoia 红杉资本：AI 的第二篇章-2023-12-07.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141562,
        "isNativeComment": false
      },
      {
        "id": "8wv9dd2r2",
        "text": "&mid=2455850683&idx=1&sn=faf180c251a383821fe092103007ce67&chksm=80447ea7b733f7b13073cac1423de8a2929d4cf88f7c43fe9be329aa6a25d2862b538c772c59&scene=21#wechat_redirect)，AI 伴侣 [Character AI](http://mp.weixin.qq.com/s?__biz=MzIyMDA3MjMwNw",
        "tags": [],
        "line": 24,
        "startOffset": 1105,
        "endOffset": 1343,
        "filePath": "Sources/CuboxSync/Sequoia 红杉资本：AI 的第二篇章-2023-12-07.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141525,
        "isNativeComment": false
      },
      {
        "id": "x6iso1zv6",
        "text": "&mid=2455850874&idx=1&sn=b421dc95b4e60e62c1bf60c33d1fbd81&chksm=80447f66b733f6701fb39b38481d021ca9a90538d0df49b94bb8ca7c1a252b4ddb1416527ac6&scene=21#wechat_redirect)。\n\n其中[法律领域的 AI](http://mp.weixin.qq.com/s?__biz=MzIyMDA3MjMwNw",
        "tags": [],
        "line": 24,
        "startOffset": 1584,
        "endOffset": 1816,
        "filePath": "Sources/CuboxSync/Sequoia 红杉资本：AI 的第二篇章-2023-12-07.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142004,
        "isNativeComment": false
      },
      {
        "id": "0joijbdv2",
        "text": "&mid=2455850625&idx=1&sn=44761a181dbe9bc63f05c7150c799b91&chksm=80447e9db733f78b91684926a36aca266310d242fbcc35b66d44398908e634033ee568bf1b72&scene=21#wechat_redirect)，它被 Benchmark 合伙人 [Sarah Tavel 认为](http://mp.weixin.qq.com/s?__biz=MzIyMDA3MjMwNw",
        "tags": [],
        "line": 26,
        "startOffset": 2108,
        "endOffset": 2359,
        "filePath": "Sources/CuboxSync/Sequoia 红杉资本：AI 的第二篇章-2023-12-07.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141528,
        "isNativeComment": false
      },
      {
        "id": "178ckh65u",
        "text": "&mid=2455850893&idx=2&sn=950df497f28117af77396893e4d22567&chksm=80447f91b733f687b706a28be2035aeda04fa38ec192a09d69c4f6e1ebfa5ed0f2083b90c70a&scene=21#wechat_redirect)\n\n\n[![图片](https://image.cubox.pro/cardImg/2023121513524855013/53572.jpg?imageMogr2/quality/90/ignore-error/1)\nAI 正在重塑法律行业](https://mp.weixin.qq.com/s?__biz=MzIyMDA3MjMwNw",
        "tags": [],
        "line": 146,
        "startOffset": 7478,
        "endOffset": 7818,
        "filePath": "Sources/CuboxSync/Sequoia 红杉资本：AI 的第二篇章-2023-12-07.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141898,
        "isNativeComment": false
      },
      {
        "id": "ys10x7qxc",
        "text": "&mid=2455851826&idx=1&sn=7c15434cb3583316520cb391201e7427&chksm=8044632eb733ea3873ae92c6ecef695762e024f6c58ecc60d7da1d28c44d30dc38db00202c59&scene=21#wechat_redirect)\n\n\n[![图片](https://image.cubox.pro/cardImg/2023121513524959150/44465.jpg?imageMogr2/quality/90/ignore-error/1)\n1.5万家律所排队使用，法律AI Harvey又拿了红杉领投的2100万美金](https://mp.weixin.qq.com/s?__biz=MzIyMDA3MjMwNw",
        "tags": [],
        "line": 154,
        "startOffset": 8173,
        "endOffset": 8540,
        "filePath": "Sources/CuboxSync/Sequoia 红杉资本：AI 的第二篇章-2023-12-07.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141593,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/SQLAlchemy 2.0 教程 - Yifei's Notes-2024-01-16.md": [
      {
        "id": "5h37uzoco",
        "text": "` 构成的表达式，好处是写代码的时候，拼写错误就会被检查到\r\n    stmt = select(User).where(User.name ",
        "tags": [],
        "line": 234,
        "startOffset": 7730,
        "endOffset": 7805,
        "filePath": "Sources/CuboxSync/SQLAlchemy 2.0 教程 - Yifei's Notes-2024-01-16.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142187,
        "isNativeComment": false
      },
      {
        "id": "eyv9mjikx",
        "text": " \"john\").values(name=\"John\").execution_options(synchronize_session=\"fetch\")\r\n    session.execute(stmt)\r\n\r\n    # 或者直接对属性赋值\r\n    user.name = \"John\"\r\n    session.commit()\r\n\r\n    # 这里有一个可能引入 race condition（竞态条件）的地方\r\n    # 错误！如果两个进程同时更新这个值，可能导致只更新了一个值。\r\n    # 两者都赋值为自身认为的正确值 2，实际正确值为 1 + 1 + 1 = 3\r\n    # 对应 SQL：Update users set visit_count = 2 where user.id = 1\r\n    user.visit_count += 1\r\n    # 正确做法：注意大写的 U，也就是使用了模型的属性，生成的 SQL 是在 SQL 服务端 +1\r\n    # 对应 SQL: Update users set visit_count = visit_count + 1 where user.id = 1\r\n    user.visit_count = User.visit_count + 1\r\n\r\n    # 添加对象直接使用 session.add 方法\r\n    session.add(user)\r\n    # 或者 add_all\r\n    session.add_all([user1, user2, group1])\r\n\r\n    # 如果要获取插入后的 ID，当然也可以 commit 之后再读\r\n    session.flush()   # flush 并不是 commit，并没有提交事务，应该是可重复读，和数据库的隔离级别有关。\r\n    print(user.id)\r\n\r\n    # 删除使用 session.delete\r\n    session.delete(user)\r\n\r\n### 加载关联模型\r\n\r\n如果我们在读取一个 N 个记录的列表之后，再去数据库中一一读取每个项目的具体值，就会产生 N+1 个 查询。这就是数据库中最常犯的错误：N+1 问题。\r\n\r\n默认情况下，查询中不会加载外键关联的模型，可以使用 selectinload 选项来加载外键，从而避免 N+1 问题。`select(Model).options(selectinload(Model.field))`\r\n\r\n    - session.execute(select(User)).scalars().all()  # 没有加载 parent 外键\r\n    + session.execute(select(User).options(selectinload(User.groups))).scalars().all()\r\n\r\nSelectinload 的原理在于使用了 `select in` 子查询，这也是名字的又来。除了 selectinload 外， 还可以使用传统的 joinedload，它的原理就是最普通的 join table\r\n\r\n    # 使用 joinedload 加载外键，注意需要使用 unique 方法，这是 2.0 中规定的。\r\n    session.execute(select(User).options(joinedload(User.groups))).unique().scalars().all()\r\n\r\n在 2.0 中，更推荐使用 selectinload 而不是 joinedload，一般情况下，selectinload 都要好， 而且不用使用 unique.\r\n\r\n### 外键的写入\r\n\r\nSQLAlchemy 中，直接像处理数组一样处理外键就好了，这点非常方便。\r\n\r\n    user.permissions.append(open_permission)  # 添加\r\n    user.permissions.remove(save_permission)  # 删除\r\n    # 清空所有外键\r\n    user.permissions.clear()\r\n    user.permissions = []\r\n\r\n### JSON 字段的特殊处理\r\n\r\n大多数的数据库现在都支持 JSON 字段了，在 SQLAlchemy 中我们也可以直接从字段读取 json 对象 或者写入 json 对象。但是，千万不要直接对这个 json 对象做 update 并期望写回数据库中，这是 不可靠的。一定要复制后读写，然后再赋值回去。\r\n\r\n    article = session.get(Article, 1)\r\n    tags = copy.copy(article.tags)\r\n    tags.append(\"iOS\")\r\n    article.tags = tags\r\n    session.commit()\r\n\r\n### 批量插入\r\n\r\n当需要插入大量数据的时候，如果依然采用逐个插入的方法，那么就会在和数据库的交互上浪费很多 时间，效率很低。MySQL 等大多数数据库都提供了 `insert ... values (...), (...) ...` 这种 批量插入的 API，在 SQLAlchemy 中也可以很好地利用这一点。\r\n\r\n    # 使用 session.bulk_save_objects(...) 直接插入多个对象\r\n\r\n    s = Session()\r\n    objects = [\r\n        User(name=\"u1\"),\r\n        User(name=\"u2\"),\r\n        User(name=\"u3\")\r\n    ]\r\n    s.bulk_save_objects(objects)\r\n    s.commit()\r\n\r\n    # 使用 bulk_insert_mappings 可以省去创建对象的开销，直接插入字典\r\n    users = [\r\n        {\"name\": \"u1\"},\r\n        {\"name\": \"u2\"},\r\n        {\"name\": \"u3\"},\r\n    ]\r\n    s.bulk_insert_mappings(User, users)\r\n    s.commit()\r\n\r\n    # 使用 bulk_update_mappings 可以批量更新对象，字典中的 id 会被用作 where 条件，\r\n    # 其他字段全部用于更新\r\n    session.bulk_update_mappings(User, users)\r\n\r\n## 从 1.X API 迁移到 2.0 API\r\n\r\n### query -\\> execute\r\n\r\n    - session.query(User).get(42)\r\n    + session.get(User, 42)\r\n\r\n    - session.query(User).all()\r\n    + session.execute(select(User)).scalars().all()\r\n\r\n    - session.query(User).filter_by(name=\"some_user\").one()\r\n    + session.execute(select(User).filter_by(name=\"some_user\")).scalar_one()\r\n\r\n    - session.query(User).from_statememt(text(\"select * from users\")).a..()\r\n    + session.execute(select(User).from_statement(text(\"selct * from users\"))).scalars().all()\r\n\r\n    - session.query(User).filter(User.name ",
        "tags": [],
        "line": 260,
        "startOffset": 8612,
        "endOffset": 12027,
        "filePath": "Sources/CuboxSync/SQLAlchemy 2.0 教程 - Yifei's Notes-2024-01-16.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142069,
        "isNativeComment": false
      },
      {
        "id": "yk257zix2",
        "text": " \"foo\").values(fullname=\"FooBar\").execute_options(synchronize_session=\"evaluate\"))\r\n\r\n### DeclarativeBase\r\n\r\n全面拥抱 Python 原生类型系统\r\n\r\n    - from sqlalchemy.orm import declarative_base\r\n    + from sqlalchemy.orm import DeclarativeBase\r\n\r\n    - Base = declarative_base()\r\n\r\n    + class Base(DeclarativeBase):\r\n    +     pass\r\n\r\n    - from sqlalchemy import Column\r\n    + from sqlalchemy.orm import mapped_column, MappedColumn\r\n\r\n    - id = Column(Integer, primary_key=True)\r\n    + id: Mapped[int] = mapped_column(Integer, primary_key=True)\r\n\r\n    -  fullname = Column(String)\r\n    + fullname: Mapped[Optional[str]]\r\n\r\n## Asyncio\r\n\r\nOne AsyncSession per task.\r\n\r\nThe AsyncSession object is a mutable, stateful object which represents a single, stateful database transaction in progress. Using concurrent tasks with asyncio, with APIs such as asyncio.gather() for example, should use a separate AsyncSession per individual task.\r\n\r\n    from sqlalchemy.ext.asyncio import create_async_engine, async_sessionmaker, AsyncSession\r\n\r\n    engine = create_async_engine(url, echo=True)\r\n    session = async_sessionmaker(engine)\r\n\r\n    # Creating objects\r\n    async with engine.begin() as conn:\r\n        await conn.run_sync(Base.metadata.create_all)\r\n\r\n    # inserting\r\n    async with session() as db:\r\n        db.add(...)\r\n        await db.commit()\r\n\r\n    # selecting\r\n    async with session() as db:\r\n        stmt = select(A)\r\n        row = await db.execute(stmt)\r\n        for obj in rows.scalars():\r\n            print(obj.id)\r\n\r\n    await engine.dispose()\r\n\r\n### sqlite\r\n\r\n需要使用异步的 sqlite 驱动，比如 aiosqlite\r\n\r\n    pip install aiosqlite\r\n    engine = create_async_engine('sqlite+aiosqlite:///./database.db')\r\n\r\n## imports\r\n\r\nSQLAlchemy 的导出类型主要分布在以下三个部分：\r\n\r\n    # SQL 相关的直接从根目录导入，注意 Column 和 Integer 也在这里\r\n    from sqlalchemy import text, insert, select, create_engine, Integer, String\r\n\r\n    # ORM 相关的从 orm 子包中导入\r\n    from sqlalchemy.orm import DeclarativeBase, Session, sessionmaker, MappedColumn, mapped_column\r\n\r\n    # 异常从 exc 中导入\r\n    from sqlalchemy.exc import IntegrityError, SQLAlchemyError\r\n\r\n## 反射------从数据库创建模型\r\n\r\nTODO\r\n\r\n## 在 FastAPI 中使用\r\n\r\nTODO\r\n\r\n## 多进程环境下的使用\r\n\r\n由于 Python 中 GIL 的原因，要利用多核处理器需要使用多进程。而多进程中，资源并不能共享， 对应到 SQLAlchemy，也就是连接池不能共享。\r\n\r\n我们需要手工解决这个问题。\r\n\r\n一般情况下，最好不要尝试在多个进程中共享同一个 Session。最好在每个进程初始化时创建 Session。\r\n\r\n## 仅在设定值时增加 where 条件\r\n\r\n在 URL 中，经常需要根据用户指定了哪些选项来返回对应的结果。\r\n\r\n    query = select(User)\r\n    if username is not None:\r\n        query = query.where(User.username ",
        "tags": [],
        "line": 369,
        "startOffset": 12150,
        "endOffset": 14626,
        "filePath": "Sources/CuboxSync/SQLAlchemy 2.0 教程 - Yifei's Notes-2024-01-16.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141607,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/Prompt：心情弹幕和小红书封面制作-2024-11-11.md": [
      {
        "id": "2hutuujhy",
        "text": "&mid=2247488294&idx=1&sn=ffcd1359430fb43341f7b4e2c1d85741&chksm=c11d5239f66adb2f7dbff691eb183f88dac2eb1d49b12fa8e3fe5f9bff1f77608ddcdc8638dc&scene=21#wechat_redirect)   \n\n\n[Prompt 制作方法：文字逻辑关系图](http://mp.weixin.qq.com/s?__biz=MzkxMTQ0ODE3Ng",
        "tags": [],
        "line": 216,
        "startOffset": 8384,
        "endOffset": 8628,
        "filePath": "Sources/CuboxSync/Prompt：心情弹幕和小红书封面制作-2024-11-11.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141694,
        "isNativeComment": false
      },
      {
        "id": "n6zylbpbi",
        "text": "&mid=2247488242&idx=1&sn=cfe2212800684d73eca510acd3242216&chksm=c11d53edf66adafb5ce6a63d9322dec58c29ac1bc0502c3981356ef9fc2c55981c21d7affb6b&scene=21#wechat_redirect)   \n\n\n[新手友好的 AI 学习指南](http://mp.weixin.qq.com/s?__biz=MzkxMTQ0ODE3Ng",
        "tags": [],
        "line": 222,
        "startOffset": 8869,
        "endOffset": 9107,
        "filePath": "Sources/CuboxSync/Prompt：心情弹幕和小红书封面制作-2024-11-11.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142179,
        "isNativeComment": false
      },
      {
        "id": "438lcrg5r",
        "text": "&mid=2247487693&idx=1&sn=8d2b3801005db4de5e7feeaea200513f&chksm=c11d51d2f66ad8c4c7cbf72187cd67d9a9a6fa45703c85b82654d79e8e987c013507485fabf3&scene=21#wechat_redirect)\n\n[把 AI 融入日常的 5 个 Prompt 制作思路](http://mp.weixin.qq.com/s?__biz=MzkxMTQ0ODE3Ng",
        "tags": [],
        "line": 227,
        "startOffset": 9336,
        "endOffset": 9583,
        "filePath": "Sources/CuboxSync/Prompt：心情弹幕和小红书封面制作-2024-11-11.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141646,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/Perplexity：用答案引擎挑战Google - 万字长文-2024-02-04.md": [
      {
        "id": "7usloh45g",
        "text": "&mid=2451423296&idx=1&sn=0abcbc839d6d015187ae54b2356460aa&chksm=b121927086561b66223f1b9af34c0707bbb217303bf9fbe7a7b9306bc3c164c25466b2338a85&scene=21\ntags: []\n---\r\n\r\n# Perplexity：用答案引擎挑战Google | 万字长文\r\n\r\n从Yahoo到Google再到Perplexity！Perplexity创始人Aravind喊出了挑战Google的口号\r\n\r\n[Read in Cubox](https://cubox.pro/my/card?id=7153719390507109155)  \r\n[Read Original](https://mp.weixin.qq.com/s?__biz=MjM5ODU1MzQzOQ",
        "tags": [],
        "line": 3,
        "startOffset": 143,
        "endOffset": 546,
        "filePath": "Sources/CuboxSync/Perplexity：用答案引擎挑战Google - 万字长文-2024-02-04.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141402,
        "isNativeComment": false
      },
      {
        "id": "22gwhdkrx",
        "text": "&mid=2451422850&idx=1&sn=74b5ba5def0b27a0e164c599ed73fc87&chksm=b121ecb2865665a45cb811cd12522ef8ecf07fdcc29ed08e11235295671f15113ca97b9849e9&scene=21#wechat_redirect)里，Super描述了对于某一方向长期投入带来的产品突破受益点，这一点在Aravind身上也有反应\\~\r\n\r\n这一章我们来进一步理解\\~先看一下别人整理好的概要：\r\n>\r\n> CEO Aravind Srinivas 来自印度，博士期间才移民来到美国。Aravind 是 UCB 的 CS Phd，主攻方向是在计算机视觉和强化学习中融入 Transformer 模型。Phd 期间，他先后分别在 OpenAI、DeepMind 和 Google 做 Research Intern。毕业后，他加入 OpenAI 工作了一年，研究语言模型和扩散模型。22 年 8 月，离开 OpenAI 创立 Perplexity。\r\n\r\n具体来说，Aravind是一个印度人，考上了印度理工学院，2015-2016年对深度学习做了很多研究，2017年考到了UC伯克利大学读博士，和OpenAI的联合创始人，ChatGPT的研究主管John Schulman在同一个实验室！  \r\n\r\n随后，在2019年去了Deepmind实习，白天工作，晚上就去那的图书馆看书，有几本书写的是谷歌如何工作的，其中拉里佩奇给Aravind的启发很大：\r\n>\r\n> 我被PageRank的演变过程所吸引，以及它是如何引领到一个能够创造像Transformers这样惊人进步的公司的。\r\n>\r\n这个印度小哥很积极，用Cold Email的方式联系上了Transformer的一作：Ashish Vaswani，获得了实习机会！\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432199503/28031.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n后面，在Perplexity的投资人名单上，也出现了这位大神：\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432130162/53195.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n但是实习期Aravind还是没有明确的创业想法，一直到2022年夏天，Jasper、Github Copilot这样的AI初创公司开始实现真正的收入，包括用户的热情与日俱增，Aravind意识到机会来了！\r\n\r\n创立Perplexity后的尝试，我们在上一章节讲过了，一直到2022年12月7日网页版本的Perplexity上线，12月15日，上线了Bird-SQL，即推特SQL搜索功能，获得了很多用户的认可，然后在这次浪潮中Aravind观察到用户更加喜欢常规的搜索方式，叠加上马斯克提高了API的价格，逼得Aravind全面转向端到端的答案引擎。\r\n\r\n这次尝试非常成功，有两点：\r\n\r\n第一. **获得了用户真实的使用行为**，最终帮助Perplexity找到了正确的方向；\r\n\r\n第二. **拿到了一些著名大神的投资**，比如Yann LeCun，Meta首席AI科学家，Andrej Karpathy，原特斯拉AI高级总监，现OpenAI副总裁，他们单纯就是看到了Perplexity的推特就投了。\r\n\r\n在这之后，Perplexity开始走上正轨！\r\n\r\n下面我整理了一些Aravind对于Perplexity产品的思考：\r\n\r\n1.\r\n   **Paul Graham的YC创业产品方法论**\r\n\r\n从身边的朋友小范围开始传播---》\r\n\r\n做一些没有规模效应的事，比如**和用户亲自交流**---》\r\n\r\n构建MVP产品（比如Discord Search Bot，Bird-SQL）---》\r\n\r\n用真正的用户测试MVP（比如Bird-SQL最终帮其获得了洞察）---》\r\n\r\n向用户学习并迭代\r\n\r\n以上几个步骤，可以看到Perplexity完美的遵循了。\r\n\r\n2.\r\n   **永远不应该做别人做过的同样的事**\r\n\r\n谷歌1998年上线，到现在已经20+年，定义了搜索，并构筑了护城河（在后面聊Perplexity护城河的时候我们会具体说）。\r\n\r\n如果和谷歌做一样的事情，Perplexity没有任何机会，所以围绕着AI产生的变量，Perplexity寻找着新的方式。\r\n\r\nChatGPT 没有实时搜索功能---》\r\n\r\n但又有强大的整合推理能力---》\r\n\r\n结合 LLM 和搜索---》\r\n\r\nPerplexity 诞生\r\n\r\n这个方式就是答案引擎，《创新者的窘境》提到颠覆式创新的可怕之处在于，原有的大公司很难下定决心\"杀死\"自己，谷歌的商业价值太庞大了，建立在用户搜索时点击的广告上，答案引擎意味着这些广告不再有高曝光量。\r\n\r\n所以这就是Perplexity的机会，Perplexity之所以疯狂的迭代，包括也在建立自己的索引库，就是害怕哪一天Google关闭了搜索API之后，对Perplexity业务的冲击，但一旦构建完毕，Perplexity很可能就不再惧怕谷歌了。\r\n\r\n3.\r\n   **围绕构建优势持续不断的努力**\r\n\r\n谷歌的UI几乎没什么变化，但是背后的技术仍然在不断的提高。\r\n\r\nPerplexity也在不断地提高几个要素，典型如：\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432197647/15527.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n它们非常关注新鲜度、实时性、有效性几个用户感知上最关心的要点，并且不断的提高，上图就是Perplexity自研的pplx-70b-online的测试对比数据，发布于2023年11月29日。\r\n\r\n再叠加上前面有个图显示了高频度的功能更新情况，我们可以看出Perplexity一直在高速的围绕用户需求做功能迭代。\r\n\r\n4.\r\n   **站在用户角度思考问题**\r\n\r\n这似乎是老生常谈，但具体到每一个优化细节，你能否真的站在用户的习惯上思考呢？\r\n\r\nPerplexity在生成答案时，会先显示搜索来源的链接，再生成答案：\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432197973/72248.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n为什么呢？回到用户使用习惯上来讲，在使用传统搜索引擎时，我们会很快的得到返回的搜索结果，Perplexity为了将搜索引擎和答案引擎结合起来，于是把Sources放在顶部，方便一些用户不想等待的时候可以先点击链接去看。\r\n\r\n前面我们提到的Bird SQL，也是从用户出发，将用户习惯的自然语言，转化为结构化的SQL语句，然后对接到推特API里，拿到普通用户很难获得的数据！\r\n\r\n*我总是试图从用户的角度看问题，并尽可能多地与他们交谈。拉里·佩奇（Larry Page）在创办谷歌时有一个理念，即\"用户永远不会错\"。它简单而深刻。当人们抱怨某些事情对他们不起作用时，我会尽可能多地回复他们的私信。我尽最大努力将这种心态灌输到我们公司的每个人身上。不要责怪用户没有正确表达他们的问题，或者不知道有一个按钮可以分享一些东西。我们的工作是解决这些问题，使产品更直观。*\r\n\r\n5.\r\n   **一次只做一件事情**\r\n\r\n**Perplexity快速基于用户迭代产品，聚焦解决关键问题**，很值得学习。\r\n\r\n*我们做了很多决策，比如，如果我们支持自由交谈而不是只是一个生产力助手或研究助手，我们可能会得到更多的流量。但我们没有这样做，因为那样会导致产品分叉，让用户感到困惑，对于某种功能，他们可能会有很多用户，而对于另一种功能，他们可能会因为缺乏可靠性而感到沮丧。所以这对我们有很大帮助，* ***让我们保持清晰、简单，一次只做一件事情****。*\r\n\r\n接着我们来看看，Perplexity的用户都是谁呢？\r\n\r\n## 05 Perplexity的用户都是谁，为何用它？\r\n\r\nPerplexity的Discord服务器有4.4万名成员，其中有一个频道叫做  \r\n\r\n**Post something about you and share how you found Perplexity**\r\n\r\n从这里，我查看了一些比较典型的介绍，从中我们可以了解它的用户群：\r\n\r\n*Hi, my name is Oscar, and I am a Software Engineer. I found Perplexity by looking into alternatives to the one that was the most popular (ChatGPT). And I was really surprised with how fast it is, and the accuracy of the results. I literally use it all day for everyday tasks*\r\n\r\n嗨，我叫奥斯卡，我是一名**软件工程师**。我是在寻找最受欢迎的那个（ChatGPT）的替代品时发现了Perplexity。我真的很惊讶于它的快速响应速度和结果的准确性。**我几乎整天都在用它来处理日常任务**。\r\n\r\n*M\\&A investment banker covering AI native companies. Been using Perplexity since late last year and loving it -Pro user ftw*\r\n\r\n嗨，我是一名覆盖人工智能原生公司的**并购投资银行家**。自从去年年底开始使用Perplexity以来，我就非常喜欢它------专业用户表示支持。\r\n\r\n*Hello everyone, I'm KP. I'm a software engineer. Been playing around with Chat-GPT from so long and recently got hooked with xAI because of the realtime capabilities. Found perplexity on hackernews and damn surprised by the realtime capabilities. First thing - cancelled my ChatGPT plus. Excited about the future of Perplexity*\r\n\r\n大家好，我是KP。我是一名**软件工程师**。我一直在玩Chat-GPT，最近因为实时能力而迷上了xAI。在Hacker News上发现了Perplexity，真的很惊讶于它的实时能力。第一件事------我取消了我的ChatGPT Plus。对困惑度的未来充满期待。\r\n\r\n*hey! I'm a second year university student who uses Perplexity for reaseach. As someone with ADHD and slow processing speed, perplexity is great for helping me find sources for obscure and complex information, amongst helping me exand creative pursuits*\r\n\r\n嘿！我是一名**大二的大学生**，我使用Perplexity来**进行研究**。作为一个有注意力缺陷多动障碍（ADHD）和处理速度较慢的人，Perplexity在帮助我找到关于晦涩和复杂信息的来源方面非常出色，同时也帮助我扩展了我的创造性追求。\r\n\r\n*hey folks, I'm sam and i'm a product manager. been playing around with different genAI tools and hoping to build some small apps on more niche verticals. super impressed by perplexity and how fast it's become part of my day-to-day workflows. the ux is also kickass and so user-centric, awesome stuff*\r\n\r\n嘿，大家好，我是Sam，**我是一名产品经理**。我一直在尝试不同的生成人工智能工具，并希望在更小众的垂直领域构建一些小应用。我对Perplexity印象深刻，它如此迅速地成为我**日常工作流程**的一部分。用户体验（UX）也非常棒，非常以用户为中心，真是棒极了。\r\n\r\n接着，我们来到另一个频道：\r\n\r\n**Post a link to what you've learned with Perplexity recently**\r\n\r\n这里会有很多用户分享自己在Perplexity搜索后的答案链接。\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432163392/43317.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n有产品经理来了解如何学习编程的\\~\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432145008/35786.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n有上传图片来识别截图来自哪个电影的！\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432125341/88178.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432285751/51648.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n有用来协助进行科学研究的！\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432280663/63968.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n有用来快速总结TGA2023亮点的\\~\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432297666/40418.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n英国移民新政策的摘要\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432247442/33414.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n科幻作家用来搜索一些事实性内容\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432242923/88716.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n用来学习Python\r\n\r\n看下来不少是用来做研究的，也有很多是希望用Perplexity来快速获得答案。\r\n\r\n从少量样本的用户反馈来看，**发现有明确需求的用户群体居多，不少用户有技术背景，比较追求效率（快速获得答案），对于专业性有一定要求，以及会认为Perplexity可以替代其他如ChatGPT或者Google等产品**。\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432284947/37855.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n我们从Perplexity可选的Focus功能的分类也能看出一些端倪：Perplexity有部分用户确实是专业人士，希望更高效率的获得答案！\r\n\r\n我们看了Perplexity，也可以看看一些竞品，典型如国内的：\r\n\r\n## 06 国内竞品：天工AI搜索\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432253836/73974.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n天工AI搜索在主产品上基本像素级致敬了Perplexity。\r\n\r\n有人设（对应Perplexity的Profile）：\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432298613/54416.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n有Copilot（类似Perplexity的Copilot）：\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432288089/15536.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n也有推荐（对标Perplexity的Discover）\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432326880/83434.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n答案详情页也基本Copy：\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432334470/43582.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n在产品上还叠加了一些其他入口，比如AI对话、AI创作，以及AI阅读。\r\n\r\n我们重点说一下AI阅读这一个功能，因为这一功能可以帮我引导大家到我想聊的一些点上去，这个功能在移动App端展现的更加充分一些：\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432334533/69868.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n在App内需要复制链接地址，点击立即阅读后会生成文章摘要，可以基于文章向AI提问。\r\n\r\n当然，目前的路径脱离了微信生态，天工也尝试引导用户扫码添加，但实际尝试后发现添加的是客服消息，在微信生态内仍然无法实现转发，只能复制链接：\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432393137/51579.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n这个功能，既然天工想要免费的策略来获得用户，那**在AI阅读以及微信端的布局就太浅了。**\r\n\r\n这里我建议有远见的大模型公司，应该尽快抓住微信生态的**知识信息管理机会，快速通过裂变获得大量的用户，以及构建他们在自身产品层面的资产\\~**\r\n\r\n目前知了阅读就在朝这个目标努力：\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432460686/59361.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n他们还做了内容广场，有些像一个优质内容分发：\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432467817/99234.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n类Perplexity产品完全可以作为**摘要bot形态**，作为企微账号存在，允许被拉入各微信群，获得大量的用户互动行为，进而导流到自有H5页面。\r\n\r\n并且更进一步可以做内容订阅，设定固定时间推送摘要内容，帮助用户快速完成内容获取。\r\n\r\n除此之外，也可以增加**分类热点新闻榜**，每个新闻点击后快速提供摘要信息，满足一部分用户的信息获取需求。\r\n\r\n我们可以思考，Perplexity作为答案引擎，站在用户的角度，他们**在什么场景下对什么答案有需求，我们可以去上游截取**，用好的解决方式满足他们的需求，就可以获得大量的用户和数据，并争取让他们在产品上面留下资产，包括订阅、笔记、收藏等等。\r\n\r\n所以，做Perplexity竞品单纯从技术和产品层面上是简单的，如何挖掘出发挥技术优势同时也是用户需求的好场景，才是我们在看竞品时应该多去琢磨的：）\r\n\r\n下面我们接着回来看Perplexity：\r\n\r\n## 07 两个方面理解它的下一步\r\n\r\nPerplexity 目标是搜索引擎的下一代，答案引擎。从现有的路线来说，大体有两条路线会走，\r\n\r\n**第一个是技术持续进化**\r\n\r\n**第二个是寻找用户场景**，将产品渗透到用户的日常生活中，从 weekly app，进一步变成 daily App\r\n\r\n我们对这两个点逐一展开：\r\n\r\n## 第一. 技术持续进化\r\n\r\n从前面技术结构来看，目前Perplexity有两块是重点依赖于外部资源的，一个是LLM，一个是搜索引擎，这两块都会带来较大的成本以及竞争风险。\r\n\r\nLLM层面，Perplexity最近已经推出了自己的两个全新Online LLM，包括之前已经发过的7b，和最新的70b\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432491123/46305.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n通过pplx-api，就可以访问这两个模型，价格嘛，自己看：\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432470130/97451.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n单纯看token消耗的费用，70b-online的费用要低于GPT3.5 Turbo的价格，但还有个API请求每千次5美刀的费用。\r\n\r\n70b-online的模型，基于开源模型Mistral-7b和Llama2-70b而来，是一个完全自有的模型。\r\n\r\n以及这个API是一个阳谋，调用它的客户多了，就能为Perplexity带来海量的数据：\r\n\r\n*We collect the following types of information:*\r\n\r\n*API Usage Data: We collect information about your use of our API, such as the number of requests, the content of the requests, and the timestamps of the requests.*\r\n\r\n*User Account Information: When you create an account with us, we collect your name, email address, and other relevant contact information.*\r\n\r\n我们会搜集使用API的所有信息，包括请求的内容！\r\n\r\n请求的内容里，有一点很有趣，**Perplexity就可以通过客户付费使用API，来获得更多的索引信息，从而构建自己更强大的索引库！**\r\n\r\n一旦有了强大的，经常更新的索引库，Google、Bing的护城河就被破坏了，Perplexity也就不用再为索引库的调用而付费了，整体的产品运转成本就会大幅下降。\r\n\r\n所以，在技术层面，Perplexity，**自建online-LLM一举两得**，不光可以大幅减少对OpenAI、Claude的模型调用，还可以减少对Google、Bing的API调用，变成借鸡生蛋，靠着客户的API调用，自建庞大的索引库，以及填补成本。\r\n\r\n包括，Online-LLM，对于答案的生成也可以不断优化质量，\r\n\r\n*Our search index is large, updated on a regular cadence, and uses sophisticated ranking algorithms to ensure high quality, non-SEOed sites are prioritized.*\r\n\r\n*Our models are regularly fine-tuned to continually improve performance.*\r\n\r\n不光自建了庞大的索引库，并且根据自己的算法优化索引排序，还会定期对LLM进行微调来保证性能。\r\n\r\n此时，Bing在今年5月份提高了搜索API的价格，甚至未来有可能对Perplexity关闭API调用，这些外部因素都不会再影响Perplexity，在此之前，**Perplexity知道自己的七寸在对方手里，拼了命的迭代！**\r\n\r\n## 第二.寻找用户场景\r\n\r\n其次是用户侧，有三点：\r\n\r\n*\r\n  **沿着Discover，帮助用户更好的发现信息**\r\n\r\n如何更好的发现信息，上一章节我们已经提到了一些可能性，包括了订阅、热门榜单等有助于更快将信息传递给用户的合理手段。\r\n\r\n*\r\n  **沿着Library，构建AI版本的维基百科**\r\n\r\n这一块未来有社区的可能性，前提是需要一定的运营能力，将PGC引入，甚至是学习维基百科的策略，用开放包容、知识共享、协作机制和社区文化等慢慢培育内容生态。\r\n\r\n早期还是要建立一些高质量的内容聚合，并不断更新和对外传播，开始滚雪球。\r\n\r\n*\r\n  **沿着Copilot，更好的理解和直接处理信息**\r\n\r\n验证答案引擎这一要点，可以进一步思考，用户获得了答案之后，是否有一条支线会导向后续的动作，比如机票查询、电商物品搜索等等，Copilot当前只解决了从Query到答案之间的优化，下一步，**可以往Agent发展**，直接帮助用户快捷完成行为动作，减少用户的行为成本。\r\n\r\n聊了很多产品层面的点，接着来聊聊它的商业模式：\r\n\r\n## 07 商业模式\r\n\r\n当前Perplexity主要依赖toC的订阅+toB的API调用两个\r\n\r\n10月份根据网络报道，Perplexit的ARR是300万美元，这对于一个初创公司来说并没有参考意义，个人认为对于用户新增和活跃来说，Perplexity更愿意放弃掉这笔ARR的部分来换取：\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432450158/35589.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n12月23日，Perplexity宣布提供Pro的2个月免费代码，据我观察，在此前Perplexity也搞过类似的促销，其实还是希望更多人能够更多去深度的使用，从而形成粘性，以及获得口碑。\r\n\r\ntoB的API，我们也说了是一举两得的明智之举。\r\n\r\n更多的商业变现路径，包括了基于用户Profile更精准的广告投放，以及Agent完成的付费行为可能带来的佣金收入等。\r\n\r\n但对于搜索这一马太效应极其明显的市场来说，获得更大的市场份额才是Perplexity当下的重点，通过LLM构建的答案引擎，天然的背离了Google养成的极大的三方共赢生态，也需要时间来构建自己AI时代的商业闭环。\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432518593/69539.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n总之，**AI-Native更加讲究用户数据的价值，基于数据飞轮、更深度的用户使用情况、更个性化的深度服务，新的商业模式是完全有可能建立**的，是阶段问题，我理解目前节点，Perplexity也并不急于构建，更多会去探索合理的模式，**寻找到持续的高粘性场景，突破外部限制条件**（依赖搜索巨头API）会更为重要！\r\n\r\n那到底Perplexity有没有机会取代Google呢？\r\n\r\n## 08 Perplexity能否取代Google？\r\n\r\n在起初，创始人Aravind也怀疑自己，在一个Google时代做搜索，似乎不是好时候，现在一个冉冉升起的新星似乎让人们越来越清晰的看到了下一代Google的影子？\r\n\r\n别着急，在文章一开头，我们也提到它的流量持续在上涨，但根据similarweb的数据，Perplexity的流量分布占比最大的是印度尼西亚，并且美国的流量在往下掉：\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432585920/69093.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n是的，清醒一点！Perplexity离取代Google还非常遥远，在新闻总结、内容摘要、知识相关的快速整合方面，Perplexity某些时候能做到十倍级的提高，但依然有很大的用户群体是无法覆盖的，这里有几点因素：\r\n\r\n1.\r\n   用户使用习惯，品牌信任，和老牌Google来比，Perplexity还需要长期的市场营销努力\r\n2.\r\n   大部分人只能输入关键词无法输入长句子\r\n3.\r\n   流量入口把持，如Google每年花上百亿美元购买苹果Safari浏览器的默认搜索引擎，还有安卓生态等\r\n4.\r\n   技术成熟度，Perplexity还在持续进化，包括幻觉、答案生成质量还有待提高\r\n5.\r\n   商业化，Perplexity还是需要建立可持续的商业模式才能长期发展\r\n\r\n**我们会看到一些更垂直的搜索场景，比如Devv.ai，在科研领域是完全可以替代掉Google的，甚至可以整合进LDE内，加速放大研发效率，这样的细分市场反倒是无人质疑！**\r\n\r\n不过，也可能会有一些重大变量带给Perplexity新机会，典型如**新的交互形式**，特别是硬件（新设备形态），大家都看过AI Pin，在这类硬件产品里，不宜做过多的交互，Perplexity直给答案的逻辑就更加适合，因为可以大量减少交互量。\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432585533/16748.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n另外就是将Copilot升级为Agent带来的可能性，直接帮助用户解决最终的需求，比如从搜索机票，到直接帮助购买机票，这也是Perplexity的机会。\r\n\r\n以及，我们也不能忘了下面这张图带给我们的启示：\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432525539/29845.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n更远的未来，是大模型本身能力进一步提高，在语义理解和答案返回层面，能再一步提高，甚至说对于关键词输入也能给出10倍级的体验优化，到时就是Perplexity的机会，**基于搜索像燃油车，LLM像新能源车，这种颠覆机会仍然存在**。\r\n\r\n说句真心话，挑战巨头太难了，说Perplexity失败是一个非常简单的行为，也是**用当下的视角理解产品技术演进的结果**。但正如那句古老的智慧所言：\"悲观者永远正确，乐观者永远前行。\" Perplexity或许在某些方面尚未成熟，但它正以乐观者的姿态不断探索和进步，寻求在搜索领域的新突破。在这个快速变化的时代，只有那些敢于梦想并勇于实践的创新者，才能抓住未来的机遇，引领行业的发展。\r\n\r\n## 总结\r\n\r\nPerplexity，在它身上我看到TPF和PMF结合的点：\r\n\r\n**TPF（技术产品匹配）在于：**\r\n\r\nRAG的引入解决了幻觉和实时性弱的bug 这样就能发挥LLM的语言理解及推理能力了\r\n\r\n**PMF（产品市场匹配）在于：**\r\n\r\n人们搜索背后是希望更快获得想要的答案\r\n\r\n抽象一下Perplexity产品流程，我们可以找到更多的应用领域：\r\n\r\n![图片](https://image.cubox.pro/cardImg/2024022000432555797/99570.jpg?imageMogr2/quality/90/ignore-error/1)\r\n\r\n重要的是，从Perplexity身上找到更好的产品方法论，以及找到TPF和PMF的结合点，最后我们来个总结性的思考：  \r\n\r\n1.\r\n   Perplexity的\"成功\"在于它对用户需求的深刻理解和对技术趋势的敏锐把握。\r\n2.\r\n   它的商业模式和产品策略为我们提供了一个关于如何在AI时代创新的宝贵案例。\r\n3.\r\n   Perplexity的挑战在于如何持续优化用户体验，同时建立起强大的品牌信任和市场地位。\r\n4.\r\n   对于其他AI产品开发者来说，Perplexity的发展历程是一个值得学习的蓝本，它展示了如何在竞争激烈的市场中找到自己的定位，并不断进化。\r\n5.\r\n   **中国市场也迫切需要这样以答案为导向的新型搜索引擎，创业者可以抓住时机布局，同时结合中国国情和互联网生态设计产品和商业模式。**\r\n\r\n仔细分析完后，我们不仅对Perplexity有了更深入的了解，也为AI产品的未来发展方向提供了新的视角。我相信，这篇文章的价值远不止于此，它激发了我们对于AI技术如何更好地服务于人类社会的思考。\r\n\r\n欢迎和我交流\\~\r\n\r\n\r\n**\\*作者简介：**\r\n\r\n****Super黄，广西人，毕业于北京邮电大学，现居北京，****\r\n\r\n****11年产品经理，全网10万粉丝。****\r\n\r\n****超爱AI！全力研究AI、AI产品，******正在谋求进入AI公司** ****，****[****欢迎点击了解我《Super黄的个人说明书-AI版》****](http://mp.weixin.qq.com/s?__biz=MjM5ODU1MzQzOQ",
        "tags": [],
        "line": 367,
        "startOffset": 11853,
        "endOffset": 26595,
        "filePath": "Sources/CuboxSync/Perplexity：用答案引擎挑战Google - 万字长文-2024-02-04.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615142112,
        "isNativeComment": false
      },
      {
        "id": "cr7zja7hx",
        "text": "&mid=2247487884&idx=1&sn=f3e625577ae751e0d2b6bb31eac55028&scene=21#wechat_redirect)\r\n\r\n[Perplexity AI，比Google Bard和Bing Chat更靠谱的问答引擎](https://mp.weixin.qq.com/s?__biz=Mzg2OTY0MDk0NQ",
        "tags": [],
        "line": 788,
        "startOffset": 27062,
        "endOffset": 27247,
        "filePath": "Sources/CuboxSync/Perplexity：用答案引擎挑战Google - 万字长文-2024-02-04.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141321,
        "isNativeComment": false
      },
      {
        "id": "6da2fte6m",
        "text": "&mid=2247693672&idx=2&sn=b53b54f36a61f7eb5340cce7370b21fc&scene=21#wechat_redirect)\r\n\r\n[AI 时代错误的商业模式 - \"好10倍\" 且 \"更便宜\" 吗？](https://mp.weixin.qq.com/s?__biz=MzU2MTgzMjQyMA",
        "tags": [],
        "line": 792,
        "startOffset": 27409,
        "endOffset": 27582,
        "filePath": "Sources/CuboxSync/Perplexity：用答案引擎挑战Google - 万字长文-2024-02-04.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141668,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/OpenAI API- Fine-Tuned GPT-3.5 vs. Base GPT-3.5 - ...-2023-09-13.md": [
      {
        "id": "2366z4lfj",
        "text": " strJob) {\r\n    console.log(job);\r\n    notifier.notify({ message: \"Something changed in the fine-tune job!\" });\r\n  }\r\n  lastData = strJob;\r\n  await new Promise((resolve) => setTimeout(resolve, 60000));\r\n}\r\n```\r\n\r\nAnd guess what? Exactly 17 minutes later (!!), a wild notification appeared on my desktop. I checked the terminal and saw it succeeded.  \r\n你猜怎么着？整整17分钟后(！！)，一条疯狂的通知出现在我的桌面上。我检查了终端，看到它成功了。\r\n![](https://miro.medium.com/v2/resize:fit:700/1*zy1lhZjjlotPFe90vWI6pw.png)\r\n\r\nI quickly rushed to write a small script to test the fine-tuned model:  \r\n我急忙写了一个小脚本来测试这个微调的模型：\r\n\r\n```\r\nconst completion = await openai.chat.completions.create({\r\n  messages: [\r\n    { role: \"user\", content: \"create a node that adds 2 numbers\" },\r\n  ],\r\n  model: \"ft:gpt-3.5-turbo-0613:personal:flyde-23-08-27:7s9Gy7SR\",\r\n});\r\n```\r\n\r\nOnly to receive a very generic response that has nothing to do with Flyde.  \r\n只是收到了一个与Flyde无关的非常普通的回复。\r\n\r\nI guess I was too optimistic thinking fine-tuning reduces the need for a \"system\" role. I tried again with a very short system role:  \r\n我想我太乐观了，认为微调可以减少对\"系统\"角色的需求。我以一个非常短的系统角色再次尝试：\r\n\r\n```\r\n[\r\n   { role: \"system\", content: \"you create flyde code nodes\" },\r\n   { role: \"user\", content: \"create a node add 2 numbers\" }\r\n]\r\n```\r\n\r\nAnd also nothing, very generic. Not good.  \r\n而且也没什么，非常普通。不太好。\r\n\r\nMy hopes of not needing a long system role and reducing code generation latency for Flyde drop sharply.  \r\n我对Flyde不需要长时间的系统角色和减少代码生成延迟的希望急剧下降。\r\n![](https://miro.medium.com/v2/resize:fit:700/0*dYRqPwli3ekmejJN)\r\n\r\nMe, after trying the fine-tuned model: an illustration. Photo by Arash Payam on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)  \r\n我，在尝试了微调的模型后：一幅插图。Arash Payam在Unspash上的照片\r\n\r\nI decided to continue with the original plan, In the last attempt, I used [3 variations](https://github.com/FlydeHQ/flyde-openai-code-generation-research/blob/main/src/benchmark/chat-completion-instructions.ts) of system roles for testing GPT3.5 and GPT4. To truly test the effect of the fine-tuning process, I will add 3 new, shorter variations.  \r\n我决定继续原来的计划，在最后一次尝试中，我使用了3种不同的系统角色来测试GPT3.5和GPT4。为了真正测试微调过程的效果，我将添加3个新的、更短的变体。\r\n\r\nThis will give a glimpse of how short can the system-role be without hurting quality.  \r\n这将让我们一瞥系统角色能在多短的时间内不损害质量。\r\n\r\nNext, I generated the benchmark data and ran the GPT-4-based \"judge\" on them, and I had a CSV full of interesting data ready! A friendly reminder that the [previous post describes](https://medium.com/@gabrielgrinberg/openai-api-fine-tuned-models-vs-chat-completion-a-case-study-e3774fadc8c7) this process in detail.  \r\n接下来，我生成基准数据并对它们运行基于GPT-4的\"判断\"，我已经准备好了一个充满有趣数据的CSV！友善的提醒，之前的帖子详细描述了这一过程。\r\n\r\n## Some insights: 以下是一些见解：\r\n\r\nBefore trying to figure out a clear result, here are some patterns and insights I've noticed:  \r\n在试图找出一个明确的结果之前，以下是我注意到的一些模式和见解：\r\n\r\n**GPT3.5 became much faster\r\nGPT3.5变得更快了** The first thing I observe is *totally unrelated to fine-tuning* --- the chat completion API is muuuch faster. **Around %300 faster** :  \r\n我观察到的第一件事与微调完全无关-聊天完成API的速度要快得多。速度提高约300%：\r\nS, M, and L are the sizes of the prompt  \r\nS、M和L是提示符的大小\r\n\r\n**Fine-tuned GPT3.5 is faster than the base one\r\n微调的GPT3.5比基础版更快**\r\n\r\nData is the average time it took to complete, in seconds.  \r\n数据是完成的平均时间，以秒为单位。\r\nThe first row taking longer must have been a network hiccup.  \r\n第一排花更长时间的肯定是网络故障。\r\n\r\n**Fine-tuned GPT-3.5 is expensive\r\n微调GPT-3.5价格不菲**   \r\nThe second thing worth mentioning is that using **fine-tuned GPT3.5 models is around ±10x more expensive** than using the base model: base GPT3.5 is $0.0015 and $0.002 per 1K of input/output tokens (respectively). while using a fine-tuned GPT3.5 model is $0.012/$0.016.  \r\n值得一提的是，使用微调的GPT3.5型号比使用基本型号贵约±10倍：基本GPT3.5分别为每1K输入/输出令牌0.0015美元和0.002美元。而使用微调的GPT3.5机型的价格为0.012美元/0.016美元。\r\n\r\nHere are the price differences for our dataset (in cents).  \r\n这是我们数据集的差价(以美分为单位)。\r\nUsing a fine-tuned model was roughly 7 times more expensive than the base one.  \r\n使用微调机型的价格大约是基础机型的7倍。\r\n\r\n**Fine-tuning !",
        "tags": [],
        "line": 214,
        "startOffset": 11512,
        "endOffset": 15507,
        "filePath": "Sources/CuboxSync/OpenAI API- Fine-Tuned GPT-3.5 vs. Base GPT-3.5 - ...-2023-09-13.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141743,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/Mixtral 8x7B论文终于来了：架构细节、参数量首次曝光 - 机器之心-2024-03-04.md": [
      {
        "id": "mc586twyv",
        "text": "&mid=2650891988&idx=2&sn=dd03b134611d3719b2a2d87d29e2920f&chksm=84e4a2aab3932bbcdbdc85b4beffef9305e476e276e3061c98c1275cecc81b8df7173fb3ecfa&scene=21#wechat_redirect)》。\r\n\r\nMistral 7B 论文地址：https://arxiv.org/pdf/2310.06825.pdf\r\n\r\n与 Mistral 7B 不同的是，Mixtral 8x7B 是一种仅包含解码器的模型，**每层由 8 个前馈块（即专家）组成** 。对于每个 token，在每一层，路由器网络都会选择两名专家来处理当前状态并组合他们的输出。尽管每个 token 只看到两个专家，但所选的专家在每个时间步上都可能不同。因此，每个 token 可以访问 47B 参数，但在推理过程中**仅使用 13B 激活参数**。\r\n\r\n从这里我们也可以看出，Mixtral 8x7B 并不是大家认为的有 8 个 Mistral 7B 模型，名字中的 8 代表 8 个专家。\r\n\r\nMixtral 预训练上下文的大小为 32k，在多项基准测试中，它的性能达到或超过 Llama 2 70B 和 GPT-3.5。尤其是，Mixtral 在数学、代码生成和需要多语言理解的任务方面表现出了卓越的能力，并在这些领域显著优于 Llama 2 70B。实验表明，Mixtral 能够成功地从 32k token 的上下文窗口中检索信息，无论序列长度和信息在序列中的位置如何。\r\n\r\n除了 Mixtral 8x7B，该研究还推出了 Mixtral 8x7B -- Instruct 聊天模型，其性能在人类评估基准上明显超过了 GPT-3.5 Turbo、Claude-2.1、Gemini Pro 和 Llama 2 70B 聊天模型。在 BBQ 和 BOLD 等基准中，Mixtral - Instruct 也显示出更少的偏见。\r\n\r\n值得一提的是，Mixtral 8x7B 和 Mixtral 8x7B -- Instruct 免费供学术和商业使用。\r\n\r\n不过，有研究者表示 Mixtral 中的专家似乎专注于语法而不是领域，特别是在初始层和最终层（参见路由分析部分）。\r\n\r\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FKmXPKA19gW9qwRmv7reEt2ZuIYEt7N3RrnVN7Ge5qYcV2aHz0uBkaibiaC7ajHMlhiccHVIy9Gm9r1GKGhO4MM0ibA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg&valid=false)\r\n\r\nMixtral 8x7B 如此令人兴奋的原因在于它探索了一种新的架构范式，即「专家混合」的方法，与大多数 LLM 所遵循的方法形成鲜明的对比。\r\n\r\nMoE 结合了多个专家模型的优势来解决问题，在 MoE 中，仅使用一名或少数专家就能进行预测。这种方法有两个主要组成部分：\r\n\r\n*\r\n  路由器：决定对于给定输入信任哪个专家以及如何权衡每个专家对于特定输入的结果。\r\n*\r\n  专家：专门研究问题不同方面的个体模型。\r\n\r\n\r\n在 Mixtral 的案例中，有八位专家，其中两位是被选中的。我们接下来看具体细节。\r\n\r\n**架构细节**\r\n\r\nMixtral 基于 Transformer 架构，支持上下文长度达到 32k token，并且前馈块被 Mixture-of-Expert（MoE）层取代。\r\n\r\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FKmXPKA19gW9qwRmv7reEt2ZuIYEt7N3RMtjkDY5NZWMGeQBk7dsFLBPbEYYBJU8Hu4PywKBb8PxCL9QqJVSTYw%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg&valid=false)\r\n\r\n**稀疏专家混合**\r\n\r\n专家混合层如图 1 所示。\r\n\r\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FKmXPKA19gW9qwRmv7reEt2ZuIYEt7N3RPfWfxpeLvIicbuKdzx5p9CgvjwcMNgtKaPK81AzvccSwiaK0XsZoMECg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg&valid=false)\r\n\r\n对于给定的输入 x，MoE 模块的输出由专家网络输出的加权和决定，其中权重由门控网络的输出给出。即给定 n 个专家网络 {E_0, E_i， ...， E_(n−1)}，则专家层的输出为：\r\n\r\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FKmXPKA19gW9qwRmv7reEt2ZuIYEt7N3R0oWCwq8ZZib9YoribnQDfGQ3WjG19uX7kQ9z7v6SfLH1dztfbic2vLUxQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg&valid=false)\r\n\r\n这里，G (x)_i 表示第 i 个专家的门控网络的 n 维输出，E_i (x) 是第 i 个专家网络的输出。不过实现 G (x) 有多种替代方案，其中简单且高性能的方法是通过在线性层的 Top-K logits 上采用 softmax 来实现。即：\r\n\r\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FKmXPKA19gW9qwRmv7reEt2ZuIYEt7N3REPvXw58YjibQdp8msRg5ibmZ7huwPo0OhJiaU5oYJwRHCgbFzNuiaBARNg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg&valid=false)\r\n\r\nMoE 层可以在具有高性能专用内核的单个 GPU 上高效运行。例如，Megablocks 将 MoE 层的前馈网络（FFN）操作转换为大型稀疏矩阵乘法，显著提高了执行速度。此外，MoE 层可以通过标准模型并行技术以及一种称为专家并行 (EP) 的特殊分区策略分布到多个 GPU 上。\r\n\r\n在 MoE 层执行期间，本应由特定专家处理的 token 将被路由到相应的 GPU 进行处理，并且专家的输出将返回到原始 token 位置。\r\n\r\n在 Transformer 模型中，MoE 层独立的应用于每个 token，并取代 Transformer 块的前馈 (FFN) 子块。对于 Mixtral，该研究使用与专家函数 E_i (x) 相同的 SwiGLU 架构，并设置 K = 2。这意味着每个 token 都被路由到具有不同权重集的两个 SwiGLU 子块。将所有这些放在一起，输入 token x 的输出 y 计算如下：\r\n\r\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FKmXPKA19gW9qwRmv7reEt2ZuIYEt7N3Rmph997icaovnl1ibL8oF9CKpMU5QqtlicD3pUdicicQHZJwgicCuuHYN3bsQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg&valid=false)\r\n\r\n**实验及结果**\r\n\r\n研究者将 Mixtral 与 Llama 进行了比较，并使用自己的评估 pipeline 重新运行了所有基准，以进行公平比较。该研究对以下各种任务的性能进行了测量：常识推理、世界知识、阅读理解、数学、代码等。具体任务详情见原论文。\r\n\r\n表 2 列出了 Mixtral、Mistral 7B 和 Llama 2 7B/13B/70B 以及 Llama 1 34B 的详细结果。\r\n\r\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FKmXPKA19gW9qwRmv7reEt2ZuIYEt7N3RiahZ2A6T2ZGKLk8SicH8Xr7s9Jicxka95PStc7ice4YKA1QxWnxRGGxOFQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg&valid=false)\r\n\r\n图 2 比较了 Mixtral 和 Llama 在不同类别任务中的性能。在大多数指标上，Mixtral 都超过了 Llama 2 70B。特别是在代码和数学基准测试中，Mixtral 的表现更胜一筹。\r\n\r\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FKmXPKA19gW9qwRmv7reEt2ZuIYEt7N3RqeN4rHF0Ikia85h3R1ZpoDg5uBQFsMu30vsAvtojXvmb2LSIgIcl5Tg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg&valid=false)\r\n\r\n研究者将 Mixtral 与 Llama 2 系列进行了比较。如图 3 所示，作为一个稀疏专家混合模型，Mixtral 每个 token 仅使用 13B 个激活参数。尽管激活参数减少了 5 倍，Mixtral 在大多数类别中仍然能够胜过 70 亿参数的 Llama 2。\r\n\r\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FKmXPKA19gW9qwRmv7reEt2ZuIYEt7N3Rl38qzARaibh4ou0icmb4hXdwNmhbRn1MG6q3EeA1XKN1Yf7CAWltSsGA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg&valid=false)\r\n\r\n表 3 展示了 Mixtral 8x7B 与 Llama 2 70B 和 GPT-3.5 的性能比较。研究者发现 Mixtral 的性能与其他两个模型相媲美，甚至优于它们。在 MMLU 上，尽管 Mixtral 的容量要小得多，但它的性能更好。\r\n\r\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FKmXPKA19gW9qwRmv7reEt2ZuIYEt7N3Rj46okamao65zVv1gzvfGEPIb3OJLKBJicn3baU3LI0msKibiaz6ibo2s0A%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg&valid=false)\r\n\r\n**多语言基准测试**\r\n\r\n与 Mistral 7B 相比，研究者在预训练时大幅提高了多语言数据的采样比例。额外的容量使 Mixtral 在多语言基准测试中表现出色，同时保持了较高的英语准确率。如表 4 所示，Mixtral 在法语、德语、西班牙语和意大利语方面的表现明显优于 Llama 2 70B。\r\n\r\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FKmXPKA19gW9qwRmv7reEt2ZuIYEt7N3RUDjDUpSNeia7MP7NfnqLdC1H2aZA7EATbV5ia1OgOB39ZNic7LDmPZIlQ%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg&valid=false)\r\n\r\n**长距离性能**\r\n\r\n图 4（左）结果表明，无论上下文长度或 passkey 在序列中的位置如何，Mixtral 的检索准确率都达到了 100%。图 4（右）显示，随着上下文大小的增加，Mixtral 在 proof-pile 数据集的一个子集上的困惑度单调降低。\r\n\r\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FKmXPKA19gW9qwRmv7reEt2ZuIYEt7N3RpFQECHGxqbuoDbMhicL4xDVmicZH9mibYM3TH6j4gmu1ldKSHJrKlZSIg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg&valid=false)\r\n\r\n**偏见基准测试**\r\n\r\n研究者使用他们自己的评估框架对 Llama 2 和 Mixtral 在 BBQ 和 BOLD 上进行基准测试，结果如表 5 所示。与 Llama 2 相比，Mixtral 在 BBQ 基准测试中展现出较少的偏见。在 BOLD 的中，更高的平均情感得分意味着更积极的情感，而更低的标准差表示该群组内的偏见较少。总体而言，Mixtral 比 Llama 2 显示出更积极的情感，并且各组内的差异类似。\r\n\r\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FKmXPKA19gW9qwRmv7reEt2ZuIYEt7N3RsKicVlwmqSr3IJdUbMn01kqRBZnSjaH6yL5Mk9bdH5TxicaKT0bDFDog%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg&valid=false)\r\n\r\n**路由分析**\r\n\r\n研究者对路由器选择专家的情况进行了少量分析，他们尤其想知道在训练过程中，一些专家是否专攻某些特定领域，如数学、生物学、哲学等。\r\n\r\n为了研究这一点，研究者测量了在 The Pile 验证数据集的不同子集中所选专家的分布情况。图 7 展示了第 0 层、第 15 层和第 31 层的结果。\r\n\r\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FKmXPKA19gW9qwRmv7reEt2ZuIYEt7N3Rw9fKaxdGnk9Rcibt37hDIXgr6OCQmKIjeyBYaYdt8pNWeuX1EBOWFbg%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg&valid=false)\r\n\r\n令人惊讶的是，研究者在根据主题分配专家时没有观察到明显的模式。例如，在所有层中，ArXiv 论文（用 Latex 编写）、生物学（PubMed Abstracts）和哲学（PhilPapers）文档的专家分配分布非常相似。只有在 DM 数学中，专家的分布略有不同。\r\n\r\n这表明路由器表现出一些结构化的语法行为。\r\n\r\n图 8 显示了不同领域（Python 代码、数学和英语）的文本示例，其中每个 token 都用与其所选专家相对应的背景色突出显示。从图 8 中可以看到，连续的 token 往往被分配给相同的专家。\r\n\r\n每个 token 都用第一个专家选择着色。专家的选择似乎更符合语法而不是领域，特别是在初始层和最后层。\r\n\r\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FKmXPKA19gW9qwRmv7reEt2ZuIYEt7N3R7teLibqOgevoNlVNsLPPma5KDu1SXmCedEZauH1VuAYTceCEoxUrmAA%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg&valid=false)\r\n\r\n表 5 显示了每个领域和层中连续 token 获得相同专家分配的比例。对于较高的层，重复连续分配的比例明显高于随机分配。\r\n\r\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fsz_mmbiz_png%2FKmXPKA19gW9qwRmv7reEt2ZuIYEt7N3Rp9iaQxOKVcP5ITiaVZjWibJK1hoBERjUXAc2QvRVJfic5EibS1y02icELN7A%2F640%3Fwx_fmt%3Dpng%26from%3Dappmsg&valid=false)\r\n\r\n其实，在论文公开之前，Mixtral 模型就已经放出了，很多研究者都对 Mixtral 8x7B 进行了更深入的研究。比如你有 16 GB 显存 和 11 GB 内存的电脑，就可以在本机运行该模型，或者你也可以在 Google Colab 上运行。\r\n\r\n*\r\n  Jupiter Notebook：https://github.com/dvmazur/mixtral-offloading/blob/master/notebooks/demo.ipynb\r\n*\r\n  项目地址：https://github.com/dvmazur/mixtral-offloading/tree/master?tab=readme-ov-file\r\n\r\n\r\n此外，还有研究者将 [Mistral 8x7B 与 Flash Attention 2 结合，不到 10 行代码就能实现快速推理](http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw",
        "tags": [],
        "line": 41,
        "startOffset": 1504,
        "endOffset": 9463,
        "filePath": "Sources/CuboxSync/Mixtral 8x7B论文终于来了：架构细节、参数量首次曝光 - 机器之心-2024-03-04.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141656,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/Mac + win 系统微信双开脚本汇总 - 少数派-2024-11-06.md": [
      {
        "id": "g3qdl70vf",
        "text": "\"\" (\r\n    echo 请输入数字\r\n    goto start\r\n    )\r\n\r\n    set count=0\r\n\r\n    :loop\r\n    if %count%",
        "tags": [],
        "line": 68,
        "startOffset": 1520,
        "endOffset": 1615,
        "filePath": "Sources/CuboxSync/Mac + win 系统微信双开脚本汇总 - 少数派-2024-11-06.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141550,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/LinkinStar's Blog-2024-09-17.md": [
      {
        "id": "7vu7v12zx",
        "text": "\\> gnu-sed: stable 4.9 (bottled)GNU implementation of the famous stream editorhttps://www.gnu.org/software/sed/Conflicts with: ssed (because both ...\n\n[![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fblog.linkinstars.com%2Fblog%2Fcover%2Frust-ownership-design-cover.png&valid=true)](https://www.linkinstars.com/post/d17fc0bb.html \"浅析 Rust 所有权设计\")\n\n[浅析 Rust 所有权设计](https://www.linkinstars.com/post/d17fc0bb.html \"浅析 Rust 所有权设计\")\n\n发表于2024-08-15\\|[rust](https://www.linkinstars.com/categories/rust/)\\|[rust](https://www.linkinstars.com/tags/rust/)\n\n前言市面上的 Rust 书已经把基础说的足够好了，我没必要再搬砖，而是尝试从一些个人的角度来重新审视其中的一些设计。Rust 我认为最为关键的设计：所有权和借用。我们都知道 Rust 和 Go、Java 相比最大的不同就是没有 GC，那么没有 GC 的设计需要付出一定的代价，这个代价一部分就体现在今天要说的这两个设计中。 代价 1: 所有权三规 每一个值都被一个变量所拥有 Each value in Rust has a variable that's called its owner 一个值同时只能被一个变量所拥有 There can only be one owner at a time 当所有者离开作用域时，这个值将被丢弃 When the owner goes out of scope, the value will be dropped 很多基础都会提到这三个规定，非常重要。理解它就能理解所有权。而反过来，当我看完之后，反过来，其实可以从中推导它的设计。 问答推导 我还是习惯称呼为对象，所以我下面以对象称呼。 提问：GC 的目标是什么？回答：垃圾对象，无用的对象 提问 ...\n\n[![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fblog.linkinstars.com%2Fblog%2Fcover%2Fread-k8s-8-replicaset-cover.png&valid=true)](https://www.linkinstars.com/post/4b56e50d.html \"《一起读 kubernetes 源码》replicaset 到底有何不同\")\n\n[《一起读 kubernetes 源码》replicaset 到底有何不同](https://www.linkinstars.com/post/4b56e50d.html \"《一起读 kubernetes 源码》replicaset 到底有何不同\")\n\n发表于2024-08-01\\|[kubernetes](https://www.linkinstars.com/categories/kubernetes/)\\|[kubernetes](https://www.linkinstars.com/tags/kubernetes/)\n\n📢 注意，该文本非最终版本，正在更新中，版权所有，请勿转载！！ 前言前一节我们看到了 deployment 的滚动更新实现，如果你对它已经有一个比较清晰的认识，那么这一节的 replicaset 就非常容易理解了，因为基本实现都是差不多的。为了方便描述后面文中提及的 replicaset 统一简写为 RS。 在一开始学习 k8s 的时候其实我们不一定能碰到这个对象，如果只是日常的使用通常来说的都是 deployment 或者是 statefulset 这样。渐渐深入才会发现它。好像默默无闻的它是做什么的呢？ 前置知识 RS 是什么？ 心路历程在不知道 RS 之前我一直都以为是 deployment 直接去控制的 pod。而在一开始了解之后，我会好奇为什么要设计一个 RS，直接控制不行吗？渐渐的深入，就会发现，其实它有着自己的设计在里面。 码前提问 RS 和 Deployment 关系是什么？ 有何特别的设计？ 源码分析寻码过程有了 deployment 的经验其实 RS 寻码的过程就非常简单了。关键都是在 控制器 上。于是在相同的包下面我们就容易找到它。 12kubernet ...\n\n[![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fblog.linkinstars.com%2Fblog%2Fcover%2Fgo-graceful-shutdown-docker-tip-cover.png&valid=true)](https://www.linkinstars.com/post/2c762cec.html \"Go 应用容器下优雅停止坑点\")\n\n[Go 应用容器下优雅停止坑点](https://www.linkinstars.com/post/2c762cec.html \"Go 应用容器下优雅停止坑点\")\n\n发表于2024-07-15\\|[architecture](https://www.linkinstars.com/categories/architecture/)\\|[graceful-shutdown](https://www.linkinstars.com/tags/graceful-shutdown/)\n\n前言之前我有写过 go 应用在 k8s 中如何优雅停止 的博客，理论上在配置好对应的参数之后就能 优雅停止 了，但是最近接触到了两个场景，会导致配置的优雅停止失效，为了避免踩坑，对于之前的博客进一步进行补充。 场景说明有了之前的经验，Golang 应用本身没有问题，它已经接受并处理 SIGTERM 和 SIGINT 信号，但是实际场景出现的情况，在 k8s 或者 docker 停止的时候 有一些缓慢 ，但是由于最终容器还是会被关闭，于是这个问题就没有关注，这个现象也很容易被忽略。 1234567891011121314151617181920212223package mainimport ( \"fmt\" \"os\" \"os/signal\" \"syscall\")func main() { fmt.Println(\"启动\") ch := make(chan os.Signal, 1) signal.Notify(ch, syscall.SIGTERM, syscall.SIGINT ...\n\n[![](https://image.cubox.pro/cardImg/52wnrfeqxyte6ztpwtgph0liqzv1d7k78x3dxgvmh56i67qkbu.png?imageMogr2/quality/90/ignore-error/1)](https://www.linkinstars.com/post/ac644e2.html \"程序员减肥记\")\n\n[程序员减肥记](https://www.linkinstars.com/post/ac644e2.html \"程序员减肥记\")\n\n发表于2024-07-01\\|[减肥](https://www.linkinstars.com/categories/%E5%87%8F%E8%82%A5/)\\|[lose-weight](https://www.linkinstars.com/tags/lose-weight/)\n\n最近很长一段时间没有写文章了，因为这一段时间在做个\"大事\"，减肥。运动本身还是挺花时间的，所以确实就没时间更新那种非常干货的博客了。 起因原因是体检发现 BMI 超标，到了接近 25，由于本人之前还没有到达过这样的体重，确实是有大肚子了。于是毅然开始了减肥之路。整个过程我发现，其实对于我这样小基数的情况来说，其实减肥并不难，科学减肥也没有那么多的痛苦。 结果先说结果，一共是 3 个月(4,5,6)时间，减掉了 10 kg，从 74kg 减到了 64kg。基本上是每个月减 3kg 左右。 从结果来看我自己是非常满意的，下面分享一下整个过程中的一些心得，希望对你有所帮助。之前大学的时候也有过减肥的经历，不过没有这次那么多。 我先说一些情况： 我是小基数，对于大基数的减肥来说估计是不适用的 我是程序员，时间其实对于我来说并不宽裕，如何有效利用时间是我最大的问题 我仅仅只是想让我的体重回到一个正常的水平上，不是追求肌肉或者身材 所以在这样的条件下，如何做到 理科(理性+科学) 减肥呢？ 理科减肥这里说明一下我的理念和方法，再说说心得，方法不一定对任何人有效，但心得希望能帮助到你。 科 ...\n\n[![](https://image.cubox.pro/cardImg/67w540i9e70424dcayybvo9xwtr6xg0v6d6b3ugl2e8sy6i2w4.png?imageMogr2/quality/90/ignore-error/1)](https://www.linkinstars.com/post/c924c8b9.html \"Docker 容器如何访问宿主机服务\")\n\n[Docker 容器如何访问宿主机服务](https://www.linkinstars.com/post/c924c8b9.html \"Docker 容器如何访问宿主机服务\")\n\n发表于2024-06-15\\|[docker](https://www.linkinstars.com/categories/docker/)\\|[docker](https://www.linkinstars.com/tags/docker/)\n\n前言今天先水一篇，记录一个常见的问题，Docker 容器如何访问宿主机服务。我们知道在一个 docker 容器内部，如果，你直接访问 127.0.0.1 是无法访问到宿主机的，那么怎么办呢？ 最直接的方法如果你是自己在用，就是这个机器上也没有其他服务，那我倒是建议直接使用 host 网络，简单直接，一把梭。 1docker run -it --network host ubuntu:latest 优雅的解决然后我反找到了一个非常非常长的 issue 中间有个评论是 https://github.com/docker/for-linux/issues/264#issuecomment-964620100 （github也是醉了中间隐藏的部分需要你点好几次才会全部展开） 如果你不想使用 host 网络，可以使用 host.docker.internal 来访问宿主机的服务。 docker 下可以使用 1docker run --add-host host.docker.internal:host-gateway docker-compose 下可以使用 1234services: m ...\n\n[![](https://image.cubox.pro/cardImg/17ks5y7ik7b5ee5xijs3o0mrwnvxrcu6ux02dh3y2w0d04pn41.png?imageMogr2/quality/90/ignore-error/1)](https://www.linkinstars.com/post/4b7330fb.html \"《一起读 kubernetes 源码》deployment 滚动更新是如何实现的\")\n\n[《一起读 kubernetes 源码》deployment 滚动更新是如何实现的](https://www.linkinstars.com/post/4b7330fb.html \"《一起读 kubernetes 源码》deployment 滚动更新是如何实现的\")\n\n发表于2024-06-01\\|[kubernetes](https://www.linkinstars.com/categories/kubernetes/)\\|[kubernetes](https://www.linkinstars.com/tags/kubernetes/)\n\n📢 注意，该文本非最终版本，正在更新中，版权所有，请勿转载！！ 前言这一节终于来到了我们最为熟悉的一个对象 deployment，通常这可能是我们学习 k8s 接触的第一个大对象了，我们一般的应用也是以 deployment 来进行部署的，那么对于熟悉的它来说，我们应该从源码里面去找什么目标来看呢？对于我来说，deployment 的更新是我最好奇的，在我重新修改镜像版本之后，deployment 是如何一步步控制已有的 pod 进行更新的呢？这一节我们就从源码中揭秘这个过程。 前置知识 deployment 的基础使用 滚动更新 心路历程在我看来其他的属性与 pod 类似，而 deployment 作为一个 pod 的集合。那，为什么 deployment 要让 pod 的有多个副本呢？从最初的角度角度来说肯定是高可用了，所以 deployment 中最为关键的就是对 pod 的控制，也就是当 pod 的数量变化的时候，它是如何操作的。 码前提问 deployment 是由哪个对象控制的？ 应用更新的时候 deployment 是如何控制更新过程的？ 源码分析寻码过程像 d ...\n\n[![](https://image.cubox.pro/cardImg/4u75dbv8y0ttwy1esshxjip0925xn0tvw0z1s3i3njl17031bt.png?imageMogr2/quality/90/ignore-error/1)](https://www.linkinstars.com/post/6a76c1cb.html \"《一起读 kubernetes 源码》揭秘 k8s 关键机制 informer\")\n\n[《一起读 kubernetes 源码》揭秘 k8s 关键机制 informer](https://www.linkinstars.com/post/6a76c1cb.html \"《一起读 kubernetes 源码》揭秘 k8s 关键机制 informer\")\n\n发表于2024-04-30\\|[kubernetes](https://www.linkinstars.com/categories/kubernetes/)\\|[kubernetes](https://www.linkinstars.com/tags/kubernetes/)\n\n📢 注意，该文本非最终版本，正在更新中，版权所有，请勿转载！！ 前言在第二章我们会去看 k8s 中常用对象的源码，不过在看这些对象之前，我们需要聊一聊 informer 机制。这个机制可以说是 k8s 设计之中的一个重点了。这个机制的设计不仅仅让代码本身变得清晰，更让整个系统的结构更容易扩展。所以这个机制需要放到第二章的第一节来说。 前置知识 控制循环 informer 的使用 心路历程我第一接触 informer 是在使用 client-go 的时候。相信有很多同学和我一样，学习 k8s 的路径通常是，从基本的使用开始，然后慢慢的有一些自定义的需求需要使用 client-go 进行开发。使用 client-go 开发真的很方便，能力很强大。而在其中我第一次碰到了 informer。从了解了这个机制之后，才逐渐明白 k8s 本身是如何去控制里面的资源的。 还是一样的，本文不涉及具体这个机制的详细原理，更专注在源码本身。当然，我先通过两个小点帮助你回忆起来 informer 机制。 控制循环首先是控制循环，这个我认为是 k8s 的精髓，它通过一个循环来让整个系统趋向与我们申明的一 ...\n\n[![](https://image.cubox.pro/cardImg/45bjh0m0d5603oa7qmjfv5zahrxuhfps8mcso5w5wygt2g5du8.png?imageMogr2/quality/90/ignore-error/1)](https://www.linkinstars.com/post/5b37323a.html \"《一起读 kubernetes 源码》pause 你在哪里？\")\n\n[《一起读 kubernetes 源码》pause 你在哪里？](https://www.linkinstars.com/post/5b37323a.html \"《一起读 kubernetes 源码》pause 你在哪里？\")\n\n发表于2024-04-13\\|[kubernetes](https://www.linkinstars.com/categories/kubernetes/)\\|[kubernetes](https://www.linkinstars.com/tags/kubernetes/)\n\n📢 注意，该文本非最终版本，正在更新中，版权所有，请勿转载！！ 前言你有没有在 k8s 的 node 上敲过 docker ps 这个命令，我就干过。而出现的结果大概会是这样的： 1234root@10.0.10.102:\\~# docker psCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES5aa88e8d16ac xxxx \"/entrypoint.sh\" 3 days ago Up 3 days k8s_xxx-04e40566baa09 google_containers/pause:3.4.1 \"/pause\" 3 days ago Up 3 days k8s_POD_xxxx 你有没有好 ...\n\n[![](https://image.cubox.pro/cardImg/5rr6irqn5vebr07e3qp310251icurey9xc48aerd98fuls02a4.png?imageMogr2/quality/90/ignore-error/1)](https://www.linkinstars.com/post/c09dd4e8.html \"假如 Redis 里面有 1 亿个 key，其中有 10w 个 key 是以某个固定的已知的前缀开头的，如何将它们全部找出来？\")\n\n[假如 Redis 里面有 1 亿个 key，其中有 10w 个 key 是以某个固定的已知的前缀开头的，如何将它们全部找出来？](https://www.linkinstars.com/post/c09dd4e8.html \"假如 Redis 里面有 1 亿个 key，其中有 10w 个 key 是以某个固定的已知的前缀开头的，如何将它们全部找出来？\")\n\n发表于2024-04-01\\|[redis](https://www.linkinstars.com/categories/redis/)\\|[redis](https://www.linkinstars.com/tags/redis/)\n\n这个问题本身不难，但网上的教程答案让我很不理解，所以单独拿来吐槽一下 来源与网络的答案 我特意用了截图而不是贴链接。其中\"如何\"还打成了如果... 有什么问题？如果我是面试官，问了这个问题，如果你第一回答是 keys，那么恭喜你可以回去等通知了（言重了，说白了就不往下问了） 1 亿个，你知道什么概念吗？如果直接 keys 一下线上的数据不知道要阻塞多久，你下面的回答明明就知道答案偏偏把人家往沟里带... 但如果就只是如此，我也不用写这篇博客了，我想说的是 SCAN 也不是最优解 SCAN 有什么问题不卡，但是慢，下面是来源与网络的一个测试结果，Redis 性能问题诊断以及 scan 命令耗时分析 12345678910111213141516171819202122232425262728293031测试命令:./redis-benchmark -a xxxx -r 10000 -n 100 -c 8000 scan 0 match zhaobsh\\* count 1000010000个随机key, 测试100次, 使用 80000个client进行测试验证.被测试的命令为: scan ...\n\n[![](https://image.cubox.pro/cardImg/60jnropxzj2zw8mqp41xhnd3pwbhijlhnqkrbcziidupgzefdw.png?imageMogr2/quality/90/ignore-error/1)](https://www.linkinstars.com/post/22fd52ad.html \"不定期刊\")\n\n[不定期刊](https://www.linkinstars.com/post/22fd52ad.html \"不定期刊\")\n\n发表于2024-03-31\\|[Notion Paper](https://www.linkinstars.com/categories/Notion-Paper/)\n\n点我跳转查看 Notion Paper写在前面之前在博客装修的时候就提到过，对于之前的设计专栏确实不太适合我，写了一段时间之后发现太难了，所以就一直没有更新。但是我还是想要有一个专门的地方来记录一些自己的想法，所以就有了这个 Notion Paper。 这里会记录我日常看到的一些设计、产品、技术等等的一些想法。因为本身还是一个程序员，所以大多还是会有一些技术相关的内容，各种技术的使用用法也会在里面。 我特别喜欢报纸的展示形式，因为报纸有时候可以最大限度的展示信息，于是我就参考了报纸的形式和版式来设计这个 Notion Paper 的样子。希望你也会喜欢它。\n\n[![](https://image.cubox.pro/cardImg/42kbu53qeb5hzc2h6qgny7g3cj0bpon7a0cecfuqgapiojhnjh.png?imageMogr2/quality/90/ignore-error/1)](https://www.linkinstars.com/post/9c01a51a.html \"尝试 Google Gemma 模型 MacOS 本地部署\")\n\n[尝试 Google Gemma 模型 MacOS 本地部署](https://www.linkinstars.com/post/9c01a51a.html \"尝试 Google Gemma 模型 MacOS 本地部署\")\n\n发表于2024-03-15\\|[Gemma](https://www.linkinstars.com/categories/Gemma/)\\|[Gemma](https://www.linkinstars.com/tags/Gemma/)\n\n前言最近 Google 发布了 Gemma，是 Gemini 的低配版本，既然是 Google 出品那我一定要来吃螃蟹的。所以我本地部署了一个 7b 的版本来尝试使用一下看看效果。同时也来说明一些有关大模型本地部署使用的一些个人体会，比如，你可能会有以下问题： 怎么本地部署使用？ 我本地的电脑能不能跑？ 本地跑的效果到底怎么样？ 首先，我想敲醒你沉睡的脑子。对于本地部署模型，你先要问清楚自己想要的是什么？也就是为什么需要本地部署，如果仅仅是想跑着玩，那没问题。如果只是平常使用，并且你已经能用 GPT 了，本地其实对于你来说毫无意义，因为你指望你的小电脑哪怕是大显卡能和别人成吨的 A100 相比吗？（夸张的修辞） 如果，醒了还是想玩，那么可以往下看了，最后我会总结本地去跑有哪些优势。 如何部署这里我推荐两个： https://ollama.com/ https://jan.ai/ 这二者基本都已经做到了开箱即用的地步了，其中我会更喜欢 ollama 一点。所以我就简单列一下它的步骤（其实官网已经描述的非常详细了，也很简单 https://github.com/ollama/oll ...\n\n[![](https://image.cubox.pro/cardImg/9udqq3l1ao8bvrefaxr3pgidpbti4my2t8pbrt9jf5151h3w3.png?imageMogr2/quality/90/ignore-error/1)](https://www.linkinstars.com/post/4d353874.html \"什么是索引下推？\")\n\n[什么是索引下推？](https://www.linkinstars.com/post/4d353874.html \"什么是索引下推？\")\n\n发表于2024-03-10\\|[mysql](https://www.linkinstars.com/categories/mysql/)\\|[ICP](https://www.linkinstars.com/tags/ICP/)\n\n前言今天来水一篇 MySQL 的问题。什么是索引下推？其实很多概念都是被中文名字唬住了，这个概念并不复杂。如果看得懂英文，建议直接跳转 Index Condition Pushdown Optimization 回表这是一个前置知识点。当我们通过索引找到某条数据时，其实只是找到了它对应的 id，需要根据 id 回到原来的表里面把数据捞出来，这个过程就是回表。 索引下推直接用官方的例子说明：有一个索引 INDEX (zipcode, lastname, firstname) 有一个查询如下： 1234SELECT \\* FROM people WHERE zipcode='95054' AND lastname LIKE '%etrunia%' AND address LIKE '%Main Street%'; 本来是不能命中全部索引的，因为后面两个条件是左 % LIKE，当然最左匹配原则可以先利用 zipcode 定位到数据。下面就是关键了： 如果，没有索引下推，那么当找到这条数据时，需要回表找到原数据来判断是否满足条件 ...\n\n[![](https://image.cubox.pro/cardImg/mfb4xjfg3o0un4ilsymw7bznp3ohtpips8wqsr0b6arg0jl3b.png?imageMogr2/quality/90/ignore-error/1)](https://www.linkinstars.com/post/a9094f8b.html \"《一起读 kubernetes 源码》原来 k8s 也有 GC\")\n\n[《一起读 kubernetes 源码》原来 k8s 也有 GC](https://www.linkinstars.com/post/a9094f8b.html \"《一起读 kubernetes 源码》原来 k8s 也有 GC\")\n\n发表于2024-03-01\\|[kubernetes](https://www.linkinstars.com/categories/kubernetes/)\\|[kubernetes](https://www.linkinstars.com/tags/kubernetes/)\n\n📢 注意，该文本非最终版本，正在更新中，版权所有，请勿转载！！ 前言作为 k8s 的使用者而非维护者来说，对于 k8s 的 GC 其实是很难接触到的(几乎是无感的)。这也就是为什么标题写的惊讶 \"原来 k8s 也有 GC\"。GC 这个概念在很多语言中都有的，比如 Java 和 Golang，它就是帮助我们来回收垃圾的。在编程语言中，GC 主要是回收那些垃圾对象；那么相对于的 k8s 中，GC 需要回收哪些资源呢？今天的内容不复杂，源码里面都是那种很符合直觉的实现。 心路历程其实，我一开始最好奇的就是镜像，由于 docker 镜像的大小我们是可想而知的。就算是我们常常使用的本地电脑，磁盘都有可能被占用很多，更别提是服务器这种动不动就更新镜像的情况了。 码前提问 K8S 的 GC 回收哪些资源？ K8S 的 GC 什么时候运行？ K8S 的 GC 是谁运行的？ 源码分析今天的入口还是比较好找的，因为很明确的命名 GarbageCollection 找到它，肯定就是了。首先，我们依旧先来看接口 1234567// pkg/kubelet/kubelet.go:231// Bootst ...\n\n[![](https://image.cubox.pro/cardImg/4x5o1qrgkoq1payz1b15floyotrgb9bt2n6lpb9rd4ykgqklk7.png?imageMogr2/quality/90/ignore-error/1)](https://www.linkinstars.com/post/ce7cabf7.html \"博客装修(2024年3月)\")\n\n[博客装修(2024年3月)](https://www.linkinstars.com/post/ce7cabf7.html \"博客装修(2024年3月)\")\n\n发表于2024-02-29\\|[博客装修](https://www.linkinstars.com/categories/%E5%8D%9A%E5%AE%A2%E8%A3%85%E4%BF%AE/)\\|[hexo主题魔改](https://www.linkinstars.com/tags/hexo%E4%B8%BB%E9%A2%98%E9%AD%94%E6%94%B9/)\n\n却忆携诗花底看，回头又是一年春。不知不觉又一年过去了，每年 3 月都是博客装修的季节，但这次就不大折腾了。 butterfly 主题升级 更新主题版本至 4.13.0 https://github.com/jerryc127/hexo-theme-butterfly 其中我一个比较喜欢的优化是对于搜索的能力，现在感受比原来好用了很多。不过每次升级都是对于合并代码的一次巨大考验，这次我学乖了，直接把更新的配置文件内容全部拷贝进去改，这样就不会出现冲突了。这也让我对于配置一些软件配置文件的设计有了更好的认识，它们会加自定义的配置单独放在一个文件里，这样就不会影响到主配置文件的合并了，然后自定义的配置会覆盖默认的配置。xxxx.custom.yaml -\\> xxxx.yaml 评论系统去年评论组件换成了自建的 twikoo 很喜欢，配置简单。 修改评论回复邮件之前我看到了 Twikoo评论回复邮件模板 我一直没来的及修改，这次我终于修改了，总的样子没变，细节调整了一点点。 修改之后大概是这样的： 需要注意的是：MAIL_TEMPLATE 和 MAIL_TEMPLATE_ADMI ...\n\n[![](https://image.cubox.pro/cardImg/36qgo233le6fx394atyb8hgendoc74otq6rjvsom967ydgsvlo.png?imageMogr2/quality/90/ignore-error/1)](https://www.linkinstars.com/post/1f561783.html \"Vditor 如何离线使用？\")\n\n[Vditor 如何离线使用？](https://www.linkinstars.com/post/1f561783.html \"Vditor 如何离线使用？\")\n\n发表于2024-02-15\\|[vditor](https://www.linkinstars.com/categories/vditor/)\\|[vditor](https://www.linkinstars.com/tags/vditor/)\n\n前言Vditor 是一款所见即所得的浏览器端 Markdown 编辑器。 GitHub：https://github.com/Vanessa219/vditor 官网：https://b3log.org/vditor/ 个人使用它有两个原因： 相比于同类型的，确实很好看，之前用过一段时间 Typora ，收费之后就没用了，效果上很类似（所见即所得） Markdown 引擎是开源的 lute ，当我需要一个前后端相同渲染效果的引擎时，它就很不错了 基本使用就不多说了，文档很详细，功能也很全面，看看就知道了，本文是由于再离线环境下使用的过程中发现 Vditor 需要依赖外部 CDN 资源，所以踩了一些坑。 基本步骤网络上有 Vditor 的 CDN 但无法直接拿来用，除非你是原生 HTML。如果你直接配置网络的地址到 CDN 的配置会发现路径多了一个 dist。当然，官方也支持自建 CDN，将源码放到 nginx 里面去也可以，但这样单独部署很麻烦。我还是希望打包到一起去。其实作者在 issue 里面已经说了，挺容易理解的，过程也就基本是这样。 修改配置12345678910111 ...\n\n[![](https://image.cubox.pro/cardImg/4jipzyq3s8es9pj47r8u02lqolejcglu5tzv1l479opuhu3q12.png?imageMogr2/quality/90/ignore-error/1)](https://www.linkinstars.com/post/49df00cd.html \"密码还在用 MD5 加盐？不如试试 Bcrypt\")\n\n[密码还在用 MD5 加盐？不如试试 Bcrypt](https://www.linkinstars.com/post/49df00cd.html \"密码还在用 MD5 加盐？不如试试 Bcrypt\")\n\n发表于2024-01-31\\|[Bcrypt](https://www.linkinstars.com/categories/Bcrypt/)\\|[Bcrypt](https://www.linkinstars.com/tags/Bcrypt/)\n\n很长一段时间我也是用 MD5 + 盐 来解决绝大多数密码的问题的，因为确实很方便。不过，从安全的角度来说，还是有风险，那就干脆直接上 Bcrypt 吧。 MD5 + salt其实，在大多场景够用了，毕竟 hash 和 salt 同时被黑的概率太低了，不过其实 MD5 最大的问题不是到不是这个，而是算的太快了，随着计算能力的发展总会是有概率被破解的。 1password_hash = md5(password+salt) Bcrypt 的特点 hash 不可逆 随机 salt 可调整的计算 cost 上代码不多说，直接上代码，看怎么用，然后再分析。 123456789101112131415161718192021222324252627282930package mainimport ( \"fmt\" \"golang.org/x/crypto/bcrypt\")func main() { password := \"123456\" fmt.Printf(\"第一次加密后的密码: %s\\\\n\", en ...\n\n[![](https://image.cubox.pro/cardImg/1g9ask7qwa4za00175xdduhdldjof2tc9oejivytkouuu8lk2t.png?imageMogr2/quality/90/ignore-error/1)](https://www.linkinstars.com/post/1ebebc96.html \"折腾你的输入法\")\n\n[折腾你的输入法](https://www.linkinstars.com/post/1ebebc96.html \"折腾你的输入法\")\n\n发表于2024-01-15\\|[输入法](https://www.linkinstars.com/categories/%E8%BE%93%E5%85%A5%E6%B3%95/)\\|[输入法](https://www.linkinstars.com/tags/%E8%BE%93%E5%85%A5%E6%B3%95/)\n\n想不到有一天我居然会折腾我的输入法... 作为一个折腾的孩子，折腾各种硬件软件是常有的事情，但最近发现了一个输入法，然后掉进了另一个圈子。这个输入法就是：中州韵输入法引擎 RIME，在 mac 上名字叫鼠须管。今天简单记录在 MacOS 下安装和使用的配置过程。 优点 隐私：这个引擎开源的，不可能出现上传你输入的内容到云上的情况 快速：不联网一定比你联网输入要快，但也不联想（所以这个快速因人而异） 高度自定义：想怎么定义都行，可以用自己的词库 缺点 安装和配置有大门槛，当然难不倒我们搬砖的 安装 RIME我直接用 brew 安装就完事了，当然你也可以官网下载 1brew install --cask squirrel 安装完成之后，第一个坑就出现了，输入法并不会直接显示出来，你需要主动添加。 我一开始找了半天，一直以为没有安装成功😢 安装 plumplum(東風破) 是 RIME 的配置管理工具 1curl -fsSL https://raw.githubusercontent.com/rime/plum/master/rime-install \\| bash 安装 雾凇拼音雾凇 ...\n\n[![](https://image.cubox.pro/cardImg/3etrdyj3wimmjrzmb5avwjrvwmhkowqy6pqgjlagoj2x3h77ez.png?imageMogr2/quality/90/ignore-error/1)](https://www.linkinstars.com/post/7cd1f793.html \"2023 读书总结\")\n\n[2023 读书总结](https://www.linkinstars.com/post/7cd1f793.html \"2023 读书总结\")\n\n发表于2023-12-31\\|[reading](https://www.linkinstars.com/categories/reading/)\\|[reading](https://www.linkinstars.com/tags/reading/)\n\n2023 年度读书总结 读书列表 仅罗列，顺序是随机。怕链接会过期，失效的建议直接搜书名。 《高并发系统实战派：集群、Redis缓存、海量存储、Elasticsearch、RocketMQ、微服务、持续集成等》 《性能之巅》 《呼啸山庄》 《Go语言设计模式》 《程序员的底层思维》 《浪潮之巅》 《System Design Interview》 《消失的13级台阶》 《深入理解Linux网络： 修炼底层内功，掌握高性能原理》 《图解HTTP》 《手机大脑》 《小米创业思考》 《BPF之巅》 《英语自学手册》 《聚沙成塔：Go语言构建高性能、分布式爬虫项目》 《深入架构原理与实践》 《现代 Web 布局》 《写给大家看的设计书》 《高并发的哲学原理》 《心流管理魔方》 2023 最佳 并不是说其他的书不好，而是它对我的影响最大，印象最深刻 《深入理解Linux网络： 修炼底层内功，掌握高性能原理》 今年最佳颁给它，一方面是它对我技术提高是最大的，另一方面是读的过程中真的有深入浅出的感觉。十分推荐。 打卡日历 使用 DailyCards 确实 push 了自己很多。Prese ...\n\n[![](https://image.cubox.pro/cardImg/2l8twqjbeti7y4owagbal3o87i3nc3dwvbzacjgefwcyh5hyjq.png?imageMogr2/quality/90/ignore-error/1)](https://www.linkinstars.com/post/26ebf32c.html \"2023 re:Invent 利用 PartyRock 10 分钟构建你的 AI 应用\")\n\n[2023 re:Invent 利用 PartyRock 10 分钟构建你的 AI 应用](https://www.linkinstars.com/post/26ebf32c.html \"2023 re:Invent 利用 PartyRock 10 分钟构建你的 AI 应用\")\n\n发表于2023-12-15\\|[reInvent](https://www.linkinstars.com/categories/reInvent/)\\|[reInvent](https://www.linkinstars.com/tags/reInvent/)\n\n前言一年一度的亚马逊云科技的 re:Invent 可谓是全球云计算、科技圈的狂欢，每次都能带来一些最前沿的方向标，这次也不例外。在看完一些 keynote 和介绍之后，我也去亲自体验了一些最近发布的内容。其中让我感受最深刻的无疑是 PartyRock 了。PartyRock 真的算是做到了：能让任何人快速的构建一个属于自己的 AI 应用。当然，本文最后也分享我对于其他在 re:Invent 上提到的一些看法和思考。 那么，不多说，先来看看今天的主角 PartyRock。 PartyRock 简介 Everyone can build AI apps. 这句话是 PartyRock 首页的一句话，它就是 PartyRock 的最好的功能概括了。 去年到今年 AI 相关的应用层出不穷，GEN AI 已经太多了。到目前为止，其实我本人已经有点审美疲劳了，因为该看的都看的差不多了，所以说实话体验之前，我并没有对 PartyRock 带有很大期望，最多是体验完了之后厚脸皮来一句 \"不过如此\"。结果体验完成之后发现我说的是： 使用体验下面我就用我自己制做的两个应用和一个官方的应用来说明一下它的 ...\n\n[![](https://image.cubox.pro/cardImg/3uasw92g98531o9h7kgsupeu6z440j7vz32x9dmqvgqpqf4izl.png?imageMogr2/quality/90/ignore-error/1)](https://www.linkinstars.com/post/85891934.html \"看腾讯 CodeReview 有感\")\n\n[看腾讯 CodeReview 有感](https://www.linkinstars.com/post/85891934.html \"看腾讯 CodeReview 有感\")\n\n发表于2023-11-30\\|[code-review](https://www.linkinstars.com/categories/code-review/)\\|[CleanCode](https://www.linkinstars.com/tags/CleanCode/)\n\n前言之前，我看了腾讯发布的两篇有关代码规范以及 Code Review 相关的文章，作者是 林强 大佬。 《鹅厂练习13年Coding后，我悟了》 《腾讯工作13年之所思所想，那些优秀程序员的共性特征》 里面提到了很多有关代码相关的思考，以及一些价值观的传递，从中我也学到了很多（算是大厂内部一瞥吧）。非常推荐没看过的同学看看鹅厂是如何做 CR 的。文中的 CR 也是对 go 的，所以我看起来比较亲切。故，在这里总结一下其中对我来说意义比较大的。 之前，我看了《重构》之后也写了一下读后感，所以相同的部分我就不在本文中列举了。 《鹅厂练习13年Coding后，我悟了》 01 细节即是架构：在这里更多的体现在代码的组织结构和也是一种架构。 02 代码和文档在一起：有两个好处，不容易丢失，可以同时被维护。 05 全局变量的危害并不仅仅是造成了耦合，在大项目中，你完全不知道以后是否会有人去修改这个变量。 07 可逆性原则：我的总结是，永远不要相信产品经理跟你说 \"这个以后不会改了，现在写死就好\"，回头半夜加班的还是你。 11 尽早崩溃：并不是说你遇到问题就 panic，也并不是说你不能写 ...\n\n[![](https://image.cubox.pro/cardImg/4gkkhl0zh2dj2aogcmwo1xc6hr7uu2azwu2ahjrisi54rp0769.png?imageMogr2/quality/90/ignore-error/1)](https://www.linkinstars.com/post/d01c048f.html \"针对小项目 docker 镜像自动更新部署的方案\")\n\n[针对小项目 docker 镜像自动更新部署的方案](https://www.linkinstars.com/post/d01c048f.html \"针对小项目 docker 镜像自动更新部署的方案\")\n\n发表于2023-11-15\\|[watchtower](https://www.linkinstars.com/categories/watchtower/)\\|[watchtower](https://www.linkinstars.com/tags/watchtower/)\n\n对于一些个人的小项目来说，没必要也没能力上一些大型 devops 工具(如 jenkins，argocd) 时， 有一些小工具往往非常好用 当我们 ci 打包完成 docker 镜像之后需要 cd (部署)时，如果没有工具，有时候特别麻烦，而一些大型的重工具往往对于小项目来说并不合适。今天要说的一个小工具就是 watchtower。 地址： https://github.com/containrrr/watchtower/ 介绍功能 定时对比当前机器上的启动着的容器，如果发现新版本的镜像则停止、拉取、重启以更新容器 支持 cron 指定对比时间 支持指定容器 支持更新后进行通知 适用场景 单机小项目 启停间隔无所谓 docker 镜像 latest 一把梭 使用使用部署非常简单，一个 docker-compose 就能说清楚所有基础能力 12345678910111213version: \"3\"services: watchtower: image: containrrr/watchtower environment: - TZ=A ...\n\n[![](https://image.cubox.pro/cardImg/ciav4tmtt1l1bsktrvo37pq2p5vd1b8wzzmn651m8uckz5n1f.png?imageMogr2/quality/90/ignore-error/1)](https://www.linkinstars.com/post/cd3cbcbf.html \"《一起读 kubernetes 源码》pod 的资源限制和驱逐\")\n\n[《一起读 kubernetes 源码》pod 的资源限制和驱逐](https://www.linkinstars.com/post/cd3cbcbf.html \"《一起读 kubernetes 源码》pod 的资源限制和驱逐\")\n\n发表于2023-10-30\\|[kubernetes](https://www.linkinstars.com/categories/kubernetes/)\\|[kubernetes](https://www.linkinstars.com/tags/kubernetes/)\n\n📢 注意，该文本非最终版本，正在更新中，版权所有，请勿转载！！ 前言资源在 k8s 中是一个非常重要的关键因素，一些运维事故往往也就是因为一些资源限制设置的不合理而导致的。而合理的设置资源也是一门学问和经验，最近不停地被提及的 \"降本增效\" 通常也伴随着资源设置的优化。对于一个应用应该设置多少内存和 CPU，我觉得这不是我们在这里应该学习的（这都是实战经验积累的）。而我们需要知道的是，这些限制条件何时会被检查，会被谁检查，超过限制条件会引发什么问题。 这对于我们来说很重要，一方面实际出现问题，我们可以迅速知道原因；另一方面，这些限制条件还会和之后的调度、自动扩容/缩容有关系。所以本章节我们来看看它。 前置知识 cgroup resources 的配置：limits、requests epoll 码前提问 pod 的资源限制条件何时会被检查？ pod 何时会被驱逐？ pod 驱逐的策略是什么？ 源码分析寻码过程这次的寻码就有点艰难了。我的第一个落脚点是 pkg/kubelet/eviction/eviction_manager.go 我没有直接去找 limit 和 r ...\n\n[![](https://image.cubox.pro/cardImg/4usrofgbo0vw0dyzark4vd54aorcatm71f9uhh1qexvmrzotmv.png?imageMogr2/quality/90/ignore-error/1)](https://www.linkinstars.com/post/9994a3e5.html \"《一起读 kubernetes 源码》probe 监控 pod 状态\")\n\n[《一起读 kubernetes 源码》probe 监控 pod 状态](https://www.linkinstars.com/post/9994a3e5.html \"《一起读 kubernetes 源码》probe 监控 pod 状态\")\n\n发表于2023-10-15\\|[kubernetes](https://www.linkinstars.com/categories/kubernetes/)\\|[kubernetes](https://www.linkinstars.com/tags/kubernetes/)\n\n📢 注意，该文本非最终版本，正在更新中，版权所有，请勿转载！！ 前言当我们知道了 pod 的生命周期，那么 k8s 如何知道一个 pod 的健康状态呢？就是通过今天要说的 Probe 也就是探针来检查 pod 的状态。一方面可以监控 pod 的健康状态，重启不健康的 pod；另一方面还可以监控 pod 的服务状态，当 pod 能提供服务时才会将流量打进来。 前置知识 livenessProbe readinessProbe startupProbe 要知道这三种探针的能力 https://kubernetes.io/zh-cn/docs/concepts/workloads/pods/pod-lifecycle/#types-of-probe 心路历程探针这个东西就和 request limit 一样，你不配置的话，绝大多数适合，使用起来也问题不大。甚至在一开始的时候我都没注意到这个配置，但是当你的服务非常注重 SLA(承诺服务可用性) 或者你的容器出现了异常，无法服务又没有正确退出的时候，这个配置就显得非常有用了。而在实际中，不合适的探针配置也可能会导致奇怪的问题。 所以，针 ...\n\n[![](https://image.cubox.pro/cardImg/2uhhkp44kdtv8ckbo23pf8zarcxtsw9x6baroy382lmyupzqw5.png?imageMogr2/quality/90/ignore-error/1)](https://www.linkinstars.com/post/9eaebe8c.html \"《一起读 kubernetes 源码》kubelet 如何创建 pod？\")\n\n[《一起读 kubernetes 源码》kubelet 如何创建 pod？](https://www.linkinstars.com/post/9eaebe8c.html \"《一起读 kubernetes 源码》kubelet 如何创建 pod？\")\n\n发表于2023-09-30\\|[kubernetes](https://www.linkinstars.com/categories/kubernetes/)\\|[kubernetes](https://www.linkinstars.com/tags/kubernetes/)\n\n📢 注意，该文本非最终版本，正在更新中，版权所有，请勿转载！！ 前言pod 是 k8s 调度的最小单位，也就是整个 k8s 的基础之一，那么如何创建 pod 就是我们今天的关键了。这也是为什么我将它放在第一章的原因。 前置知识 什么是 pod？ 什么是 kubelet？ pod 的生命周期？ 心路历程想看 k8s 源码，我不知如何下手，肯定是挑最熟悉最基础的部分，pod 肯定就是其中之一。而且日常的使用也让我们更熟悉 pod 的生命周期，所以我准备从 pod 入手。那么我知道 kubelet 作为操作 pod 的关键，那肯定就是代码的重点。于是我直接在代码中搜 kubelet，找到对应文件名称为 kubelet 的文件，应该就是我们今天的目标了。 1pkg/kubelet/kubelet.go 然后开始聚焦，由于源码很多，不可能面面俱到，所以一开始我们就要设定范围，看什么，不看什么。而我们今天的目标就是 pod 的创建 其他都和我们没有关系。所以，kubelet 本身的初始化等其他细节我们看到就略过。 码前提问看源码之前都自己先提出一些问题，这些问题能帮助我们更快的进入状态， ...\n\n[![](https://image.cubox.pro/cardImg/5ywlrx8qephdu54tumt2zx73wahletjocj7dwgvylw9g00e4se.png?imageMogr2/quality/90/ignore-error/1)](https://www.linkinstars.com/post/af5f8fe8.html \"《一起读 kubernetes 源码》序\")\n\n[《一起读 kubernetes 源码》序](https://www.linkinstars.com/post/af5f8fe8.html \"《一起读 kubernetes 源码》序\")\n\n发表于2023-09-15\\|[kubernetes](https://www.linkinstars.com/categories/kubernetes/)\\|[kubernetes](https://www.linkinstars.com/tags/kubernetes/)\n\n📢 注意，该文本非最终版本，正在更新中，版权所有，请勿转载！！ 这个系列准备带领大家一起读 kubernetes 源码，推荐给下面的人群： 不敢读源码 读不懂源码 不清楚 kubernetes 内部具体实现 其实，我最大目标是通过这个系列让你明白，读源码的方法和技巧以及为什么要读源码。 其实我写 kubernetes 源码分析的文章已经 3 个版本了，这是 3 个。第一次是刚学，写了 3-4 篇，没发布，就流产了。第 2 次是写了很多发现写的不好，切入点还是太诡异了，太难理解，所以也放弃了。现在，我终于发现一个可以切入的点，并且基于这么长一段时间的积累，希望能把这个系列最好的版本写出来。 需要准备 看代码的工具：我用的是 Goland。代码我都贴了位置信息(例如: pkg/kubelet/kubelet.go:2387)，在 Goland 中可以直接双击 Shift，贴入代码位置直接跳转。 kubernetes release-1.28 版本的代码（希望你看到文章的时候这个版本相对新一点吧\\~） 你需要有 kubernetes 实际使用经验以及基本概念 注意事项 该系列不会包 ...\n\n[![](https://image.cubox.pro/cardImg/4scm75a0039jwz1bn89cig3tjha5zp56zz2dzxohy989skrf61.png?imageMogr2/quality/90/ignore-error/1)](https://www.linkinstars.com/post/dbe65928.html \"Nginx 是如何解决惊群效应的？\")\n\n[Nginx 是如何解决惊群效应的？](https://www.linkinstars.com/post/dbe65928.html \"Nginx 是如何解决惊群效应的？\")\n\n发表于2023-09-07\\|[nginx](https://www.linkinstars.com/categories/nginx/)\\|[epoll](https://www.linkinstars.com/tags/epoll/)\n\n前置知识 linux 网络处理的基本方法：bind listen accept epoll 的基本方法：epoll_create epoll_ctl epoll_wait 什么是惊群效应？第一次听到的这个名词的时候觉得很是有趣，不知道是个什么意思，总觉得又是奇怪的中文翻译导致的。 复杂的说（来源于网络）TLDR; 惊群效应（thundering herd）是指多进程（多线程）在同时阻塞等待同一个事件的时候（休眠状态），如果等待的这个事件发生，那么他就会唤醒等待的所有进程（或者线程），但是最终却只能有一个进程（线程）获得这个时间的\"控制权\"，对该事件进行处理，而其他进程（线程）获取\"控制权\"失败，只能重新进入休眠状态，这种现象和性能浪费就叫做惊群效应。 简单的讲（我的大白话） 有一道雷打下来，把很多人都吵醒了，但只有其中一个人去收衣服了。也就是：有一个请求过来了，把很多进程都唤醒了，但只有其中一个能最终处理。 原因\\&问题说起来其实也简单，多数时候为了提高应用的请求处理能力，会使用多进程（多线程）去监听请求，当请求来时，因为都有能力处理，所以就都被唤醒了。 而问题就是，最 ...\n\n[![](https://image.cubox.pro/cardImg/24nhcieo0lw3zzqai9xv2rsj2mdnsumtmyyx7loy3f8uhjo0x5.png?imageMogr2/quality/90/ignore-error/1)](https://www.linkinstars.com/post/4b317b1b.html \"Docker 构建多架构镜像并推送仓库\")\n\n[Docker 构建多架构镜像并推送仓库](https://www.linkinstars.com/post/4b317b1b.html \"Docker 构建多架构镜像并推送仓库\")\n\n发表于2023-08-31\\|[docker](https://www.linkinstars.com/categories/docker/)\\|[buildx](https://www.linkinstars.com/tags/buildx/)\n\n前言原本多架构其实我还遇到的不算多，但自从苹果的 M1 出来之后 arm64 版本支持就变成了一个常态，所以会常遇到需要多架构镜像都构建的情况。以前的 docker 版本需要你去编写 manifest 很麻烦，而今天就说说如何使用 docker buildx 来同时构建多架构的镜像，其实现在已经非常方便了。 目标：构建出 amd64 和 arm64 的 docker 镜像 创建 builder默认你在 docker build 的时候直接指定 --platform linux/arm64,linux/amd64 就会报错，告诉你需要使用 docker buildx 而前提是你需要有一个 builder 12$ docker buildx create --name mybuilder --driver docker-container$ docker buildx use mybuilder Linux 非 arm 下可能需要你先安装 https://github.com/tonistiigi/binfmt#installing-emulators 以支持 arm 平台的打包 ...\n\n[![](https://image.cubox.pro/cardImg/2nehwcujpp4dintbsio9o16dyje7dspts4orxia3s4fakdd04c.png?imageMogr2/quality/90/ignore-error/1)](https://www.linkinstars.com/post/8564590b.html \"Redis List 设计与实现\")\n\n[Redis List 设计与实现](https://www.linkinstars.com/post/8564590b.html \"Redis List 设计与实现\")\n\n发表于2023-08-20\\|[redis](https://www.linkinstars.com/categories/redis/)\\|[redis](https://www.linkinstars.com/tags/redis/)•[listpack](https://www.linkinstars.com/tags/listpack/)\n\n前言之前我们已经讨论过 Sorted Set 在 Redis 的实现，学习到了 Redis 在不同数据量的时候使用了不同的结构来优化存储和性能，并且使用两种不同的数据结构的组合来进一步优化。而今天要讨论的 List 也如出一辙。 ListList 就是我们常见的列表，在很多语言中都有实现，无论是数组还是链表，它最终的表现形式都差不多，都是一个\"长长的数据\"，而对于不同的底层实现，所对应的操作带来的性能也不同。比如在 java 中就有 LinkedList 和 ArrayList。而 Redis 是如何做的呢？ 如果你对 Redis 的 List 使用并不是很熟悉，建议下查看一下它所有支持的命令 https://redis.io/commands/?group=list 老版本在 Redis 的老版本中 list 的实现和 Sorted Set 策略类似，对于不同数据量的情况下实现是不一样的。在数据量小的时候，使用的也是 ziplist 也就是压缩列表（可以看做数组），而当数据量变大触发条件时，就变成了 linkedlist 也就是双向链表。 ziplist 就是通过数据的长度来定 ...\n\n[![](https://image.cubox.pro/cardImg/1yltoztascn8dtfiznc5b2aqkfksmbkfqqw0cmvkpwsx9m4g39.png?imageMogr2/quality/90/ignore-error/1)](https://www.linkinstars.com/post/4845bfa5.html \"Redis Sorted Set 实现与应用\")\n\n[Redis Sorted Set 实现与应用](https://www.linkinstars.com/post/4845bfa5.html \"Redis Sorted Set 实现与应用\")\n\n发表于2023-08-08\\|[redis](https://www.linkinstars.com/categories/redis/)\\|[redis](https://www.linkinstars.com/tags/redis/)•[zset](https://www.linkinstars.com/tags/zset/)\n\n前言 在没有真正认识 Redis 之前，你可能都低估了它 一开始对于 Redis 我们的认识都是一个 key:value 的缓存，当然用的最多的也就是这个作用。但随着 Redis 的不断发展，慢慢的我就发现它有的功能越来越多，它可能在一定程度上帮我们快速简化一些高并发场景下的开发。我觉得它其中最重要的设计是它的 数据结构 。通过几个基础的数据结构的组合，就能实现一些高性能的结构。比如我们今天要讨论的 Sorted Set 就是这样一个结构。由于 Redis 中称为 zset 所以后文中为了简化直接也叫 zset。 什么是 Sorted Set我觉得可能很多同学还没有用过，其实非常容易理解，就是一个有序的集合，无论你以什么顺序添加元素，最终都会根据分数排成一个有序的集合。通过它我们可以快速获得一个组数据的最高的几个值。 猜测实现堆？没错，我的第一反应也是这个，要实现一个这样的结构最先想到的就是堆或者说是优先队列的实现，完美匹配。 但，不对，我们知道，对于堆，我们只能快速得到最大或最小值。而对于 zset 其中有一个方法是 ZRANGE key start stop 也就是可以获取一个范 ...\n\n[![](https://image.cubox.pro/cardImg/2mi9fprh91bvnqg0ci9pdqcpg3q6tn37958e4f3cwgy3oulrie.png?imageMogr2/quality/90/ignore-error/1)](https://www.linkinstars.com/post/44bf25b9.html \"快速上手 K8S Operator\")\n\n[快速上手 K8S Operator](https://www.linkinstars.com/post/44bf25b9.html \"快速上手 K8S Operator\")\n\n发表于2023-08-04\\|[kubernetes](https://www.linkinstars.com/categories/kubernetes/)\\|[k8s-operator](https://www.linkinstars.com/tags/k8s-operator/)\n\n前言如果你想要对 K8S 做二次开发或者说在原有的基础上封装一些功能让开发者更加好用，那么 Operator 的用法你可必须掌握。 什么是 Operator我觉得 Operator 真的是 K8S 扩展设计的非常巧妙的一点，它好像一个插件系统，你有了它就好像有了 k8s 的一个扩展操作权，能扩展出各种各样的用法。那什么是 Operator 呢？这需要从 CRD 说起。 CRD首先我们需要知道第一个概念就是 CRD(Custom Resource Define)，自定义资源定义，顾名思义就是使用者可以通过 CRD 来创建自定义的资源。我们知道在 K8S 中有各种各样的资源 Pod、Deployment、StatefulSet... 在编写 yaml 文件的时候会指定对应的资源类型。 官方文档：Create a CustomResourceDefinition 其中有一个实际的 CustomResourceDefinition 案例 123456789101112131415161718192021222324252627282930313233343536373839404142434445 ...\n\n[![](https://image.cubox.pro/cardImg/4df9vor3yn568v28cvce41z9ib3idi34vbj9i2fdcial1mnchd.png?imageMogr2/quality/90/ignore-error/1)](https://www.linkinstars.com/post/e8d77938.html \"Golang 中 能否将 slice 作为 map 的 key？\")\n\n[Golang 中 能否将 slice 作为 map 的 key？](https://www.linkinstars.com/post/e8d77938.html \"Golang 中 能否将 slice 作为 map 的 key？\")\n\n发表于2023-07-31\\|[go](https://www.linkinstars.com/categories/go/)\\|[map](https://www.linkinstars.com/tags/map/)\n\n前言最近好忙，也好久没水 Golang 的文章了，最近来水一些。说回今天的问题，这个问题非常简单，也能被快速验证。 Golang 中 能否将 slice 作为 map 的 key？ 如果你现实中使用过，那么这个问题对于你来说其实意义不大，因为不行就是不行，可以就是可以。 如果你完全没这样使用过 map，那么这个问题对于你来说可能就有意义了。 思路 首先这个问题的思路在于能否作为 key 的条件是什么？ key 在 map 中的作用是标记一个 kv，我们需要用 key 去查找对应的 value 那么我怎么知道，一个输入的 key 是否在这个 map 中呢？答案是比较 所以只要这个 key 能比较，说白了就是能使用 \"",
        "tags": [],
        "line": 77,
        "startOffset": 5657,
        "endOffset": 34533,
        "filePath": "Sources/CuboxSync/LinkinStar's Blog-2024-09-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141664,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/Istio资源以及和Kubernetes资源扭转关系-2023-12-21.md": [
      {
        "id": "qj5dczxxl",
        "text": "&mid=2247536235&idx=1&sn=f964b611fa8c4c2cf3f95d26a5c3db1f&chksm=e8c430eadfb3b9fcb5871e4f044ebc934eb35e164fbf94d462662b456a3e10a9678401d8bc0c&token=1573400153&lang=zh_CN&scene=21#wechat_redirect)\r\n\r\n[![图片](https://image.cubox.pro/cardImg/2023122114525193371/88445.jpg?imageMogr2/quality/90/ignore-error/1)](https://mp.weixin.qq.com/s?__biz=MzIzNzU5NTYzMA",
        "tags": [],
        "line": 390,
        "startOffset": 7999,
        "endOffset": 8356,
        "filePath": "Sources/CuboxSync/Istio资源以及和Kubernetes资源扭转关系-2023-12-21.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141904,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/Go 泛型之泛型约束 - 贾维斯Echo - 博客园-2023-12-28.md": [
      {
        "id": "wma53q4lz",
        "text": " t1 { // 编译器报错：invalid operation: a ",
        "tags": [],
        "line": 128,
        "startOffset": 3636,
        "endOffset": 3676,
        "filePath": "Sources/CuboxSync/Go 泛型之泛型约束 - 贾维斯Echo - 博客园-2023-12-28.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141393,
        "isNativeComment": false
      },
      {
        "id": "t4xombfz0",
        "text": "`）或不等性比较（`!=`）操作，我们就需要更换约束，这就引出了 Go 内置的另外一个预定义约束：`comparable`。\r\n\r\n## 三、支持比较操作的内置约束：comparable\r\n\r\nGo 泛型提供了预定义的约束：`comparable`，其定义如下：\r\n\r\n    // $GOROOT/src/builtin/buildin.go\r\n\r\n    // comparable is an interface that is implemented by all comparable types\r\n    // (booleans, numbers, strings, pointers, channels, arrays of comparable types,\r\n    // structs whose fields are all comparable types).\r\n    // The comparable interface may only be used as a type parameter constraint,\r\n    // not as the type of a variable.\r\n    type comparable interface{ comparable }\r\n\r\n不过从上述这行源码我们仍然无法直观看到 `comparable` 的实现细节，Go 编译器会在编译期间判断某个类型是否实现了 `comparable` 接口。\r\n\r\n根据其注释说明，所有可比较的类型都实现了 `comparable` 这个接口，包括：布尔类型、数值类型、字符串类型、指针类型、`channel` 类型、元素类型实现了 `comparable` 的数组和成员类型均实现了 `comparable` 接口的结构体类型。下面的例子可以让我们直观地看到这一点：\r\n\r\n    // comparable.go\r\n\r\n    type foo struct {\r\n        a int\r\n        s string\r\n    }\r\n\r\n    type bar struct {\r\n        a  int\r\n        sl []string\r\n    }\r\n\r\n    func doSomething[T comparable](t T) T {\r\n        var a T\r\n        if a ",
        "tags": [],
        "line": 136,
        "startOffset": 3897,
        "endOffset": 4936,
        "filePath": "Sources/CuboxSync/Go 泛型之泛型约束 - 贾维斯Echo - 博客园-2023-12-28.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141654,
        "isNativeComment": false
      },
      {
        "id": "jm18cw69e",
        "text": " zero { // 编译器报错：invalid operation: v ",
        "tags": [],
        "line": 241,
        "startOffset": 6991,
        "endOffset": 7033,
        "filePath": "Sources/CuboxSync/Go 泛型之泛型约束 - 贾维斯Echo - 博客园-2023-12-28.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141748,
        "isNativeComment": false
      },
      {
        "id": "kt324kz10",
        "text": " zero {\r\n                continue\r\n            }\r\n            ret = append(ret, v.String())\r\n        }\r\n        return ret\r\n    }\r\n\r\n    type MyString string\r\n\r\n    func (s MyString) String() string {\r\n        return string(s)\r\n    }\r\n\r\n    func main() {\r\n        sl := StringifyWithoutZero([]MyString{\"I\", \"\", \"love\", \"\", \"golang\"}) // 输出：[I love golang]\r\n        fmt.Println(sl)\r\n    }\r\n\r\n在这个示例里，我们自定义了一个 `Stringer` 接口类型作为约束。在该类型中，我们不仅定义了 `String` 方法，还嵌入了 `comparable`，这样在泛型函数中，我们用 `Stringer` 约束的类型参数就具备了进行相等性和不等性比较的能力了！\r\n\r\n但我们的示例演进还没有完，现在相等性和不等性比较已经不能满足我们需求了，我们还要为之加上对排序行为的支持，并基于排序能力实现下面的 `StringifyLessThan` 泛型函数：\r\n\r\n    func StringifyLessThan[T Stringer](s []T, max T) (ret []string) {\r\n        var zero T\r\n        for _, v := range s {\r\n            if v ",
        "tags": [],
        "line": 262,
        "startOffset": 7665,
        "endOffset": 8429,
        "filePath": "Sources/CuboxSync/Go 泛型之泛型约束 - 贾维斯Echo - 博客园-2023-12-28.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141422,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/GitHub上5.4k+Star爆火，构建生产级Agent 的12因素-2025-07-06.md": [
      {
        "id": "a6i7smwc7",
        "text": " 'create_payment_link':\n        stripe.paymentlinks.create(nextStep.parameters)\n        return# 执行后续逻辑\n    elif nextStep.function ",
        "tags": [],
        "line": 84,
        "startOffset": 3562,
        "endOffset": 3696,
        "filePath": "Sources/CuboxSync/GitHub上5.4k+Star爆火，构建生产级Agent 的12因素-2025-07-06.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1751807066168,
        "isNativeComment": false
      },
      {
        "id": "nt45k5b7v",
        "text": "&mid=2247500813&idx=1&sn=85ce2f98662b5809aa9f582405190d24&scene=21#wechat_redirect)》很多框架提供的黑盒方法看起来很方便：\n\n**框架的黑盒方法（不推荐）：**\n\n    agent = Agent(\n      role=\"...\",\n      goal=\"...\",\n      personality=\"...\",\n      tools=[tool1, tool2, tool3]\n    )\n\n    task = Task(\n      instructions=\"...\",\n      expected_output=OutputModel\n    )\n\n    result = agent.run(task)\n\n**更好的做法是完全拥有您的提示词：**\n\n    function DetermineNextStep(thread: string) -> DoneForNow | ListGitTags | DeployBackend | DeployFrontend | RequestMoreInformation {\n      prompt #\"\n        {{ _.role(\"system\") }}\n        \n        You are a helpful assistant that manages deployments for frontend and backend systems.\n        You work diligently to ensure safe and successful deployments by following best practices\n        and proper deployment procedures.\n        \n        Before deploying any system, you should check:\n        - The deployment environment (staging vs production)\n        - The correct tag/version to deploy\n        - The current system status\n        \n        You can use tools like deploy_backend, deploy_frontend, and check_deployment_status\n        to manage deployments. For sensitive deployments, use request_approval to get\n        human verification.\n        \n        Always think about what to do first, like:\n        - Check current deployment status\n        - Verify the deployment tag exists\n        - Request approval if needed\n        - Deploy to staging before production\n        - Monitor deployment progress\n        \n        {{ _.role(\"user\") }}\n\n        {{ thread }}\n        \n        What should the next step be?\n      \"#\n    }\n\n这个示例使用Yaml来生成提示词，但您也可以使用任何其他提示词工程工具，甚至手动模板化。关键的好处包括：\n\n1. **完全控制** ：编写您的Agent确切需要的指令，没有黑盒抽象\n\n2. **测试和评估** ：像对待其他代码一样为提示词构建测试和评估\n\n3. **快速迭代** ：根据实际性能快速修改提示词\n\n4. **透明度** ：确切知道您的Agent在使用什么指令\n\n5. **角色技巧** ：利用支持非标准用户/助手角色使用的API\n\n提示词应该被视为最重要代码资源，需要完整的软件工程流程：版本控制、分支管理、代码审查、单元测试和性能监控。记住：您的提示词是应用逻辑和LLM之间的主要接口，拥有对提示词的完全控制能为您提供构建生产级Agent所需的灵活性和精确控制。\n\n### 原则三：上下文窗口的精细化工程管理\n\n\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_png%2FIurk1iaf4xdHicFyZfww8UoydDsnQsWtBSdxdk8ficrpf4nT6FENmw2K76axnI3icqSJlhwpQBZsHgq6frhwfZqHfQ%2F640%3Fwx_fmt%3Dpng%26watermark%3D1%26tp%3Dwebp%26wxfrom%3D5%26wx_lazy%3D1&valid=false)\n\n上下文窗口是AI应用中最稀缺和宝贵的资源，需要像管理内存一样精打细算。LLM是无状态函数，在任何给定时刻，您输入给Agent的本质都是\"这是到目前为止发生的事情，下一步是什么\"。\n\n**标准消息格式 vs 自定义格式对比：**\n\n**标准消息格式：**\n\n    [\n      {\n        \"role\":\"system\",\n        \"content\":\"You are a helpful assistant...\"\n      },\n      {\n        \"role\":\"user\",\n        \"content\":\"Can you deploy the backend?\"\n      },\n      {\n        \"role\":\"assistant\",\n        \"content\":null,\n        \"tool_calls\": [\n          {\n            \"id\":\"1\",\n            \"name\":\"list_git_tags\",\n            \"arguments\":\"{}\"\n          }\n        ]\n      },\n      {\n        \"role\":\"tool\",\n        \"name\":\"list_git_tags\",\n        \"content\":\"{\\\"tags\\\": [{\\\"name\\\": \\\"v1.2.3\\\", \\\"commit\\\": \\\"abc123\\\", \\\"date\\\": \\\"2024-03-15T10:00:00Z\\\"}, {\\\"name\\\": \\\"v1.2.2\\\", \\\"commit\\\": \\\"def456\\\", \\\"date\\\": \\\"2024-03-14T15:30:00Z\\\"}, {\\\"name\\\": \\\"v1.2.1\\\", \\\"commit\\\": \\\"abe033d\\\", \\\"date\\\": \\\"2024-03-13T09:15:00Z\\\"}]}\",\n        \"tool_call_id\":\"1\"\n      }\n    ]\n\n**优化的自定义格式（更高效）：**\n\n    [\n      {\n        \"role\":\"system\",\n        \"content\":\"You are a helpful assistant...\"\n      },\n      {\n        \"role\":\"user\",\n        \"content\":|\n                Here's everything that happened so far:\n            \n            <slack_message>\n                From:@alex\n                Channel:#deployments\n                Text:Canyoudeploythebackend?\n            </slack_message>\n            \n            <list_git_tags>\n                intent:\"list_git_tags\"\n            </list_git_tags>\n            \n            <list_git_tags_result>\n                tags:\n                  -name:\"v1.2.3\"\n                    commit:\"abc123\"\n                    date:\"2024-03-15T10:00:00Z\"\n                  -name:\"v1.2.2\"\n                    commit:\"def456\"\n                    date:\"2024-03-14T15:30:00Z\"\n                  -name:\"v1.2.1\"\n                    commit:\"ghi789\"\n                    date:\"2024-03-13T09:15:00Z\"\n            </list_git_tags_result>\n            \n            what'sthenextstep?\n        }\n    ]\n\n**实现上下文构建的Python代码：**\n\n    class Thread:\n      events: List[Event]\n\n    classEvent:\n    type: Literal[\"list_git_tags\", \"deploy_backend\", \"deploy_frontend\", \n                    \"request_more_information\", \"done_for_now\", \n                    \"list_git_tags_result\", \"deploy_backend_result\", \n                    \"deploy_frontend_result\", \"request_more_information_result\", \n                    \"done_for_now_result\", \"error\"]\n      data: Union[ListGitTags, DeployBackend, DeployFrontend, RequestMoreInformation,  \n                  ListGitTagsResult, DeployBackendResult, DeployFrontendResult, \n                  RequestMoreInformationResult, str]\n\n    defevent_to_prompt(event: Event) -> str:\n        data = event.data ifisinstance(event.data, str) \\\n               else stringifyToYaml(event.data)\n        returnf\"<{event.type}>\\n{data}\\n</{event.type}>\"\n\n    defthread_to_prompt(thread: Thread) -> str:\n        return'\\n\\n'.join(event_to_prompt(event) for event in thread.events)\n\n**不同阶段的上下文窗口示例：**\n\n**初始钉钉群请求：**\n\n    <dingtalk_message>\n        From: @小张\n        Channel: #部署群\n        Text: 可以帮我部署最新的后端到生产环境吗？\n    </dingtalk_message>\n\n**错误处理和恢复后：**\n\n    <slack_message>\n        From: @alex\n        Channel: #deployments\n        Text: Can you deploy the latest backend to production?\n    </slack_message>\n\n    <deploy_backend>\n        intent: \"deploy_backend\"\n        tag: \"v1.2.3\"\n        environment: \"production\"\n    </deploy_backend>\n\n    <e>\n        error running deploy_backend: Failed to connect to deployment service\n    </e>\n\n    <request_more_information>\n        intent: \"request_more_information_from_human\"\n        question: \"I had trouble connecting to the deployment service, can you provide more details and/or check on the status of the service?\"\n    </request_more_information>\n\n    <human_response>\n        data:\n          response: \"I'm not sure what's going on, can you check on the status of the latest workflow?\"\n    </human_response>\n\n关键好处包括：\n\n1. **信息密度** ：以最大化LLM理解的方式构建信息\n\n2. **错误处理** ：以帮助LLM恢复的格式包含错误信息\n\n3. **安全性** ：控制传递给LLM的信息，过滤敏感数据\n\n4. **灵活性** ：随着您了解最佳实践而调整格式\n\n5. **Token效率** ：优化上下文格式以提高token效率和LLM理解\n\n### 原则四：工具调用的本质认知：结构化数据而非魔法\n\n\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_png%2FIurk1iaf4xdHicFyZfww8UoydDsnQsWtBSAA29MHf3zicoY8u0OZOvSYaFET6z56zA4FCxqoyoicgVenV8KnlhEuRQ%2F640%3Fwx_fmt%3Dpng%26watermark%3D1%26tp%3Dwebp%26wxfrom%3D5%26wx_lazy%3D1&valid=false)\n\n工具调用被过度神秘化了，其实质就是LLM输出的结构化JSON数据，您的代码解析这些数据并执行相应操作。让我们看一个具体的例子，假设您有两个工具CreateIssue和SearchIssues：\n\n**工具调用的数据结构定义：**\n\n    class Issue:\n      title: str\n      description: str\n      team_id: str\n      assignee_id: str\n\n    classCreateIssue:\n      intent: \"create_issue\"\n      issue: Issue\n\n    classSearchIssues:\n      intent: \"search_issues\"\n      query: str\n      what_youre_looking_for: str\n\n**简单的模式实现：**\n\n1.\n   LLM输出结构化JSON\n2.\n   确定性代码执行相应操作（如调用外部API）\n3.\n   结果被捕获并反馈到上下文中\n\n**处理逻辑示例：**\n\n    # 回顾我们之前的switch语句\n    if nextStep.intent ",
        "tags": [],
        "line": 98,
        "startOffset": 4108,
        "endOffset": 11295,
        "filePath": "Sources/CuboxSync/GitHub上5.4k+Star爆火，构建生产级Agent 的12因素-2025-07-06.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1751807065714,
        "isNativeComment": false
      },
      {
        "id": "i2dpk0sey",
        "text": " 'wait_for_a_while': \n        # 执行一些复杂的操作\n        pass\n    else:  # 模型调用了我们不认识的工具\n        # 执行错误处理\n        pass\n\n理解这个本质后，您就能更灵活地设计工具接口：定义清晰的数据结构、处理各种异常情况、优化性能，甚至实现非原子性的复杂操作。不要被\"function calling\"这样的术语迷惑，工具调用只是LLM决策和应用逻辑之间的桥梁，关键是保持LLM决策层和执行层的清晰分离。您可以看下《[函数调用提示词咋写，看下OpenAI发布的Function Calling指南（万字含示例）｜最新](https://mp.weixin.qq.com/s?__biz=Mzg4MzYxODkzMg",
        "tags": [],
        "line": 354,
        "startOffset": 11429,
        "endOffset": 11783,
        "filePath": "Sources/CuboxSync/GitHub上5.4k+Star爆火，构建生产级Agent 的12因素-2025-07-06.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1751807066035,
        "isNativeComment": false
      },
      {
        "id": "mmvbfc9k1",
        "text": " 'request_human_input':\n      thread.events.append({\n        type: 'human_input_requested',\n        data: nextStep\n      })\n      thread_id = await save_state(thread)\n    await notify_human(nextStep, thread_id)\n    return# 跳出循环，等待响应回来并带上thread ID\n    else:\n      # ... 其他情况\n\n**Webhook处理示例：**\n\n    @app.post('/webhook')\n    defwebhook(req: Request):\n      thread_id = req.body.threadId\n      thread = await load_state(thread_id)\n      thread.events.push({\n        type: 'response_from_human',\n        data: req.body\n      })\n    # 简化处理，实际中您可能不想在web worker中阻塞\n      next_step = await determine_next_step(thread_to_prompt(thread))\n      thread.events.append(next_step)\n      result = await handle_next_step(thread, next_step)\n    # TODO - 循环或中断或执行其他操作\n\n    return {\"status\": \"ok\"}\n\n**完整的上下文窗口示例：** 如果我们使用原则三中的XML格式，几轮对话后的上下文窗口可能如下：\n\n    <dingtalk_message>\n        From: @小张\n        Channel: #部署群\n        Text: 可以帮我部署后端v1.2.3到生产环境吗？\n        Thread: []\n    </dingtalk_message>\n\n    <request_human_input>\n        intent: \"request_human_input\"\n        question: \"确认要将v1.2.3部署到生产环境吗？\"\n        context: \"这是生产环境部署，会影响线上用户。\"\n        options: {\n            urgency: \"high\"\n            format: \"yes_no\"\n        }\n    </request_human_input>\n\n    <human_response>\n        response: \"确认，请继续\"\n        approved: true\n        timestamp: \"2024-03-15T10:30:00Z\"\n        user: \"zhangsan@company.com\"\n    </human_response>\n\n    <deploy_backend>\n        intent: \"deploy_backend\"\n        tag: \"v1.2.3\"\n        environment: \"production\"\n    </deploy_backend>\n\n    <deploy_backend_result>\n        status: \"success\"\n        message: \"Deployment v1.2.3 to production completed successfully.\"\n        timestamp: \"2024-03-15T10:30:00Z\"\n    </deploy_backend_result>\n\n**核心优势：**\n\n1. **清晰指令** ：不同类型的人类联系工具允许LLM更具体化\n\n2. **内循环vs外循环** ：启用传统ChatGPT风格界面**之外** 的Agent工作流，其中控制流和上下文初始化可能是Agent->Human而不是Human->Agent（想想由cron或事件启动的Agent）\n\n3. **多人访问** ：可以通过结构化事件轻松跟踪和协调不同人类的输入\n\n4. **多Agent** ：简单的抽象可以轻松扩展以支持Agent->Agent请求和响应\n\n5. **持久性** ：结合原则六（通过简单API启动/暂停/恢复），这使得持久、可靠和可检查的多人工作流成为可能\n\n\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_png%2FIurk1iaf4xdHicFyZfww8UoydDsnQsWtBS1LqpibRbSbiavknTQia7En98vG7nCckCMBpEK83XhnLvqaQXt0637ia78A%2F640%3Fwx_fmt%3Dpng%26watermark%3D1%26tp%3Dwebp%26wxfrom%3D5%26wx_lazy%3D1&valid=false)\n\n这与原则十一（从任何地方触发，在用户所在的地方相遇）完美配合。\n\n### 原则八：业务控制流的自主设计权\n\n\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_png%2FIurk1iaf4xdHicFyZfww8UoydDsnQsWtBSfC7K7xfHIlo0pX1r1PjlXicqE4Tlq6fKhia2oN10Qf8yhOWxKrmEdWBw%2F640%3Fwx_fmt%3Dpng%26watermark%3D1%26tp%3Dwebp%26wxfrom%3D5%26wx_lazy%3D1&valid=false)\n\n控制流是您的核心竞争力，绝不能交给框架来决定。如果您拥有控制流，就可以做很多有趣的事情。构建对您的特定用例有意义的自定义控制结构。\n\n具体来说，某些类型的工具调用可能需要跳出循环并等待来自人类或其他长期运行任务（如训练管道）的响应。您还可能希望加入以下功能的自定义实现：\n\n*\n  工具调用结果的摘要或缓存\n*\n  对结构化输出的LLM-as-judge评估\n*\n  上下文窗口压缩或其他内存管理\n*\n  日志记录、跟踪和指标\n*\n  客户端速率限制\n*\n  持久性睡眠/暂停/\"等待事件\"\n\n**三种控制流模式示例：**\n\n下面的例子展示了三种可能的控制流模式：\n\n* 请求澄清: 模型请求更多信息，跳出循环并等待人类响应\n\n* 获取代码标签: 模型请求Git标签列表，获取标签，追加到上下文窗口，直接传回模型\n\n* 部署后端: 模型请求部署后端，这是高风险操作，跳出循环等待人类批准\n\n    def handle_next_step(thread: Thread):\n\n    whileTrue:\n        next_step = await determine_next_step(thread_to_prompt(thread))\n        \n        # 为了清晰在这里内联 - 实际中您可以将其放入方法中，\n        # 使用异常进行控制流，或任何您想要的方式\n        if next_step.intent ",
        "tags": [],
        "line": 453,
        "startOffset": 14833,
        "endOffset": 18117,
        "filePath": "Sources/CuboxSync/GitHub上5.4k+Star爆火，构建生产级Agent 的12因素-2025-07-06.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1751807066439,
        "isNativeComment": false
      },
      {
        "id": "u355nibk3",
        "text": " 'fetch_open_issues':\n          thread.events.append({\n            type: 'fetch_open_issues',\n            data: next_step,\n          })\n\n          issues = await linear_client.issues()\n\n          thread.events.append({\n            type: 'fetch_open_issues_result',\n            data: issues,\n          })\n          # 同步步骤 - 将新上下文传递给LLM以确定下一个下一步\n          continue\n        elif next_step.intent ",
        "tags": [],
        "line": 586,
        "startOffset": 18438,
        "endOffset": 18835,
        "filePath": "Sources/CuboxSync/GitHub上5.4k+Star爆火，构建生产级Agent 的12因素-2025-07-06.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1751807066044,
        "isNativeComment": false
      },
      {
        "id": "dtucj27d2",
        "text": "&mid=2247485867&idx=1&sn=e87342e3cdbc5f3c7e4f88c9de617146&scene=21#wechat_redirect)\n\n[第一性原理下的Prompt，助你跃升为大师的指导手册](https://mp.weixin.qq.com/s?__biz=Mzg4MzYxODkzMg",
        "tags": [],
        "line": 762,
        "startOffset": 25522,
        "endOffset": 25687,
        "filePath": "Sources/CuboxSync/GitHub上5.4k+Star爆火，构建生产级Agent 的12因素-2025-07-06.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1751807066128,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/ETCD golang ClientV3的基本使用 - 知乎-2023-09-28.md": [
      {
        "id": "4ciawkxui",
        "text": " 0 {\r\n            fmt.Println(\"kv过期了\")\r\n            break\r\n        }\r\n        fmt.Println(\"还没过期:\", getResp.Kvs)\r\n        time.Sleep(2 * time.Second)\r\n    }\r\n\r\n输出：\r\n\r\n    还没过期: [key:\"/school/class/students\" create_revision:24 mod_revision:24 version:1 value:\"h\" lease:7587844869553529889 ]\r\n    还没过期: [key:\"/school/class/students\" create_revision:24 mod_revision:24 version:1 value:\"h\" lease:7587844869553529889 ]\r\n    还没过期: [key:\"/school/class/students\" create_revision:24 mod_revision:24 version:1 value:\"h\" lease:7587844869553529889 ]\r\n    还没过期: [key:\"/school/class/students\" create_revision:24 mod_revision:24 version:1 value:\"h\" lease:7587844869553529889 ]\r\n    还没过期: [key:\"/school/class/students\" create_revision:24 mod_revision:24 version:1 value:\"h\" lease:7587844869553529889 ]\r\n    还没过期: [key:\"/school/class/students\" create_revision:24 mod_revision:24 version:1 value:\"h\" lease:7587844869553529889 ]\r\n    kv过期了\r\n\r\n可运行代码请查看[3.4.1.go](https://zhuanlan.zhihu.com/p/111800017/3.4.1.go)\r\n\r\n### 3.4.2 自动续租\r\n\r\n    if keepRespChan, err = lease.KeepAlive(context.TODO(), leaseId); err != nil {\r\n        fmt.Println(err)\r\n        return\r\n    }\r\n    go func() {\r\n        for {\r\n            select {\r\n            case keepResp = <- keepRespChan:\r\n                if keepRespChan ",
        "tags": [],
        "line": 307,
        "startOffset": 10926,
        "endOffset": 12206,
        "filePath": "Sources/CuboxSync/ETCD golang ClientV3的基本使用 - 知乎-2023-09-28.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615141602,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/Devin 教你做 Agent：把 AI 当做需要指导的初级开发者-2025-07-10.md": [
      {
        "id": "3z5w54agr",
        "text": "&mid=2247517422&idx=1&sn=c14c1d8e5ef14a5bd5edf49e5487c6f6&scene=21#wechat_redirect)\n\n[Gemini 2.5 Pro 负责人：最强百万上下文，做好了能解锁很多应用场景](https://mp.weixin.qq.com/s?__biz=Mzg5NTc0MjgwMw",
        "tags": [],
        "line": 305,
        "startOffset": 10039,
        "endOffset": 10217,
        "filePath": "Sources/CuboxSync/Devin 教你做 Agent：把 AI 当做需要指导的初级开发者-2025-07-10.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752131163508,
        "isNativeComment": false
      },
      {
        "id": "op9o05gyc",
        "text": "&mid=2247517339&idx=1&sn=d50cb9c4a1a738cd4362cf0416ef7400&scene=21#wechat_redirect)\n\n[TRAE 如何思考 AI Coding ：未来的 AI IDE，是构建真正的「AI 工程师」](https://mp.weixin.qq.com/s?__biz=Mzg5NTc0MjgwMw",
        "tags": [],
        "line": 309,
        "startOffset": 10380,
        "endOffset": 10565,
        "filePath": "Sources/CuboxSync/Devin 教你做 Agent：把 AI 当做需要指导的初级开发者-2025-07-10.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752131163849,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/Coze + 爬虫 = 周末去哪不用愁😆 - 掘金-2024-03-12.md": [
      {
        "id": "aqdaytgm9",
        "text": " '__main__':\n        content = read_file_text_content(\"test.html\")\n        match_results = activity_pattern.findall(content)\n        result_str = \"\"\n        for result in match_results:\n            activity_name = result[0].replace(\"\\n\", \"\").strip() if result[0] else \"暂无数据\"\n            activity_time = result[1].replace(\"\\n\", \"\").strip() if result[1] else \"暂无数据\"\n            activity_address = result[2].replace(\"\\n\", \"\").strip() if result[3] else \"暂无数据\"\n            activity_cost = result[3].replace(\"\\n\", \"\").strip().replace(\"<strong>\", \"\") if result[3] else \"暂无数据\"\n            result_str += \"-【{}】| {} | {} | {}\\n\".format(activity_name, activity_cost, activity_time, activity_address)\n        print(result_str)\n\n运行输出结果如下：\n\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fp3-juejin.byteimg.com%2Ftos-cn-i-k3u1fbpfcp%2Fff83eaf742f543a6abfa650582b5fee6~tplv-k3u1fbpfcp-jj-mark%3A3024%3A0%3A0%3A0%3Aq75.awebp%23%3Fw%3D1141%26h%3D164%26s%3D138170%26e%3Dpng%26b%3D282a36&valid=false)\n\n行吧，数据能提取到，接着就是匹配请求参数，拼接url了，比较简单，直接给出爬取代码：\n\n      \n          \n       \n           \n        \n            python\n\n        \n            \n    复制代码\n\n       \n           \n      \n          import json\n    import requests_async\n    import re\n    import time\n\n    # 提取活动信息的正则\n    activity_pattern = re.compile(\n        r'temprop=\"summary\">(.*?)<.*?时间：</span>(.*?)<.*?<li title=\"(.*?)\">.*?地点：<.*?费用：</span>(.*?)</strong>', re.S)\n\n\n    # 城市和区的Bean\n    class City:\n        def __init__(self, name_cn, name_req_param, district_dict):\n            self.name_cn = name_cn\n            self.name_req_param = name_req_param\n            self.district_dict = district_dict\n\n\n    # 发起请求\n    async def send_request(url):\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36\",\n            \"Host\": \"www.douban.com\",\n            \"Refer\": url\n        }\n        # 请求响应结果\n        response_data = await requests_async.get(url, headers=headers)\n        # 提取响应结果中的活动信息\n        match_results = activity_pattern.findall(response_data.text)\n        result_str = \"\"\n        for result in match_results:\n            activity_name = result[0].replace(\"\\n\", \"\").strip() if result[0] else \"暂无数据\"\n            activity_time = result[1].replace(\"\\n\", \"\").strip() if result[1] else \"暂无数据\"\n            activity_address = result[2].replace(\"\\n\", \"\").strip() if result[3] else \"暂无数据\"\n            activity_cost = result[3].replace(\"\\n\", \"\").strip().replace(\"<strong>\", \"\") if result[3] else \"暂无数据\"\n            result_str += \"-【{}】| {} | {} | {}\\n\".format(activity_name, activity_cost, activity_time, activity_address)\n        return result_str\n\n\n    async def main(args: Args) -> Output:\n        # 城市和区的请求参数\n        city_list = [\n            City(\"深圳市\", \"shenzhen\", {\n                \"罗湖区\": 130288, \"福田区\": 130289, \"南山区\": 130290, \"宝安区\": 130291, \"龙岗区\": 130292,\n                \"盐田区\": 130293, \"坪山区\": 131682, \"龙华区\": 131683, \"光明区\": 131691,\n            }), City(\"广州市\", \"guangzhou\", {\n                \"从化\": 130277, \"荔湾区\": 130266, \"越秀区\": 130267, \"海珠区\": 130268, \"天河区\": 130269, \"白云区\": 130270,\n                \"黄埔区\": 130271, \"番禺区\": 130272, \"花都区\": 130273, \"南沙区\": 130274, \"萝岗区\": 130275, \"增城区\": 130276\n            }), City(\"上海市\", \"shanghai\", {\n                \"黄浦区\": 129242, \"徐汇区\": 129244, \"长宁区\": 129245, \"静安区\": 129246, \"普陀区\": 129247,\n                \"闸北区\": 129248, \"虹口区\": 129249, \"杨浦区\": 129250, \"闵行区\": 129251, \"宝山区\": 129252,\n                \"嘉定区\": 129253, \"浦东新区\": 129254, \"金山区\": 129255, \"松江区\": 129256, \"青浦区\": 129257,\n                \"奉贤区\": 129259, \"崇明县\": 129260\n            }), City(\"北京市\", \"beijing\", {\n                \"东城区\": 128519, \"西城区\": 128520, \"朝阳区\": 128523, \"丰台区\": 128524, \"石景山区\": 128525,\n                \"海淀区\": 128526, \"门头沟区\": 128527, \"房山区\": 128528, \"通州区\": 128529, \"顺义区\": 128530,\n                \"昌平区\": 128531, \"大兴区\": 128532, \"怀柔区\": 128533, \"平谷区\": 128534, \"密云县\": 128535, \"延庆县\": 128536\n            })\n        ]\n        # 活动类型参数\n        category_dict = {\n            \"音乐\": \"music\", \"戏剧\": \"drama\", \"讲座\": \"salon\", \"聚会\": \"party\", \"电影\": \"film\",\n            \"展览\": \"exhibition\", \"运动\": \"sports\", \"公益\": \"commonweal\", \"旅行\": \"travel\",\n            \"赛事\": \"competition\", \"课程\": \"course\", \"亲子\": \"kids\", \"其它\": \"others\"\n        }\n        params = args.params\n        input_json = json.loads(params[\"input\"])\n        request_url = \"https://www.xxx.com/location/{}/events/weekend\"\n        for city in city_list:\n            if city.name_cn ",
        "tags": [],
        "line": 548,
        "startOffset": 24045,
        "endOffset": 28521,
        "filePath": "Sources/CuboxSync/Coze + 爬虫 = 周末去哪不用愁😆 - 掘金-2024-03-12.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615140590,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/AI 搜索，一次讲透-2024-05-17.md": [
      {
        "id": "cuzbhvtun",
        "text": "&mid=2247483676&idx=1&sn=e50b8bcfb3f4a9a3e36eba2b6d2cde27&chksm=c09304ecf7e48dfab1b03cc9f8a927fb96c70611b597680cd307009a3489695e6f7aaf1713a4&token=601658267&lang=zh_CN\ntags: []\n---\r\n\r\n# AI 搜索，一次讲透\r\n\r\n引言最近 AI 搜索已经成为新的共识，已经很久都没见到这么强的共识了。Perplexity 拿到新一轮融资。\r\n\r\n[Read in Cubox](https://cubox.pro/my/card?id=7191162320112847527)  \r\n[Read Original](https://mp.weixin.qq.com/s?__biz=MzkwMzY5NzU2Nw",
        "tags": [],
        "line": 3,
        "startOffset": 143,
        "endOffset": 537,
        "filePath": "Sources/CuboxSync/AI 搜索，一次讲透-2024-05-17.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615140438,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/AI 工作流，选图形界面，还是命令行？-2024-07-11.md": [
      {
        "id": "tmi2w2mno",
        "text": "&mid=2653546816&idx=1&sn=9571c54607a15818b73e6ea73bdcf58e&scene=21#wechat_redirect)》。我在里面介绍了如何利用 AI 工作流，把一篇长技术文档，自动翻译成这个样子：\n\n\n另外问题中提到的「前几天直播」，指的是我在上周在视频号做的直播《聊聊 AI 工作流 + 答疑》。我把其中讲解 AI 工作流的部分，给你展示在这里。\n\n\n<br />\n\n如果你想了解后续的答疑互动内容，请访问我的视频号-直播回放功能。  \n\n\n背景信息介绍完了，下面是我对星友问题的完整回答（有改动）：\n\n\nCoze 和 Dify 代表了目前 AI 工作流中的图形界面类别。特点是上手简单直观，功能也很强大。尤其是 Dify 作为开源框架，个人用户可以免费本地部署用，后续升级成为团队和企业级产品也有路径。如果学习的话，推荐得到 AI 学习圈里快刀青衣和尹会生的相关视频教程。\n\n\n而[fabric](https://mp.weixin.qq.com/s?__biz=MzIyODI1MzYyNA",
        "tags": [],
        "line": 67,
        "startOffset": 1879,
        "endOffset": 2356,
        "filePath": "Sources/CuboxSync/AI 工作流，选图形界面，还是命令行？-2024-07-11.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1750936553070,
        "isNativeComment": false
      },
      {
        "id": "zss959z1u",
        "text": "&mid=2653546344&idx=1&sn=d76145994e120c720b3ddfc8a631c4f8&scene=21#wechat_redirect)等则是命令行形式的代表。缺点是需要你得掌握编程，才能把它的能力发挥出来。选哪一个路径，其实主要看每个人的情况与偏好。\n\n\n让我选的话，目前我会**选后者** 。为什么呢？\n\n\n因为你是个开发者，开发别人不曾有的、或者是做得不够尽善尽美的功能，才是产品生存的必要条件。因此把别人现成的 DSL 模板搬过来用，与你的目标是不匹配的。\n\n\n不管你是用图形界面，还是命令行，都需要学习成本。学会了之后，如果一切执行顺风顺水，那自然是图形界面显得更加和蔼可亲。但是一旦出现问题，才是真正的考验到来。\n\n\n你想要了解错误的含义，你想要知道工作流能力的边界，你想把自己头脑中的新设计实现出来，却没有人提供现成的模板......\n\n\n此时命令行有个好处，就凸显了出来------不管是 shell 命令还是 Python 代码，**都是文本** 。而文本，对目前的大语言模型来说，就是能力范围之内的事情。\n\n\n就拿[我最近这篇 AI 工作流翻译文章](https://mp.weixin.qq.com/s?__biz=MzIyODI1MzYyNA",
        "tags": [],
        "line": 84,
        "startOffset": 2512,
        "endOffset": 3064,
        "filePath": "Sources/CuboxSync/AI 工作流，选图形界面，还是命令行？-2024-07-11.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1750936552703,
        "isNativeComment": false
      },
      {
        "id": "8or4z3w4k",
        "text": "&mid=2653542621&idx=1&sn=299bc7074d82574aa902d06a34f16bf2&scene=21#wechat_redirect)。哈哈。\n\n\n希望这个分享，对星友能有帮助，也希望你能从中获得一些收益。\n\n\n祝 AI 工作流使用愉快！\n\n\n**点赞 +「在看」，转发** 给你身边有需要的朋友。收不到推送?那是因为你只**订阅** ，却没有**加星标** 。\n\n\n欢迎订阅我的小报童付费专栏，每月更新不少于3篇文章。订阅一整年价格优惠。\n\n\n如果有问题咨询，或者希望加入社群和热爱钻研的小伙伴们一起讨论，**订阅知识星球** 吧。不仅包括小报童的推送内容，还可以自由发帖与提问。之前已经积累下的帖子和问答，就有数百篇。足够你好好翻一阵子。知识星球支持72小时内无条件退款，所以你可以放心尝试。\n\n\n若文中部分链接可能无法正常显示与跳转，可能是因为微信公众平台的外链限制。如需访问，请点击文末「阅读原文」链接，查看链接齐备的版本。\n\n\n## 延伸阅读\n\n\n* [如何用 AI 工作流实现高质量长文翻译？](https://mp.weixin.qq.com/s?__biz=MzIyODI1MzYyNA",
        "tags": [],
        "line": 138,
        "startOffset": 3980,
        "endOffset": 4501,
        "filePath": "Sources/CuboxSync/AI 工作流，选图形界面，还是命令行？-2024-07-11.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1750936553171,
        "isNativeComment": false
      },
      {
        "id": "9a54bqs6m",
        "text": "&mid=2653542470&idx=1&sn=e2b20e26b1719b1f016381b20dbc5924&scene=21#wechat_redirect)\n\n* [Mistral AI 的大语言模型怎么样？](https://mp.weixin.qq.com/s?__biz=MzIyODI1MzYyNA",
        "tags": [],
        "line": 164,
        "startOffset": 4659,
        "endOffset": 4821,
        "filePath": "Sources/CuboxSync/AI 工作流，选图形界面，还是命令行？-2024-07-11.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1750936552850,
        "isNativeComment": false
      },
      {
        "id": "4orfcvsw0",
        "text": "&mid=2653544210&idx=1&sn=b8cff74271415026de5b1cd106767f20&scene=21#wechat_redirect)\n\n* [AI 真要成精了？ChatGPT 上手体验](https://mp.weixin.qq.com/s?__biz=MzIyODI1MzYyNA",
        "tags": [],
        "line": 168,
        "startOffset": 4971,
        "endOffset": 5133,
        "filePath": "Sources/CuboxSync/AI 工作流，选图形界面，还是命令行？-2024-07-11.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1750936553162,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/80后会有下半场吗？-2024-11-04.md": [
      {
        "id": "6qjxlvfxo",
        "text": "&mid=2247484252&idx=1&sn=806d0a276b35e23022f83b2e9e11e91b&chksm=fc1df19fcb6a78898ad06dbec14d0f601ba91a605152a70f2fc90380ac00ea5eccdee23419ca&scene=21#wechat_redirect)  \r\n\r\n[2018年中国经济的22个预测 \\| 企业发展白皮书](http://mp.weixin.qq.com/s?__biz=MzU1OTA4MTM4OA",
        "tags": [],
        "line": 158,
        "startOffset": 6116,
        "endOffset": 6367,
        "filePath": "Sources/CuboxSync/80后会有下半场吗？-2024-11-04.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615153171,
        "isNativeComment": false
      },
      {
        "id": "382tozo5r",
        "text": "&mid=2247484216&idx=1&sn=711ed19ebd53462bce659db2ea2ccb86&chksm=fc1df1fbcb6a78edd8976840e8356ac08355e0dca744e4a3df27beafbe8ad72f26f4d276ce1f&scene=21#wechat_redirect)\r\n\r\n[一线城市月薪1万 VS 二线城市月薪3千，进退都是困境](http://mp.weixin.qq.com/s?__biz=MzU1OTA4MTM4OA",
        "tags": [],
        "line": 162,
        "startOffset": 6613,
        "endOffset": 6863,
        "filePath": "Sources/CuboxSync/80后会有下半场吗？-2024-11-04.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615153668,
        "isNativeComment": false
      },
      {
        "id": "jac4vbbpu",
        "text": "&mid=2247484210&idx=1&sn=d763e9f59ebe1265dbbee1559e6bca7b&chksm=fc1df1f1cb6a78e7906c935e8b5ba2eddc48a07b30fe95ea7a7c3dbfbfc83638766fae16e936&scene=21#wechat_redirect)\r\n\r\n[深访币圈：享受过一夜暴富，你再也忘不掉捷径 \\| 3分钟了解比特币](http://mp.weixin.qq.com/s?__biz=MzU1OTA4MTM4OA",
        "tags": [],
        "line": 166,
        "startOffset": 7116,
        "endOffset": 7372,
        "filePath": "Sources/CuboxSync/80后会有下半场吗？-2024-11-04.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615153171,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/2万字长文，如何成为一个“懂”AI 的产品经理？-2024-09-14.md": [
      {
        "id": "lxblz7y8a",
        "text": "&mid=2648407499&idx=1&sn=1016f7b63998b4a0408202838293231a&chksm=88a7e709bfd06e1fadbfcbb4ed27f48c45d0e23bdcd65241310ffe7a5d84473810e76fa800a2\ntags: []\n---\r\n\r\n# 2万字长文，如何成为一个“懂”AI 的产品经理？\r\n\r\n本文作者：汐笺欢迎关注公众号，阅读作者的其他文章，如果有兴趣与本文作者交流，请添加微信：otaku_xijia\r\n\r\n[Read in Cubox](https://cubox.pro/my/card?id=7234534177553518480)  \r\n[Read Original](https://mp.weixin.qq.com/s?__biz=MzA5OTA1MzQ4NQ",
        "tags": [],
        "line": 3,
        "startOffset": 143,
        "endOffset": 525,
        "filePath": "Sources/CuboxSync/2万字长文，如何成为一个“懂”AI 的产品经理？-2024-09-14.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615153873,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/24年，素人铺量别碰-2024-01-09.md": [
      {
        "id": "rpc7lvhc9",
        "text": "&mid=2649725623&idx=2&sn=299dfb9709b2310de95e12403e95f637&chksm=880480d0bf7309c68d2e5d65de94268f88da1b50e9f540819d30e8bc5daf07b7fb0d8bd2d180&mpshare=1&scene=1&srcid=0102GVONK2ed2uMxrDdWDKrB&sharer_shareinfo=8425fba5f3a2b1165af664e8a8d35733&sharer_shareinfo_first=8425fba5f3a2b1165af664e8a8d35733&version=4.1.15.70262&platform=mac\ntags: []\n---\r\n\r\n# 24年，素人铺量别碰\r\n\r\n\r\n\r\n[Read in Cubox](https://cubox.pro/my/card?id=7144232450195981571)  \r\n[Read Original](https://mp.weixin.qq.com/s?__biz=MzA4OTEyNDYxNg",
        "tags": [],
        "line": 3,
        "startOffset": 143,
        "endOffset": 645,
        "filePath": "Sources/CuboxSync/24年，素人铺量别碰-2024-01-09.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615153840,
        "isNativeComment": false
      }
    ],
    "Sources/CuboxSync/2025过去一半了， AI带给我的9个Aha Moments-2025-07-03.md": [
      {
        "id": "cwwqrx5r1",
        "text": "&mid=2649090554&idx=1&sn=00d0258fb2916d91f34676b24448a79e&scene=21#wechat_redirect)** 。\n\n在那期复盘中，我们几乎 95% 的篇幅都在聊 AI 六小龙，聊字节和阿里。\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_jpg%2FFFcNSoQ3KictrC6u1Cwcbiapv1gv0bvFOK4ibESpffxYHdZqFRFgLoWW0zIcdHLchQNQicCD0soEC9WMkK6gB4b9HQ%2F640%3Fwx_fmt%3Dother%26from%3Dappmsg%26tp%3Dwebp%26wxfrom%3D5%26wx_lazy%3D1&valid=false)\n\n只浅浅提到了 DeepSeek，当时我还记得提到了两点：\n\n我用了 「神奇」这个词来形容当时还没有显山露水的 DeepSeek，说它虽然不是大厂，但幕后是量化大佬，因此资源够多，当时的模型已经在海外小有名气，值得关注；\n\n同时，我还分享了一个听说的让我印象深刻的 DeepSeek 的故事：\n>\n> 他们坚决不做任何商业化，因为认为 DeepSeek 的唯一使命就是追求更高的大模型智能，而一丁点商业化的动作都会干扰和稀释他们的时间与精力。\n>\n这是一个非常纯粹、也非常奢侈的团队。\n\n短短半年前，DeepSeek 还只是一间「顺口提一提」的偏居一隅的大模型小公司之一，我们提到它，不是因为模型的智能表现突出，而是因为它\"很有故事\"，选择的路径与众不同、独树一帜。\n\n每个技术大变革的时代，都是英雄辈出的黄金期，能置身其中令我感到兴奋，常常让我想起少年时代读的茨威格那本书：《人类群星闪耀时》。\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_jpg%2FFFcNSoQ3KictrC6u1Cwcbiapv1gv0bvFOKc4ibfBK1Vx8UGXyBvK3osurNAWapEluDvzpVMXsr4TZUoU4V48gDI0w%2F640%3Fwx_fmt%3Dother%26from%3Dappmsg%26tp%3Dwebp%26wxfrom%3D5%26wx_lazy%3D1&valid=false)\n\n那么，在这样一个时代，我们应该怎么做呢？\n\n在「十字路口」，我们访谈和凝聚新一代 AI 创业者和积极行动者。\n\n可能和我的性格有关，我特别喜欢「在行动中学」，喜欢「动起来」。\n\n最近，很多朋友问我：\"感觉你最近很忙，在忙什么？\"\n\n我说：AI 的变化太快、产品太多了。技术的进步和产品的创新，一开始是振奋，转眼就开始信息过载到令人焦虑。需要付出很多的努力才能跟上节奏，其实行业中的每个人都蛮辛苦的。\n\n这也是为什么我在做年中总结的时候，想到分享 Aha Moments ------希望这个分享能够给到大家一些轻松的启发，也能够开启一些新的对话。\n\n## ①「这不是个公平的竞赛！」\n\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_jpg%2FFFcNSoQ3KictrC6u1Cwcbiapv1gv0bvFOK5DGQrwMs4aDLDLiar9cT1cwAFdVXFAMdzqiaqxMxcgz0iauVHsCqR0jYA%2F640%3Fwx_fmt%3Dother%26from%3Dappmsg%26tp%3Dwebp%26wxfrom%3D5%26wx_lazy%3D1&valid=false)\n\n妙鸭相机的创始人张月光出来创业后，他的 AI 应用创业公司总共融了 3 亿多人民币，非常受到大家的认可与期待。\n\n在之前一次分享中，他提到了自己的担心和焦虑：\n>\n> 「作为一个应用创业，你总会担心，你做一个事情时，你的手里的模型不是最好的。所以这不公平，这不是个公平的竞赛。」\n>\n曾经，融了 3 亿人民币的创业者都觉得「不公平」。\n\n但 DeepSeek 的开源，改变了这个局面。从此， SOTA 模型成为了人人皆可用的公共资源，每一个应用创业者都能用上最好的模型。\n\n而且这不单单是智能的公平，还有成本的下降：\n\n国内出现了一个很大的生意机会叫做「DeepSeek 一体机」，虽然有些报道这里鱼龙混杂、不乏割韭菜者，但不可否认，这些一体机，其实很好地帮助了 DeepSeek 下基层，让更多人可以更轻松地接触到 AI 大模型。\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_jpg%2FFFcNSoQ3KictrC6u1Cwcbiapv1gv0bvFOK0GSMtloMQvkqTMEFeEg37hoNI3HaZlFJNgrxPiaPanzmic5AZjCdCWFw%2F640%3Fwx_fmt%3Dother%26from%3Dappmsg%26tp%3Dwebp%26wxfrom%3D5%26wx_lazy%3D1&valid=false)\n\n还有个有趣的现象，2024 年全年 H200 GPU 的租金一直在下降，但在 DeepSeek 发布后，美国 H200 GPU 的租金反而上涨了 10%。\n\n在 Qwen3 发布后，对创业者是一个更大的利好。\n\n因为直接使用 DeepSeek r1 \\& v3 时，其参数确实过大，许多场景并不需要如此强大的性能。而自行蒸馏小模型，又存在一定的技术门槛。\n\nQwen3 提供了从小到大全系列参数规模的模型选择，在不同场景下都能大概率能找到适合的模型。\n\n就像麦当劳广告说的：「更多选择、更多欢乐」。\n\n甚至还有投资人在采访中说：\"Qwen3 以后，我才真正敢投 AI 应用。\"\n\n## ②「没有秘密，只有纯粹的执行速度」\n\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_jpg%2FFFcNSoQ3KictrC6u1Cwcbiapv1gv0bvFOKOJwDak3zteUtOwD1zFc06RuBiahA3UiaiafMXtcJiadC57QBVstiawybL9w%2F640%3Fwx_fmt%3Dother%26from%3Dappmsg%26tp%3Dwebp%26wxfrom%3D5%26wx_lazy%3D1&valid=false)\n\nManus 办公室有张贴墙上的纸，是推特 KOL Robert Scoble 的一条内容：\n>\n> 一位硅谷 VC 朋友告诉我，Manus 让他想起了硅谷黄金时代的 「old Silicon Valley」------ No secrets, just sheer execution speed. （没有秘密，只有纯粹的执行速度）。\n>\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_jpg%2FFFcNSoQ3KictrC6u1Cwcbiapv1gv0bvFOK23QbH5fpE5uTZibQaZ7Az4ib1T1dMy4C1ZnoLbCia4bnqoEtBb5oB88rA%2F640%3Fwx_fmt%3Dother%26from%3Dappmsg%26tp%3Dwebp%26wxfrom%3D5%26wx_lazy%3D1&valid=false)\n\n今天，开源盛行、模型一月一迭代，在这样快速变化的时期，尝试建设技术壁垒的努力都很可能付诸东流。在这个时候，快速迭代、不断创新，创造势能，才可能是 toC 产品最大的护城河。十字路口的公众号也刚编译了一篇 a16z 的文章，标题就是：**[「势能，是 AI 产品的护城河」](https://mp.weixin.qq.com/s?__biz=MzAxMDMxOTI2NA",
        "tags": [],
        "line": 45,
        "startOffset": 1998,
        "endOffset": 5531,
        "filePath": "Sources/CuboxSync/2025过去一半了， AI带给我的9个Aha Moments-2025-07-03.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1751533354414,
        "isNativeComment": false
      },
      {
        "id": "flhmxlqt2",
        "text": "&mid=2247483761&idx=1&sn=fb4f124c71b3a05b671732a7aa360347&scene=21#wechat_redirect)** ，来自心资本的合伙人吴炳见。\n\n最近我又反复想起这篇文章，于是拿出来重读了一遍。\n\n这篇文章讲的是什么呢？\n\n\"汤姆猫\"指的是2010年初期流行的移动应用《会说话的汤姆猫》，它通过简单的语音模仿功能迅速走红，但因玩法单一，用户留存率低，最终热度消退。\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_jpg%2FFFcNSoQ3KictrC6u1Cwcbiapv1gv0bvFOKHPH9wdyJ2JA8LnYuibDKj3zJvLLl3ywBYlwft6jbFaI51Pwvic039MpQ%2F640%3Fwx_fmt%3Dother%26from%3Dappmsg%26tp%3Dwebp%26wxfrom%3D5%26wx_lazy%3D1&valid=false)\n\n去年，很多 AI 的小产品，刚出来的时候像\"汤姆猫\"那样很火，但大家都认为会昙花一现，没有办法留住用户，比如去年的「哄哄模拟器」、甚至当时大家对于 Perplexity、Monica 都有这样的争议，当时最典型的一句批评是：「套壳产品，没意思」。\n\nPerplexity 在 B 轮融资的 deck 中，有这样一页，回应当时所有人都会问的「套壳」问题：\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_jpg%2FFFcNSoQ3KictrC6u1Cwcbiapv1gv0bvFOKdcxxq0NEjIgJaGGIef4cjfH1sr42hS3pHaTqF7IXTyj0lv64qEdVmA%2F640%3Fwx_fmt%3Dother%26from%3Dappmsg%26tp%3Dwebp%26wxfrom%3D5%26wx_lazy%3D1&valid=false)\n\n我也一直觉得套壳不是贬义词，好的套壳也是把最新技术能力最大化利用的产品力。极端一点说，当年的 iPhone 也是对「多点触控屏幕」这个新技术的套壳。\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_jpg%2FFFcNSoQ3KictrC6u1Cwcbiapv1gv0bvFOKmCjAt6lto8t3I2aZ43x9FuHlC5cNIwz8iaKHUNmicyXQ2S9toO9GQhFQ%2F640%3Fwx_fmt%3Dother%26from%3Dappmsg%26tp%3Dwebp%26wxfrom%3D5%26wx_lazy%3D1&valid=false)\n\n说回这篇文章，作者一开始也觉得这类产品太浅。但没过多久，他意识到了：汤姆猫的价值不在于汤姆猫，而在于「积极行动」。\n\n我直接引用一下这篇文章的最后几句：\n\n我们都知道AI带来的机会大，这是共识了。对当下timing的研判、对模型能力边界的理解，还处于非共识，这是真正考验创业者的地方。\n\n人人都想做有终局的产品，望着终局，恨不能省略中间的过程，跳跃中间的历史，直接做最有价值的事情，这是一种我执，忽略了真实世界运转的规律。\n\n万物自有其规律，没人能越过1到17岁，一步到位长到18岁。\n\n而理解汤姆猫、成为汤姆猫、超越汤姆猫，才是真实世界运转的规律，这是一种去执。\n\n去执后，更容易看清当下，抓住当下。\n>\n> 浪潮来的时候，关键是要站在海里，且早早学会游泳，早早习惯海水的味道。\n>\n## ④「未来已来，只是尚未均匀分布」\n\n![](https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_jpg%2FFFcNSoQ3KictrC6u1Cwcbiapv1gv0bvFOKIb7tbDviaQtNJqeNaod5Ws0ibex7Nt1uFXBbY2mACA27oaylczWpFOKw%2F640%3Fwx_fmt%3Dother%26from%3Dappmsg%26tp%3Dwebp%26wxfrom%3D5%26wx_lazy%3D1&valid=false)\n\n大家听说过「产品蝗虫」这几个词吗？就是说一个新产品发布后，最先积极涌入去体验的往往都从业人员，产品经理、设计师、工程师、创业者、投资人，被戏称为「产品蝗虫」。------因为他们消耗了产品的资源，但又不是产品的目标用户。\n\n我觉得在这个时代，做一条「产品蝗虫」，率先体验各种产品，有十分了不起的价值。\n\n「十字路口」在 2025 年的第 1 期播客是 Koji 和真格基金管理合伙人戴雨森的开年对谈：**[《AI 关键之年，Agent 开启元年》](https://mp.weixin.qq.com/s?__biz=MzAxMDMxOTI2NA",
        "tags": [],
        "line": 157,
        "startOffset": 7647,
        "endOffset": 9865,
        "filePath": "Sources/CuboxSync/2025过去一半了， AI带给我的9个Aha Moments-2025-07-03.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1751533354063,
        "isNativeComment": false
      },
      {
        "id": "b4ey6z5wu",
        "text": "&mid=2649092225&idx=1&sn=6b449f8be849c0aa5715b2aea5b98774&scene=21#wechat_redirect)** ，这篇文章有上千次转发，小红书 CEO 毛文超也在内部高管周会上和大家分享。\n\n其实我有点没想到这篇文章的影响力。但它收到这么高的关注和传播，我认为背后是有一个新趋势、和一个新社会情绪，引起了大家的共鸣。\n\n新趋势，是：AI 时代，再垂直的需求，也可以有产品去服务。这里面有几点结构性的原因：\n\n1 是因为开发成本降低了（AI Design + AI Coding）；\n\n2 是因为推荐算法更强了（小红书帮你把产品推荐给对的用户群体）；\n\n3 是因为用户为软件付费的意愿起来了，尤其是有了 AI 之后，软件从 day 1 就可以收费，显得天经地义。\n\n新社会情绪，是：人人都想成为「超级个体」，而 AI 可能让人梦想成真。\n\n比如说开发出一个只有一万用户需要的产品，但如果每位用户每月付费 10 块钱，那也是 10 万元的月收入。\n\n分享三个我很喜欢的产品：\n\nSunAlly 是一个苹果手表 App，监测每天是否晒够了太阳，并适时提醒用户补充维 D。\n\n魂旅，「身体在工位、灵魂在旅行」，一个在手机 App 上模拟自己在旅行的产品。比如，我可以选择此刻立即模拟从上海出发，App 就将展示我跳上了绿皮火车，在地图上一路向着大理出发。\n\nFocusFlight，我很喜欢坐飞机，是因为飞行模式可以提供一个无人干扰、不用手机的安静时光。这个 App 也是抓住了这一点，模拟用户的飞行状态，帮助用户专注到心无旁骛的工作与学习。\n\n聊到这里的时候，你们有没有发现，这三个产品和 AI 都没有什么关系？\n\n没错，这也是特别有意思的地方。\n\n这三个产品虽然没有利用 AI 技术，但在没有 AI 的年代，它们是很难诞生的。\n\n这就是我前面提到的：AI 让设计和研发的成本降低（过去需要 8 个人 3 个月 vs 现在需要 1 个人 10 天）、AI 让小红书和抖音的推荐算法进一步升级（过去 SunAlly 几乎不可能找到喜欢晒太阳的用户 vs 现在小红书算法推荐），以及 AI 培养了用户为工具软件付费的习惯（过去做出产品没有收入 vs 现在可以直接变现）。\n\n这三点加在一起实现了这个新趋势：\n>\n> AI 时代，再垂直的需求也可以、也值得被做成一个产品去服务，并且其商业闭环是可以实现的。\n>\n因此，虽然我们天天都在说 AI 带来了全方面的创业机会，但不要忘了回归用户需求去发现新机会。\n>\n> 真正打动人心的产品往往源自最细腻的洞察。\n>\n今天 PM 是各种梗图嘲讽的对象，但我仍然相信 PM 是可以让世界变得更美好的一个了不起的岗位。\n\n我的第一份工作就是跟着王兴和荣均做 PM，那个时候做的产品是饭否和海内。后来我自己创业，做了街旁、新世相、躺岛。\n\n躺岛是一个消费品牌，我们卖得最好的产品是「猫肚皮枕」和「瓜瓜凉被」，当时很多朋友都诧异我怎么做了这样一间公司，但我自己并没有觉得很跳跃，我感觉每天做的事情都差不多，仍然是产品+营销，如何洞察用户、分析竞品、了解技术和材料、最后设计和交付一个产品，然后开始 go-to-market，做营销、做增长、做投放。\n\n说回来，我觉得不管是 SunAlly 魂旅 FocusFlight，其实都证明了从用户出发的产品创意，有强大的生命力。\n\n我为什么这么相信这一点，也觉得看到它们是我最近的 Aha Moments，是因为我自己做「猫肚皮枕」和「瓜瓜凉被」的经验。\n\n枕头、被子，听起来完全没有创新空间的产品，也确实可能过去十年都没出什么新意的产品，我们都能发挥产品经理的价值，进行充分的用户洞察、产品设计、营销规划，让它们成为天猫京东抖音的冠军产品，在多次 618 和双 11 的枕头类目和凉被类目卖到第 1 名。\n\n所以说，关注 AI 技术的突破很重要，但不要为了 AI 而 AI、为了风口而创业。\n>\n> 在 AI 时代创业并不是非得要基于大模型的能力边界去做产品，而是借助 AI 去做出你洞察到的、可能与 AI 本身没有直接关系的产品。\n>\n这同样是善用 AI 这个杠杆的一种创业方式。\n\n## ⑦ 「我们总是高估未来两年的变化，低估未来 10 年的变革。」\n\n这是 Bill Gates 在 1996 年时说的一句话，微软最初对万维网（World Wide Web）的反应迟钝。在1990年代初期，没有积极开发网页浏览器。直到1995年，看到Netscape的崛起后，微软才紧急开发 IE，这场\"浏览器战争\"最终导致了后来的反垄断诉讼。\n\n当我最近看到这句话时，我不禁思考：面对 AI 这场变革，我们很可能正在犯着同样的错误\n\nMark Zuckerberg 最近上了一档播客 Stratechery by Ben Thompson。整期内容都很精彩，大家感兴趣可以听一听，或者找中文翻译的文稿看一看。\n\n我印象深刻的是在播客中，Zuckerberg 毫不遮掩自己的野心，他提到 Meta 利用 AI 优化广告系统的目标是：任何企业来找 Meta 投广告，都不用操心什么，只要做三步就能投放广告：第一步，告诉我们想要达到什么效果；第二步，说明愿意花多少钱；第三步，把银行账户连接上。就这么简单，剩下的一切我们都会搞定，而且保证按效果付费。\n\nZuckerberg 说这就是一个「终极的商业 Agent」。\n\n听起来是不是有一丝恐怖？广告行业会颠覆成什么样子？\n\n想象一下这样的场景：我、小明、小红、小蓝都各自做了一个枕头。在过去，我们做出产品后的下一步，就是思考如何拍摄素材，如何撰写广告语，制作详情页，拍摄短视频推向市场。\n\n但现在，如果Meta、TikTok或小红书告诉商家：\"你不用做素材，只需把产品上传，告诉我你有多少预算，你能接受什么样的ROI，接下来的一切都交给我。\"\n\n这理论上是完全可行的，对吧？它可以生成素材，可以精准定位人群，可以实时跟踪数据。\n\n但我在想，那样的世界会是怎样的商业环境呢？它会变得更好，还是更差？\n\n人们是会花更多时间去打磨产品，心无旁骛，不必再考虑如何做营销？还是大家会内卷到供应链上，去扣一分一厘一毫来降低产品成本，从而在社交媒体平台上承受比竞品更低的 ROI？\n\n我不知道，但我知道的是：AI一定会改变广告行业。\n\n这对广告行业的彻底颠覆，近在眼前，几乎是确定会发生的一种未来。\n\n我自己也在给一家硅谷 AI Native 广告科技公司 **Nex.ad^\\[2\\]^** 做顾问，他们在天使轮就融到了全球最顶级 VC 的钱，比如 a16z 这个大家肯定都知道，同时还有 Point72（对冲基金传奇 Steve Cohen 创立） 和 Prosus（腾讯的最大股东，24%）这两家 VC。\n\nNex.ad 的目标和 Zuckerberg 刚才描述的 Meta 的目标，有相似之处。\n\n为什么全球顶级 VC 都投这个赛道，尤其是 Point72 和 Prosus 甚至很少投早期项目，也提前压注。\n\n因为大家都看到了，广告行业被 AI 改造所带来的巨大机会与商业潜力。\n\n而这个改变不只局限于广告行业，而是整个商业世界当前的运作状态。\n\n这时再思考那句话，我会不会其实太高估了未来两年的变化，却低估了未来十年的变革？\n\n高估两年变化的是我刚才描述的那个有些恐怖的场景------它不一定会在两年内发生，我可能只是做出了过度的应激反应。但同时，我又可能低估了未来十年的变革。\n\n说实话，我也不确定。不管怎样，这是一个 AI 科技让我们拥有了前所未有杠杆的时代。\n\n所以在这个时刻，多做思考，积极行动，我一直相信 AI 是我们这一代人最大的价值创造机遇。\n\n## ⑧ 「美是一种生产力」\n\nY Combinotar 是硅谷最厉害的孵化器，它们在招募新一季的创业公司时，特别提到：希望能看到更多设计师背景的创始人。\n\n随着 AI 编程工具的成熟，未来构建产品将变得越来越简单。在这种情况下，优秀的设计比以往任何时候都更加重要。\n\n设计师天生就具备成为优秀创业者的关键能力：共情、审美、「独特」 ------这些都是做出一款人们渴求的新产品所需要的能力。\n\n设计很重要。YC 自己举例他们投资的公司 Airbnb 和 Stripe 都是因为设计而致胜的。\n\n我更相信这一点，我一直认为「美是一种生产力」，即便是 OpenAI 和 Anthropic 的官网，如果大家认真逛，也会感觉到一种很有态度的美感。\n\n传统产品开发流程由 PM 写 PRD、设计师做 UI/UX、工程师写代码，这也是所谓的：「软件工程」 ------我在北航学的恰恰是「软件工程」这门专业。\n\n而在 AI 时代，相信大家都已经感受到了变化：所有角色的界限都在变得模糊，职责在重新被定义。\n\n现在有了 Lovable、Bolt，还有最近出的 Figma Make 这些 AI 工具，设计师也能自己做产品了。\n\n我在小红书上看到一位设计师叫祝以南，他做的一个\"日落岛\" App。这就是一个设计师自己从头到尾独立完成的非常漂亮的应用。\n\n这个 App 的功能是什么呢？你拍摄日落，然后上传到应用中。它会从日落照片中提取色彩元素，生成一张精美的、可以珍藏的那一刻的色彩卡片。\n\n语言总是苍白的，你得亲自使用和体验这个 App，才能真正体会到它带来的细腻美感和收藏的快乐。\n\n这就是很典型的一位设计师，靠自己的创意、审美、动手能力和 AI Coding，从头到尾独立完成了一个完整而精美的产品。\n\n乔布斯曾经说过：\n>\n> 「Design is not just what it looks like and feels like. Design is how it works.」\n>\n无论是做产品的界面设计、还是功能与逻辑，设计师都有天然优势。\n\n虽然很多设计师感到失业的恐慌，但善用 AI 带来的效率杠杆，设计师可以从头到尾独立创造产品。因此，我认为 AI 很可能是时代赋予设计师群体的一次重大赋能。\n\n## ⑨ 「创造爱的瞬间」\n\nAI 能提高效率，但效率无限提高之后，人要去做什么呢？\n\nAI 也同样在帮助回答这个问题：它可以为人提供情绪价值。\n\n日本有一个 AI 宠物叫做 Moflin ，最近在闲鱼卖到了 4000 多一个。它长这个样子：\n\n朋友送了我一支 Moflin，我收到之后玩得很开心，发了一条即刻：\n\n再分享一个产品，大家知道「哄哄模拟器」吗？\n\n这是去年刷屏的一个 AI 应用，他的作者王登科创业做了一个 App「独响」，已经有 5 万 DAU，在小红书上有 4 万篇笔记。\n\n「独响」是一个「AI 朋友圈」，用户将它作为朋友圈使用，发布内容后会收到各种 AI 角色的评论和互动。\n\n在「独响」App 中有个功能是「AI 陪你睡觉」，最近王登科上了一期十字路口的播客，**[他说每天有 1 万多人在App 中用「AI 陪你睡觉」的功能。](https://mp.weixin.qq.com/s?__biz=MzAxMDMxOTI2NA",
        "tags": [],
        "line": 279,
        "startOffset": 12966,
        "endOffset": 17561,
        "filePath": "Sources/CuboxSync/2025过去一半了， AI带给我的9个Aha Moments-2025-07-03.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1751533354382,
        "isNativeComment": false
      }
    ],
    "Sources/Clippings/年轻人的第一台 VPS 代理服务器 - 资源荟萃  资源荟萃, Lv1 - LINUX DO.md": [
      {
        "id": "wpjstd2vp",
        "text": "流量",
        "tags": [],
        "line": 607,
        "startOffset": 20222,
        "endOffset": 20228,
        "filePath": "Sources/Clippings/年轻人的第一台 VPS 代理服务器 - 资源荟萃  资源荟萃, Lv1 - LINUX DO.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259580642,
        "isNativeComment": false
      }
    ],
    "Sources/Clippings/一个搭配最新Raycast，无痛用自己的API畅享QuickAI功能的CF Workers - 开发调优  开发调优, Lv2.md": [
      {
        "id": "3f6dsuxz3",
        "text": " undefined && token !",
        "tags": [],
        "line": 191,
        "startOffset": 6560,
        "endOffset": 6585,
        "filePath": "Sources/Clippings/一个搭配最新Raycast，无痛用自己的API畅享QuickAI功能的CF Workers - 开发调优  开发调优, Lv2.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259580972,
        "isNativeComment": false
      }
    ],
    "Sources/Clippings/Weekly Release of New Update (v1.8b) Discussion Thread  - February 24, 2025 新版本（v1.8b）每周发布讨论帖  - 2025 年 2 月 24 日.md": [
      {
        "id": "vsah2260n",
        "text": "[Patch Notes  补丁说明](https://zen-browser.app/release-notes/latest/)  \r\nThis thread is for the purpose of providing a central place for both users and contributors of the project to search and find information about the new v1.8b update. Please refrain from creating new posts about bugs (if not critical), questions, discussions about the new update.  \r\n本帖子旨在为项目的用户和贡献者提供一个集中搜索和查找新 v1.8b 更新信息的地方。请不要创建关于错误（如果不是关键问题）、问题、新更新讨论的新帖子。",
        "tags": [],
        "line": 13,
        "startOffset": 545,
        "endOffset": 977,
        "filePath": "Sources/Clippings/Weekly Release of New Update (v1.8b) Discussion Thread  - February 24, 2025 新版本（v1.8b）每周发布讨论帖  - 2025 年 2 月 24 日.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259580950,
        "isNativeComment": false
      }
    ],
    "Sources/Clippings/Gmail邮箱无限别名法,让你实现注册小号Gmail自由 - 资源荟萃.md": [
      {
        "id": "mziw33l0d",
        "text": "Gmail无限别名法",
        "tags": [],
        "line": 16,
        "startOffset": 654,
        "endOffset": 668,
        "filePath": "Sources/Clippings/Gmail邮箱无限别名法,让你实现注册小号Gmail自由 - 资源荟萃.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259581046,
        "isNativeComment": false
      },
      {
        "id": "ed7qux1aa",
        "text": "主邮箱 aaa@gmail.com 举例",
        "tags": [],
        "line": 18,
        "startOffset": 675,
        "endOffset": 699,
        "filePath": "Sources/Clippings/Gmail邮箱无限别名法,让你实现注册小号Gmail自由 - 资源荟萃.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259581067,
        "isNativeComment": false
      }
    ],
    "Sources/Clippings/DeepSeek ：让世界感受开源的胜利.md": [
      {
        "id": "29b1m575l",
        "text": "&mid=2247489232&idx=1&sn=8b66f569de9bfc8586519ed4f123c07f&scene=21#wechat_redirect)\r\n\r\n[Deepseek R1: 理解且用好的秘诀](https://mp.weixin.qq.com/s?__biz=MzkxMTQ0ODE3Ng",
        "tags": [],
        "line": 112,
        "startOffset": 3413,
        "endOffset": 3575,
        "filePath": "Sources/Clippings/DeepSeek ：让世界感受开源的胜利.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259580803,
        "isNativeComment": false
      },
      {
        "id": "qxonkn72s",
        "text": "&mid=2247489052&idx=1&sn=efd214e9f351d93ce2c8109c852ee7f4&scene=21#wechat_redirect)\r\n\r\n[使用 AI 开发产品「文To图」的经验](https://mp.weixin.qq.com/s?__biz=MzkxMTQ0ODE3Ng",
        "tags": [],
        "line": 116,
        "startOffset": 3731,
        "endOffset": 3891,
        "filePath": "Sources/Clippings/DeepSeek ：让世界感受开源的胜利.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259581121,
        "isNativeComment": false
      }
    ],
    "Sources/Clippings/CloudFlare自建长久自用节点（自用） - 开发调优  开发调优, Lv2.md": [
      {
        "id": "apgc08ehl",
        "text": " \"'\"$TARGET_FILE\"'\") | .browser_download_url')\r\n\r\n          if [ -z \"$DOWNLOAD_URL\" ] || [ \"$DOWNLOAD_URL\" ",
        "tags": [],
        "line": 74,
        "startOffset": 2216,
        "endOffset": 2327,
        "filePath": "Sources/Clippings/CloudFlare自建长久自用节点（自用） - 开发调优  开发调优, Lv2.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259580605,
        "isNativeComment": false
      }
    ],
    "Sources/Clippings/Bases syntax.md": [
      {
        "id": "o87k0bh9s",
        "text": " true\"\r\n    lat: lat\r\n    long: long\r\n    title: file.name\r\n```\r\n\r\n### Filters\r\n\r\nBy default a base includes every file in the vault. There is no `from` or `source` like in SQL or Dataview. The `filters` section lets you define conditions to narrow down the dataset.\r\n\r\n```yaml\r\nfilters:\r\n  or:\r\n    - file.hasTag(\"tag\")\r\n    - and:\r\n        - file.hasTag(\"book\")\r\n        - file.hasLink(\"Textbook\")\r\n    - not:\r\n        - file.hasTag(\"book\")\r\n        - file.inFolder(\"Required Reading\")\r\n```\r\n\r\nThere are two opportunities to apply filters:\r\n\r\n1. At the global `filters` level (shown above) where they apply to all views in the base.\r\n2. At the `view` level where apply only to a specific view.\r\n\r\nThese two sections are functionally equivalent and when evaluating for a view they will be concatenated with an `AND`.\r\n\r\nThe `filters` section contains either a single filter statement as a string, or a recursively defined filter object. Filter objects may contain one of `and`, `or`, or `not`. These keys are a heterogeneous list of other filter objects or filter statements in strings. A filter statement is a line which evaluates to truthy or falsey when applied to a note. It can be one of the following:\r\n\r\n- A basic comparison using standard arithmetic operators.\r\n- A function. A variety of [functions](https://help.obsidian.md/bases/functions) are built-in, and plugins can add additional functions.\r\n\r\nThe syntax and available functions for filters and formulas are the same.\r\n\r\n### Formulas\r\n\r\nThe `formulas` section defines formula properties that can be displayed across all views in the base file.\r\n\r\n```yaml\r\nformulas:\r\n  formatted_price: 'if(price, price.toFixed(2) + \" dollars\")'\r\n  ppu: \"(price / age).toFixed(2)\"\r\n```\r\n\r\nFormula properties support basic arithmetic operators and a variety of built-in [functions](https://help.obsidian.md/bases/functions). In the future, plugins will be able to add functions for use in formulas.\r\n\r\nProperties in formulas can be referenced in multiple ways, depending on the type of property:\r\n\r\n- Properties in the frontmatter are called `note` properties. For example `note.price` or `note[\"price\"]`. If a property does not have a prefix it is assumed to be a `note` property.\r\n- Properties about the file (implicit properties) are called `file` properties. For example, `file.size` or `file.ext`. You may also use `file` to reference the file itself, for example `file.hasLink()`.\r\n- Formulas are prefixed with `formula`, for example `formula.formatted_price`.\r\n\r\nFormula properties can use values from other formula properties, as long as there is no circular reference. They are always defined as strings in the YAML, however the data type of the data and the function returns will be used to determine the output data type.\r\n\r\nNote the use of nested quotes necessary to include text literals in the YAML field. Text literals must be enclosed in single or double quotes.\r\n\r\n### Properties\r\n\r\nThe `properties` section allows storing configuration information about each property. It is up to the individual view how to use these configuration values. For example, in tables the display name is used for the column headers.\r\n\r\n```yaml\r\nproperties:\r\n  status:\r\n    displayName: Status\r\n  formula.formatted_price:\r\n    displayName: \"Price\"\r\n  file.ext:\r\n    displayName: Extension\r\n```\r\n\r\nDisplay names are not used in filters or formulas.\r\n\r\n### Views\r\n\r\nThe `views` section defines how the data can be rendered. Each entry in the `views` list defines a separate view of the same data, and there can be as many different views as needed.\r\n\r\n```yaml\r\nviews:\r\n  - type: table\r\n    name: \"My table\"\r\n    limit: 10\r\n    filters:\r\n      and:\r\n        - 'status != \"done\"'\r\n        - or:\r\n            - \"formula.ppu > 5\"\r\n            - \"price > 2.1\"\r\n    order:\r\n      - file.name\r\n      - file.ext\r\n      - note.age\r\n      - formula.ppu\r\n      - formula.formatted_price\r\n  - type: map\r\n    name: \"Example map\"\r\n    filters: \"has_coords ",
        "tags": [],
        "line": 66,
        "startOffset": 1949,
        "endOffset": 5938,
        "filePath": "Sources/Clippings/Bases syntax.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259581334,
        "isNativeComment": false
      },
      {
        "id": "7u5j783ew",
        "text": " \"md\"` will be true for all Markdown files and false otherwise.\r\n\r\n| Property | Type | Description |\r\n| --- | --- | --- |\r\n| `file.ctime` | Date | Created time |\r\n| `file.ext` | String | File extension |\r\n| `file.file` | File | File object, only usable in specific functions |\r\n| `file.folder` | String | Path of the file folder |\r\n| `file.mtime` | Date | Modified time |\r\n| `file.name` | String | File name |\r\n| `file.path` | String | Path of the file |\r\n| `file.size` | Number | File size |\r\n| `file.links` | List | List of all internal links in the note, including frontmatter |\r\n\r\n### Access properties of the current file\r\n\r\nEmbedded bases can use `this` to access properties of the current file. For example, `this.file.name` will resolve to the name of the file which has embedded the base, instead of the file being evaluated.\r\n\r\nIn a sidebar, `this` takes on the special meaning of \"the currently active file\". This allows you to create contextual queries based on the active file in the main content area. For example, this can be used to replicate the backlinks pane with this filter: `file.hasLink(this.file)`.\r\n\r\n## Operators\r\n\r\n### Arithmetic operators\r\n\r\nArithmetic operators perform arithmetic on numbers. For example, `radius * (2 * 3.14)`.\r\n\r\n| Operator | Description |\r\n| --- | --- |\r\n| `+` | plus |\r\n| `-` | minus |\r\n| `*` | multiply |\r\n| `/` | divide |\r\n| `%` | modulo |\r\n| `( )` | parenthesis |\r\n\r\n### Date arithmetic\r\n\r\nDates can be modified by adding and subtracting durations. Duration units accept multiple formats:\r\n\r\n| Unit | Duration |\r\n| --- | --- |\r\n| `y`, `year`, `years` | year |\r\n| `M`, `month`, `months` | month |\r\n| `d`, `day`, `days` | day |\r\n| `w`, `week`, `weeks` | week |\r\n| `h`, `hour`, `hours` | hour |\r\n| `m`, `minute`, `minutes` | minute |\r\n| `s`, `second`, `seconds` | second |\r\n\r\nTo modify or offset Date objects, use the `+` or `-` operator with a duration string. For example, `date + \"1M\"` adds 1 month to the date, while `date - \"2h\"` subtracts 2 hours from the date.\r\n\r\nThe global [function](https://help.obsidian.md/bases/functions) `today()` can be used to get the current date, and `now()` can be used to get the current date with time.\r\n\r\n- `now() + \"1 day\"` returns a datetime exactly 24 hours from the time of execution.\r\n- `file.mtime > now() - \"1 week\"` returns `true` if the file was modified within the last week.\r\n- `date(\"2024-12-01\") + \"1M\" + \"4h\" + \"3m\"` returns a Date object representing `2025-01-01 04:03:00`.\r\n- Subtract two dates to get the millisecond difference between the two, for example, `now() - file.ctime`.\r\n- To get the date portion of a Date with time, use `datetime.date()`.\r\n- To format a Date object, use the `format()` function, for example `datetime.format(\"YYYY-MM-DD\")`.\r\n\r\n### Comparison operators\r\n\r\nComparison operators can be used to compare numbers, or Date objects. Equal and not equal can be used with any kind of value, not just numbers and dates.\r\n\r\n| Operator | Description |\r\n| --- | --- |\r\n| `",
        "tags": [],
        "line": 193,
        "startOffset": 7719,
        "endOffset": 10716,
        "filePath": "Sources/Clippings/Bases syntax.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259581104,
        "isNativeComment": false
      },
      {
        "id": "7rpb6no1i",
        "text": "` and `!=`. They are equivalent as long as they point to the same file, or if the file does not exist when looked up, their link text must be identical.\r\n\r\nLinks can be compared to files such as `file` or `this`. They will equate if the link resolves to the file. For example, `author ",
        "tags": [],
        "line": 318,
        "startOffset": 13817,
        "endOffset": 14106,
        "filePath": "Sources/Clippings/Bases syntax.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259581202,
        "isNativeComment": false
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/默认面对自己写笔记，不要考虑有读者.md": [
      {
        "id": "685lhm8sc",
        "text": "我的理解:: 写笔记为为了让自己更好地思考。写长文是为了把思想和观点更准确地传递给读者。后者往往需要花很多精力去遣词造句视图更准确表达，毕竟人与人之间的知识面和三观永远是有差异的。但写笔记就不需要花额外时间做这些可能对自己是无用功的事情，毕竟核心是帮助自己更好地思考，而不是更好地表达。但写长文的技能可不能丢，毕竟交流能力是我们立足社会的元技能。写笔记对内，写长文对外，而80%以上的时间，我们的创作应该是对内的，自省的。",
        "tags": [],
        "line": 11,
        "startOffset": 174,
        "endOffset": 389,
        "filePath": "Sources/Articles/常青笔记阅读笔记/默认面对自己写笔记，不要考虑有读者.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 写笔记为为了让自己更好地思考。写长文是为了把思想和观点更准确地传递给读者。后者往往需要花很多精力去遣词造句视图更准确表达，毕竟人与人之间的知识面和三观永远是有差异的。但写笔记就不需要花额外时间做这些可能对自己是无用功的事情，毕竟核心是帮助自己更好地思考，而不是更好地表达。但写长文的技能可不能丢，毕竟交流能力是我们立足社会的元技能。写笔记对内，写长文对外，而80%以上的时间，我们的创作应该是对内的，自省的。"
        ],
        "createdAt": 1752259580524,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/间隔重复对于逐步完善灵光一闪可能有用.md": [
      {
        "id": "548zz0nya",
        "text": "我的理解:: 现在我加入到[[Spaced Repetition]]插件中进行anki记忆的笔记标准还没定下来，数量也少。这里提供了一个思路，自己的闪念笔记，也可以加入到anki中，过几天之后再看这则闪念，可能会迸发出新想法。#待办/某天 ",
        "tags": [],
        "line": 12,
        "startOffset": 186,
        "endOffset": 310,
        "filePath": "Sources/Articles/常青笔记阅读笔记/间隔重复对于逐步完善灵光一闪可能有用.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 现在我加入到[[Spaced Repetition]]插件中进行anki记忆的笔记标准还没定下来，数量也少。这里提供了一个思路，自己的闪念笔记，也可以加入到anki中，过几天之后再看这则闪念，可能会迸发出新想法。#待办/某天 "
        ],
        "createdAt": 1752259580534,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/间隔重复可以降低破坏性收件箱维护操作的风险.md": [
      {
        "id": "tpzm06k5r",
        "text": "我的理解:: 间隔重复相当于用时间换空间，让删除或清空操作从一次性操作，变成了经过多次考核的操作。",
        "tags": [],
        "line": 11,
        "startOffset": 178,
        "endOffset": 231,
        "filePath": "Sources/Articles/常青笔记阅读笔记/间隔重复可以降低破坏性收件箱维护操作的风险.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 间隔重复相当于用时间换空间，让删除或清空操作从一次性操作，变成了经过多次考核的操作。"
        ],
        "createdAt": 1752259580525,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/间隔重复卡片通常是原子化的，而助记媒介为其赋予结构.md": [
      {
        "id": "q5wiv81km",
        "text": "我的理解:: 比如现在我自己在用的obsidian的[[Spaced Repetition]]插件，就是一种助记媒介，在review的卡片笔记的时候，能看到额外的结构信息，比如引用它的其他卡片，所在文件夹目录，标签等等。",
        "tags": [],
        "line": 11,
        "startOffset": 182,
        "endOffset": 296,
        "filePath": "Sources/Articles/常青笔记阅读笔记/间隔重复卡片通常是原子化的，而助记媒介为其赋予结构.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 比如现在我自己在用的obsidian的[[Spaced Repetition]]插件，就是一种助记媒介，在review的卡片笔记的时候，能看到额外的结构信息，比如引用它的其他卡片，所在文件夹目录，标签等等。"
        ],
        "createdAt": 1752259580529,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/软件界面经常将破坏性操作作为最终决定，而不是视情况而定的选择.md": [
      {
        "id": "d3lueh1tw",
        "text": "我的理解:: 删除、清空一些内容的操作就像鸡肋，食之无味，弃之可惜。现在有另一个选择就是使用间隔重复，丢到将来某天的箱子里，等待将来时机成熟，有确定的结论将其删除或使用上。",
        "tags": [],
        "line": 11,
        "startOffset": 187,
        "endOffset": 277,
        "filePath": "Sources/Articles/常青笔记阅读笔记/软件界面经常将破坏性操作作为最终决定，而不是视情况而定的选择.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 删除、清空一些内容的操作就像鸡肋，食之无味，弃之可惜。现在有另一个选择就是使用间隔重复，丢到将来某天的箱子里，等待将来时机成熟，有确定的结论将其删除或使用上。"
        ],
        "createdAt": 1752259580532,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/谨防自动导入阅读收件箱.md": [
      {
        "id": "py1w07ge7",
        "text": "我的理解:: 阅读inbox存放的一定要是值得精读，且我们会花时间去拆解做笔记的内容。",
        "tags": [],
        "line": 11,
        "startOffset": 168,
        "endOffset": 215,
        "filePath": "Sources/Articles/常青笔记阅读笔记/谨防自动导入阅读收件箱.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 阅读inbox存放的一定要是值得精读，且我们会花时间去拆解做笔记的内容。"
        ],
        "createdAt": 1752259580512,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/让思想和信念有机地涌现.md": [
      {
        "id": "h667boxo3",
        "text": "我的理解:: 没有人从一张白纸开始写作。也没有人从一颗空白的大脑开始凝聚自己的思想和信念。",
        "tags": [],
        "line": 11,
        "startOffset": 168,
        "endOffset": 217,
        "filePath": "Sources/Articles/常青笔记阅读笔记/让思想和信念有机地涌现.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 没有人从一张白纸开始写作。也没有人从一颗空白的大脑开始凝聚自己的思想和信念。"
        ],
        "createdAt": 1752259580511,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/被索引的参考资料与标签.md": [
      {
        "id": "fck8fl44z",
        "text": "我的理解:: 标签使用起来局限性很大，尤其是其能检索出的信息往往是非常粗粒度。索引[[TOC]]和[[∑ MOCs]]才重要，不仅可以检索细粒度，而且可以附加描述信息。",
        "tags": [],
        "line": 11,
        "startOffset": 168,
        "endOffset": 256,
        "filePath": "Sources/Articles/常青笔记阅读笔记/被索引的参考资料与标签.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 标签使用起来局限性很大，尤其是其能检索出的信息往往是非常粗粒度。索引[[TOC]]和[[∑ MOCs]]才重要，不仅可以检索细粒度，而且可以附加描述信息。"
        ],
        "createdAt": 1752259580510,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/自主思考.md": [
      {
        "id": "bhwfnzhfb",
        "text": "我的理解:: 也就是独立思考，既不人云亦云，也不作者云我亦云。这也是[[学会提问（原书第12版）-尼尔·布朗 斯图尔特·基利]]中表达的核心思想之一。",
        "tags": [],
        "line": 13,
        "startOffset": 179,
        "endOffset": 258,
        "filePath": "Sources/Articles/常青笔记阅读笔记/自主思考.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 也就是独立思考，既不人云亦云，也不作者云我亦云。这也是[[学会提问（原书第12版）-尼尔·布朗 斯图尔特·基利]]中表达的核心思想之一。"
        ],
        "createdAt": 1752259580521,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/精细编码.md": [
      {
        "id": "m1xp8sfum",
        "text": "我的理解:: 看描述，其实就是[[记忆宫殿]]所采用的助记法。",
        "tags": [],
        "line": 11,
        "startOffset": 161,
        "endOffset": 196,
        "filePath": "Sources/Articles/常青笔记阅读笔记/精细编码.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 看描述，其实就是[[记忆宫殿]]所采用的助记法。"
        ],
        "createdAt": 1752259580502,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/笔记标题建议使用完整的句子，避免模糊主张.md": [
      {
        "id": "28my0sudi",
        "text": "我的理解:: #todo 需要学习和养成这个习惯。",
        "tags": [],
        "line": 12,
        "startOffset": 185,
        "endOffset": 214,
        "filePath": "Sources/Articles/常青笔记阅读笔记/笔记标题建议使用完整的句子，避免模糊主张.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: #todo 需要学习和养成这个习惯。"
        ],
        "createdAt": 1752259580524,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/笔记应该让你吃惊.md": [
      {
        "id": "j0p11y5j5",
        "text": "我的理解:: 就像看一篇小说、看一部电影。我们不是影评家，我们没有必要每一个细节和每一帧都做笔记。我的原则是，让自己产生情绪波动的，感到惊喜的内容，去做笔记即可。",
        "tags": [],
        "line": 11,
        "startOffset": 165,
        "endOffset": 250,
        "filePath": "Sources/Articles/常青笔记阅读笔记/笔记应该让你吃惊.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 就像看一篇小说、看一部电影。我们不是影评家，我们没有必要每一个细节和每一帧都做笔记。我的原则是，让自己产生情绪波动的，感到惊喜的内容，去做笔记即可。"
        ],
        "createdAt": 1752259580504,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/笔记写作的反馈不足.md": [
      {
        "id": "p2fcy563i",
        "text": "我的理解:: 任何努力，有反馈才能帮助我们不断改进，避免闭门造车，做笔记也是如此。所以[[数字花园]]这种形式很吸引我，能让我的笔记被看到。但现在由于缺少积累，很少人给我反馈，哎。",
        "tags": [],
        "line": 11,
        "startOffset": 166,
        "endOffset": 260,
        "filePath": "Sources/Articles/常青笔记阅读笔记/笔记写作的反馈不足.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 任何努力，有反馈才能帮助我们不断改进，避免闭门造车，做笔记也是如此。所以[[数字花园]]这种形式很吸引我，能让我的笔记被看到。但现在由于缺少积累，很少人给我反馈，哎。"
        ],
        "createdAt": 1752259580504,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/笔记写作实践大多是无效的.md": [
      {
        "id": "u5kn6vg72",
        "text": "我的理解:: 为了写而写，为了记录而记录，这些笔记和写作思想，都走远了，做笔记，首先应该是为了思考。如果根本目标没搞对，在此基础上的方法和实践就可能走错路，比如很多人照搬柳比歇夫的类似[[间歇式日记]]的方法，却不先分析自己的生活和工作特点，最后只能草草了之放弃。还有[[番茄工作法]]等等，都有它的适用范围和局限性。",
        "tags": [],
        "line": 11,
        "startOffset": 169,
        "endOffset": 332,
        "filePath": "Sources/Articles/常青笔记阅读笔记/笔记写作实践大多是无效的.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 为了写而写，为了记录而记录，这些笔记和写作思想，都走远了，做笔记，首先应该是为了思考。如果根本目标没搞对，在此基础上的方法和实践就可能走错路，比如很多人照搬柳比歇夫的类似[[间歇式日记]]的方法，却不先分析自己的生活和工作特点，最后只能草草了之放弃。还有[[番茄工作法]]等等，都有它的适用范围和局限性。"
        ],
        "createdAt": 1752259580506,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/知识工作应能聚沙成塔.md": [
      {
        "id": "dzzq3t9q5",
        "text": "我的理解:: 曾经没有足够稳定和持久坚持的笔记库和知识库，一直在玩沙，建不成知识宝塔。以前为忙碌的工作写过太多短暂的工作日志，却鲜有为自己的知识增长写常青笔记。短期看确实工作效率高了，长期看积累和沉淀下来的就少了，有点低头看路，却不曾仰望星空的感觉。",
        "tags": [],
        "line": 11,
        "startOffset": 167,
        "endOffset": 296,
        "filePath": "Sources/Articles/常青笔记阅读笔记/知识工作应能聚沙成塔.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 曾经没有足够稳定和持久坚持的笔记库和知识库，一直在玩沙，建不成知识宝塔。以前为忙碌的工作写过太多短暂的工作日志，却鲜有为自己的知识增长写常青笔记。短期看确实工作效率高了，长期看积累和沉淀下来的就少了，有点低头看路，却不曾仰望星空的感觉。"
        ],
        "createdAt": 1752259580504,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/用手机收集和分流，而不是（通常）阅读.md": [
      {
        "id": "2y5owemjd",
        "text": "我的理解:: 简直不能再认同，手机上的不做笔记的阅读，吸收率极低，看看娱乐文章和视频还行，如果看到那些深度好文，还是先放进inbox，坐到电脑旁边了再继续。",
        "tags": [],
        "line": 13,
        "startOffset": 193,
        "endOffset": 275,
        "filePath": "Sources/Articles/常青笔记阅读笔记/用手机收集和分流，而不是（通常）阅读.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 简直不能再认同，手机上的不做笔记的阅读，吸收率极低，看看娱乐文章和视频还行，如果看到那些深度好文，还是先放进inbox，坐到电脑旁边了再继续。"
        ],
        "createdAt": 1752259580529,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/理解概念需与其尽力较量.md": [
      {
        "id": "osd8ye25z",
        "text": "我的理解:: 入门时可以用类比等手段简化概念以求理解，但真正理解肯定是要围绕领域的核心概念进行不断地提问，上下求索。",
        "tags": [],
        "line": 11,
        "startOffset": 163,
        "endOffset": 225,
        "filePath": "Sources/Articles/常青笔记阅读笔记/理解概念需与其尽力较量.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 入门时可以用类比等手段简化概念以求理解，但真正理解肯定是要围绕领域的核心概念进行不断地提问，上下求索。"
        ],
        "createdAt": 1751990624816,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/现有的间隔重复系统不鼓励常青笔记的创作.md": [
      {
        "id": "fswsrcoeh",
        "text": "我的理解:: 如果单纯使用anki，和常青笔记是割裂开的。前者更强调间隔重复记忆，后者更强调不断地更新和积累。",
        "tags": [],
        "line": 11,
        "startOffset": 176,
        "endOffset": 235,
        "filePath": "Sources/Articles/常青笔记阅读笔记/现有的间隔重复系统不鼓励常青笔记的创作.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 如果单纯使用anki，和常青笔记是割裂开的。前者更强调间隔重复记忆，后者更强调不断地更新和积累。"
        ],
        "createdAt": 1752259580511,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/测试效应.md": [
      {
        "id": "zm9p6e6ys",
        "text": "我的理解:: 及时刷题答题，对学习来说是多么多么重要啊。题海战术就是一种不需要太精巧的学习流程的设计，简单贯彻就能取得成绩的最简单粗暴的方法。",
        "tags": [],
        "line": 11,
        "startOffset": 161,
        "endOffset": 236,
        "filePath": "Sources/Articles/常青笔记阅读笔记/测试效应.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 及时刷题答题，对学习来说是多么多么重要啊。题海战术就是一种不需要太精巧的学习流程的设计，简单贯彻就能取得成绩的最简单粗暴的方法。"
        ],
        "createdAt": 1752259580494,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/每日工作日志.md": [
      {
        "id": "9v421bunc",
        "text": "我的理解:: 即[[» Daily notes工作流]]",
        "tags": [],
        "line": 11,
        "startOffset": 163,
        "endOffset": 195,
        "filePath": "Sources/Articles/常青笔记阅读笔记/每日工作日志.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 即[[» Daily notes工作流]]"
        ],
        "createdAt": 1752259580496,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/标签是无效的关联结构.md": [
      {
        "id": "heo7did8b",
        "text": " 我的理解:: 这点我跟 andy 的观点基本一致。所以我将标签，用成了表达状态的一种标记，而非传统的笔记方法将其用来分类和做关联。",
        "tags": [],
        "line": 11,
        "startOffset": 167,
        "endOffset": 237,
        "filePath": "Sources/Articles/常青笔记阅读笔记/标签是无效的关联结构.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " 我的理解:: 这点我跟 andy 的观点基本一致。所以我将标签，用成了表达状态的一种标记，而非传统的笔记方法将其用来分类和做关联。"
        ],
        "createdAt": 1752259580499,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/有效的系统设计需要从真刀真枪的使用情境汲取洞见.md": [
      {
        "id": "6xtvzs2v1",
        "text": "我的理解:: 现在是个人，就能BB两句，将一些大道理。有效的东西、真理确是来源于实践的。",
        "tags": [],
        "line": 11,
        "startOffset": 180,
        "endOffset": 228,
        "filePath": "Sources/Articles/常青笔记阅读笔记/有效的系统设计需要从真刀真枪的使用情境汲取洞见.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 现在是个人，就能BB两句，将一些大道理。有效的东西、真理确是来源于实践的。"
        ],
        "createdAt": 1752259580511,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/最好的阅读方式是高度语境化的.md": [
      {
        "id": "fz12zf5c9",
        "text": "我的理解:: 不同的书，不同时期的我，不同时刻的我，读书的目的都是不同的，需要具体问题具体分析，就像[[如何阅读一本书-莫提默·艾德勒 查尔斯·范多伦]]中所言，要按照实际情况制定读书方法。",
        "tags": [],
        "line": 11,
        "startOffset": 171,
        "endOffset": 270,
        "filePath": "Sources/Articles/常青笔记阅读笔记/最好的阅读方式是高度语境化的.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 不同的书，不同时期的我，不同时刻的我，读书的目的都是不同的，需要具体问题具体分析，就像[[如何阅读一本书-莫提默·艾德勒 查尔斯·范多伦]]中所言，要按照实际情况制定读书方法。"
        ],
        "createdAt": 1752259580502,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/更好地记笔记这个描述太过流于表面；核心在于更好地思考.md": [
      {
        "id": "zspgadle3",
        "text": "我的理解:: 现实生活中，那些成功人士并不是都会做笔记，但这并不意味着做笔记不是一个能帮助我们成功的好习惯，关键在于：不要做那种自我感动的笔记，而是做帮助自己思考的笔记。",
        "tags": [],
        "line": 11,
        "startOffset": 183,
        "endOffset": 272,
        "filePath": "Sources/Articles/常青笔记阅读笔记/更好地记笔记这个描述太过流于表面；核心在于更好地思考.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 现实生活中，那些成功人士并不是都会做笔记，但这并不意味着做笔记不是一个能帮助我们成功的好习惯，关键在于：不要做那种自我感动的笔记，而是做帮助自己思考的笔记。"
        ],
        "createdAt": 1752259580513,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/文献笔记是次要的，分离的.md": [
      {
        "id": "c8b0s0kxd",
        "text": "我的理解:: 文献笔记，原文含量大，永久笔记（持久笔记），自己的话含量大。以文献为中心做批注，还是以自己的话为中心引用文献，二者有区别，后者是更有效的方法，当然也需要多花一些时间精力。#待办/今天 ",
        "tags": [],
        "line": 12,
        "startOffset": 181,
        "endOffset": 284,
        "filePath": "Sources/Articles/常青笔记阅读笔记/文献笔记是次要的，分离的.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 文献笔记，原文含量大，永久笔记（持久笔记），自己的话含量大。以文献为中心做批注，还是以自己的话为中心引用文献，二者有区别，后者是更有效的方法，当然也需要多花一些时间精力。#待办/今天 "
        ],
        "createdAt": 1752259580510,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/数字笔记系统专注于笔记个体的展示和操作，常忽略笔记之间内在连接所产生的意义.md": [
      {
        "id": "g1r5lyv9a",
        "text": "我的理解:: [[Spaces/0-Work/Cards/excalibrain]]这种插件，不仅让我们专注于笔记个体，也能让我们注意到笔记之间内在连接的意义。[[Heptabase]]等白板工具也可以一定程度上缓解这种下意识的忽略。",
        "tags": [],
        "line": 11,
        "startOffset": 194,
        "endOffset": 315,
        "filePath": "Sources/Articles/常青笔记阅读笔记/数字笔记系统专注于笔记个体的展示和操作，常忽略笔记之间内在连接所产生的意义.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: [[Spaces/0-Work/Cards/excalibrain]]这种插件，不仅让我们专注于笔记个体，也能让我们注意到笔记之间内在连接的意义。[[Heptabase]]等白板工具也可以一定程度上缓解这种下意识的忽略。"
        ],
        "createdAt": 1752259580523,
        "isNativeComment": true
      },
      {
        "id": "e2ugl2ott",
        "text": "[[Heptabase]]就是为了这个等价的数字版场景而生的，哈哈",
        "tags": [],
        "line": 19,
        "startOffset": 1158,
        "endOffset": 1195,
        "filePath": "Sources/Articles/常青笔记阅读笔记/数字笔记系统专注于笔记个体的展示和操作，常忽略笔记之间内在连接所产生的意义.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "[[Heptabase]]就是为了这个等价的数字版场景而生的，哈哈"
        ],
        "createdAt": 1752259580487,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/收集材料的作用在感觉上被夸大了.md": [
      {
        "id": "wu6nms6yh",
        "text": "我的理解:: 避免陷入[[收藏者谬误|收藏家谬误]]，也要避免让自己成为知道先生，走向[[但当涉猎，不求甚解]]的极端。",
        "tags": [],
        "line": 11,
        "startOffset": 172,
        "endOffset": 236,
        "filePath": "Sources/Articles/常青笔记阅读笔记/收集材料的作用在感觉上被夸大了.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 避免陷入[[收藏者谬误|收藏家谬误]]，也要避免让自己成为知道先生，走向[[但当涉猎，不求甚解]]的极端。"
        ],
        "createdAt": 1752259580500,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/收件箱需要可靠的清空流程才有效.md": [
      {
        "id": "2t59klgi8",
        "text": "我的理解:: 任务需要闭环收敛，才能往下走，因此inbox需要有机制去清空。",
        "tags": [],
        "line": 11,
        "startOffset": 161,
        "endOffset": 203,
        "filePath": "Sources/Articles/常青笔记阅读笔记/收件箱需要可靠的清空流程才有效.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 任务需要闭环收敛，才能往下走，因此inbox需要有机制去清空。"
        ],
        "createdAt": 1752687408088,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/收件箱维护的分流策略（如「收件箱归零」）往往不够稳健.md": [
      {
        "id": "1nuvhfs99",
        "text": "我的理解:: 就像软件项目经常会面临变数导致延期，使得短期内的问题单积压，导致开发团队处理不过来。空喊问题单清零的口号反而可能适得其反，与其天天喊着清零，不如增加这些单子的可容忍时长，以时间换空间。",
        "tags": [],
        "line": 11,
        "startOffset": 182,
        "endOffset": 285,
        "filePath": "Sources/Articles/常青笔记阅读笔记/收件箱维护的分流策略（如「收件箱归零」）往往不够稳健.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 就像软件项目经常会面临变数导致延期，使得短期内的问题单积压，导致开发团队处理不过来。空喊问题单清零的口号反而可能适得其反，与其天天喊着清零，不如增加这些单子的可容忍时长，以时间换空间。"
        ],
        "createdAt": 1752259580509,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/我的晨间写作.md": [
      {
        "id": "5mm97kqes",
        "text": "我的理解:: [[» Daily notes工作流]]的实践指南。",
        "tags": [],
        "line": 11,
        "startOffset": 163,
        "endOffset": 200,
        "filePath": "Sources/Articles/常青笔记阅读笔记/我的晨间写作.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: [[» Daily notes工作流]]的实践指南。"
        ],
        "createdAt": 1752259580489,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/我所认识的高效阅读者和思想家在阅读时不做笔记.md": [
      {
        "id": "qss5rt3bl",
        "text": "我的理解:: 做笔记能帮助我们进行思考。成功人士不做笔记就能成功，可能他足够聪明，记忆力足够强大，或者有其他才能帮助自己聚焦工作，而不意味着他不思考。我们之所以建议大多数人做常青笔记，是因为笔记可以成为我们普通人思考的一个绝佳手段。我在[[从anki、onenote到obsidian，一名小镇做题家的笔记进化史]]也简单提到自己高中从来不做笔记，却也能考上好大学，但这不意味着笔记没用，如果以现在的我去重读高中，我会有办法通过做笔记，用更少的时间取得当年一样的成绩。",
        "tags": [],
        "line": 11,
        "startOffset": 179,
        "endOffset": 417,
        "filePath": "Sources/Articles/常青笔记阅读笔记/我所认识的高效阅读者和思想家在阅读时不做笔记.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 做笔记能帮助我们进行思考。成功人士不做笔记就能成功，可能他足够聪明，记忆力足够强大，或者有其他才能帮助自己聚焦工作，而不意味着他不思考。我们之所以建议大多数人做常青笔记，是因为笔记可以成为我们普通人思考的一个绝佳手段。我在[[从anki、onenote到obsidian，一名小镇做题家的笔记进化史]]也简单提到自己高中从来不做笔记，却也能考上好大学，但这不意味着笔记没用，如果以现在的我去重读高中，我会有办法通过做笔记，用更少的时间取得当年一样的成绩。"
        ],
        "createdAt": 1752259580503,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/常青笔记的维护近似于间隔重复.md": [
      {
        "id": "j1p3beis5",
        "text": "我的理解:: 哈哈，和作者想到一块儿去了。刚开始实践[[双链笔记]]写作的时候，就感觉到，双链有时候很像anki卡片，不用点开链接，就能理解，意味着这张卡片已经记住了，而点开链接，就相当于进行一次重复记忆。",
        "tags": [],
        "line": 11,
        "startOffset": 171,
        "endOffset": 278,
        "filePath": "Sources/Articles/常青笔记阅读笔记/常青笔记的维护近似于间隔重复.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 哈哈，和作者想到一块儿去了。刚开始实践[[双链笔记]]写作的时候，就感觉到，双链有时候很像anki卡片，不用点开链接，就能理解，意味着这张卡片已经记住了，而点开链接，就相当于进行一次重复记忆。"
        ],
        "createdAt": 1752259580495,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/常青笔记的标题就像 API.md": [
      {
        "id": "ctyej3uxm",
        "text": "我的理解:: 简直是卡片笔记的命名最佳实践。要养成这个习惯。#待办/持续迭代。反观自己，现在的一些笔记就是模棱两可的或大而全的笔记，要么会被疯狂调用，要么无人问津。而拆解重构笔记的过程，就像抽取高频的公共接口。",
        "tags": [],
        "line": 12,
        "startOffset": 183,
        "endOffset": 292,
        "filePath": "Sources/Articles/常青笔记阅读笔记/常青笔记的标题就像 API.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 简直是卡片笔记的命名最佳实践。要养成这个习惯。#待办/持续迭代。反观自己，现在的一些笔记就是模棱两可的或大而全的笔记，要么会被疯狂调用，要么无人问津。而拆解重构笔记的过程，就像抽取高频的公共接口。"
        ],
        "createdAt": 1752259580506,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/常青笔记有助于积累阅读成果.md": [
      {
        "id": "10ddxqbav",
        "text": "我的理解:: 传统的阅读+笔记的模式，不同书本和文章之间的联系，全靠自己大脑的短时记忆能力或运气，去找到关系和连接，这一点都不cool也不高效。现在基于link的模式，符合大脑思考直觉，相当于将阅读成果积累到了大脑的网状结构的一个个知识节点上了。真应了那句话：[[写作之难，在于将网状的思想，通过树状的句法，用线性的文字展开。——史蒂芬·平克]]。阅读之难，则是反之：看线性的文字，进行树状的输入，最后进行网状思想和知识的积累。",
        "tags": [],
        "line": 11,
        "startOffset": 170,
        "endOffset": 388,
        "filePath": "Sources/Articles/常青笔记阅读笔记/常青笔记有助于积累阅读成果.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 传统的阅读+笔记的模式，不同书本和文章之间的联系，全靠自己大脑的短时记忆能力或运气，去找到关系和连接，这一点都不cool也不高效。现在基于link的模式，符合大脑思考直觉，相当于将阅读成果积累到了大脑的网状结构的一个个知识节点上了。真应了那句话：[[写作之难，在于将网状的思想，通过树状的句法，用线性的文字展开。——史蒂芬·平克]]。阅读之难，则是反之：看线性的文字，进行树状的输入，最后进行网状思想和知识的积累。"
        ],
        "createdAt": 1752259580493,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/常青笔记有助于积累洞见.md": [
      {
        "id": "je8gsowv4",
        "text": "我的理解:: 传统笔记方式，缺少链接而容易让自己陷入记录者而非思考者的身份中。视觉化的笔记方式，能一定程度上帮助我们思考和产生洞见，但相对耗时。常青笔记取了2者的优点，即避免涂涂画画省时间，又产生链接帮助思考，以最终产生洞见。写到这，突然又对[[Heptabase]]和[[氢图]]的笔记+白板的形态产生兴趣，以后有机会一定深入体验一番。新增：ob也已经出了白板canvas，未来无限可能",
        "tags": [],
        "line": 11,
        "startOffset": 168,
        "endOffset": 366,
        "filePath": "Sources/Articles/常青笔记阅读笔记/常青笔记有助于积累洞见.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 传统笔记方式，缺少链接而容易让自己陷入记录者而非思考者的身份中。视觉化的笔记方式，能一定程度上帮助我们思考和产生洞见，但相对耗时。常青笔记取了2者的优点，即避免涂涂画画省时间，又产生链接帮助思考，以最终产生洞见。写到这，突然又对[[Heptabase]]和[[氢图]]的笔记+白板的形态产生兴趣，以后有机会一定深入体验一番。新增：ob也已经出了白板canvas，未来无限可能"
        ],
        "createdAt": 1752259580490,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/常青笔记是知识工作的基本单位.md": [
      {
        "id": "pxbybjind",
        "text": "我的理解:: 如果一个工作，不需要产生和沉淀一些笔记，那么它大概率不是知识工作，只是一个穿了智力密集型产业外衣的劳动密集型产业。编程上解决一个工程问题，经常需要输出大量的笔记、注释、文档。",
        "tags": [],
        "line": 12,
        "startOffset": 219,
        "endOffset": 317,
        "filePath": "Sources/Articles/常青笔记阅读笔记/常青笔记是知识工作的基本单位.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 如果一个工作，不需要产生和沉淀一些笔记，那么它大概率不是知识工作，只是一个穿了智力密集型产业外衣的劳动密集型产业。编程上解决一个工程问题，经常需要输出大量的笔记、注释、文档。"
        ],
        "createdAt": 1752259580540,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/常青笔记是发展大胆想法的安全场所.md": [
      {
        "id": "1kdhnesik",
        "text": "我的理解:: 常青笔记真的是[[不积跬步无以至千里]]这类名言的最好实践。一张小卡片，写一个简单又大胆的想法，不用面面俱到，时间会让它发展，和其他卡片一起组成更完备的思想。",
        "tags": [],
        "line": 11,
        "startOffset": 173,
        "endOffset": 263,
        "filePath": "Sources/Articles/常青笔记阅读笔记/常青笔记是发展大胆想法的安全场所.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 常青笔记真的是[[不积跬步无以至千里]]这类名言的最好实践。一张小卡片，写一个简单又大胆的想法，不用面面俱到，时间会让它发展，和其他卡片一起组成更完备的思想。"
        ],
        "createdAt": 1752259580493,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/常青笔记应面向概念.md": [
      {
        "id": "w30j6pa6g",
        "text": "我的理解:: 面向概念记笔记，也和[[链接优先]]的理念相同。我们往往更习惯于传统的[[folder first]]的方式去组织自己的学习材料和笔记。哪个更好？andy说前者更好，但我个人觉得拿不准，也得具体场景具体分析，也需要长期实践1-2年再来看看。",
        "tags": [],
        "line": 11,
        "startOffset": 166,
        "endOffset": 297,
        "filePath": "Sources/Articles/常青笔记阅读笔记/常青笔记应面向概念.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 面向概念记笔记，也和[[链接优先]]的理念相同。我们往往更习惯于传统的[[folder first]]的方式去组织自己的学习材料和笔记。哪个更好？andy说前者更好，但我个人觉得拿不准，也得具体场景具体分析，也需要长期实践1-2年再来看看。"
        ],
        "createdAt": 1752259580485,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/常青笔记应该是原子化的.md": [
      {
        "id": "mkrmpgy5s",
        "text": "我的理解:: 正如文中所言，写笔记没有唯一正解，只有各种权衡。原子化笔记，是一种指导方针，但实际应用起来的时候，应该因地制宜，根据笔记记录内容的不同性质，进行不同颗粒度大小的划分。",
        "tags": [],
        "line": 11,
        "startOffset": 168,
        "endOffset": 262,
        "filePath": "Sources/Articles/常青笔记阅读笔记/常青笔记应该是原子化的.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 正如文中所言，写笔记没有唯一正解，只有各种权衡。原子化笔记，是一种指导方针，但实际应用起来的时候，应该因地制宜，根据笔记记录内容的不同性质，进行不同颗粒度大小的划分。"
        ],
        "createdAt": 1752259580487,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/常青笔记工作流能降低改稿的情绪负担.md": [
      {
        "id": "u8b8j49wi",
        "text": " 我的理解:: 以前没有卡片笔记的时候，我也其实经常这么做，把临时的想法，或上个版本的内容，放到 word 编辑器的最后或其他地方集中存放，期待待会还可能用到，也一定程度降低删除和丢东西所带来的负面情绪。而卡片笔记的出现，让这种暂存，更方便地更自然地发生了。",
        "tags": [],
        "line": 11,
        "startOffset": 173,
        "endOffset": 306,
        "filePath": "Sources/Articles/常青笔记阅读笔记/常青笔记工作流能降低改稿的情绪负担.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " 我的理解:: 以前没有卡片笔记的时候，我也其实经常这么做，把临时的想法，或上个版本的内容，放到 word 编辑器的最后或其他地方集中存放，期待待会还可能用到，也一定程度降低删除和丢东西所带来的负面情绪。而卡片笔记的出现，让这种暂存，更方便地更自然地发生了。"
        ],
        "createdAt": 1752259580491,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/常青笔记实现顺畅而渐进的写作（「渐进写作」）.md": [
      {
        "id": "2mfkwwea6",
        "text": "我的理解:: 看过好几个视频，作者都提到卡片笔记的轻松无压，让笔记到写作这个过程变得非常渐进式。这也是[[Flomo]]的核心卖点。",
        "tags": [],
        "line": 11,
        "startOffset": 179,
        "endOffset": 249,
        "filePath": "Sources/Articles/常青笔记阅读笔记/常青笔记实现顺畅而渐进的写作（「渐进写作」）.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 看过好几个视频，作者都提到卡片笔记的轻松无压，让笔记到写作这个过程变得非常渐进式。这也是[[Flomo]]的核心卖点。"
        ],
        "createdAt": 1752259580496,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/常青笔记和卡片盒笔记法的异同点.md": [
      {
        "id": "8iis1nbtp",
        "text": "我的理解:: 常青笔记不仅是方法，也是理念，更是围绕这个理念的一整套如何做笔记的成体系的系统。最关键的是，这是andy基于现代计算机软件的特点并结合卡片盒笔记法，做出的极大改良，而我看很多人居然还直接全盘照搬卢曼的时间戳命名纸质卡片的方式来做电子笔记，我就很不能理解。",
        "tags": [],
        "line": 11,
        "startOffset": 172,
        "endOffset": 310,
        "filePath": "Sources/Articles/常青笔记阅读笔记/常青笔记和卡片盒笔记法的异同点.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 常青笔记不仅是方法，也是理念，更是围绕这个理念的一整套如何做笔记的成体系的系统。最关键的是，这是andy基于现代计算机软件的特点并结合卡片盒笔记法，做出的极大改良，而我看很多人居然还直接全盘照搬卢曼的时间戳命名纸质卡片的方式来做电子笔记，我就很不能理解。"
        ],
        "createdAt": 1752259580487,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/常青笔记可以提高谈话的信息带宽.md": [
      {
        "id": "7n3rchtx4",
        "text": "我的理解:: 可太对了，如果对方背景知识足够，一句话可能就能表达清楚，如果背景知识不够，则针对某些观点的跳转出的常青笔记，就可以做有效扩充。可以根据背景知识量速读或精读。而不是什么场合都是一句：你是小白，我推荐你看一下这本书。",
        "tags": [],
        "line": 11,
        "startOffset": 172,
        "endOffset": 289,
        "filePath": "Sources/Articles/常青笔记阅读笔记/常青笔记可以提高谈话的信息带宽.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 可太对了，如果对方背景知识足够，一句话可能就能表达清楚，如果背景知识不够，则针对某些观点的跳转出的常青笔记，就可以做有效扩充。可以根据背景知识量速读或精读。而不是什么场合都是一句：你是小白，我推荐你看一下这本书。"
        ],
        "createdAt": 1752259580487,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/常青笔记之间应该建立大量链接.md": [
      {
        "id": "5k8tjev0g",
        "text": "我的理解:: 强制自己使用link来组织笔记，让我这几个月有了不少的新颖感，感觉这个时候的自己做笔记，真的是在思考，以前就是做个备忘录。这种奇妙的感觉，很难用文字完整表达出来。还需要改进的一点是，andy擅长面向概念进行笔记，我现在的习惯还是面向单一的对象进行笔记居多，这种方式思考密度确实比较低，这点还需要向andy靠拢学习。",
        "tags": [],
        "line": 11,
        "startOffset": 171,
        "endOffset": 339,
        "filePath": "Sources/Articles/常青笔记阅读笔记/常青笔记之间应该建立大量链接.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 强制自己使用link来组织笔记，让我这几个月有了不少的新颖感，感觉这个时候的自己做笔记，真的是在思考，以前就是做个备忘录。这种奇妙的感觉，很难用文字完整表达出来。还需要改进的一点是，andy擅长面向概念进行笔记，我现在的习惯还是面向单一的对象进行笔记居多，这种方式思考密度确实比较低，这点还需要向andy靠拢学习。"
        ],
        "createdAt": 1752259580485,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/常青笔记.md": [
      {
        "id": "h29zdz6kj",
        "text": "我的理解:: 常青笔记就是andy基于[[卢曼]]的卡片盒笔记法，结合现代计算机软件的优势和自己的理解和实践，衍生出的综合记笔记理念：要么不记，要记就记常青的笔记。",
        "tags": [],
        "line": 10,
        "startOffset": 123,
        "endOffset": 209,
        "filePath": "Sources/Articles/常青笔记阅读笔记/常青笔记.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 常青笔记就是andy基于[[卢曼]]的卡片盒笔记法，结合现代计算机软件的优势和自己的理解和实践，衍生出的综合记笔记理念：要么不记，要记就记常青的笔记。"
        ],
        "createdAt": 1752817226382,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/对笔记写作大谈特谈的人很少有严肃的使用场景.md": [
      {
        "id": "ldgzps84d",
        "text": "我的理解:: 这篇笔记我太认同了。网上一些所谓的生产力专家，全职做教学的，可能以前是专家，但当他脱离实际生产环境，全职搞教学后，他的产出会越来越不合实际，凭空捏造。这信息爆炸的时代，最幸运的是能遇到那些有实际成就的人，所产出的高价值文章或演讲，这种内容往往不多，因为他没有这么多时间高频输出内容。当一个人开始高频输出，反而我该警惕起来，这小子是不是已经不干当年让他成功的本质工作，开始全职搞培训了。",
        "tags": [],
        "line": 11,
        "startOffset": 178,
        "endOffset": 381,
        "filePath": "Sources/Articles/常青笔记阅读笔记/对笔记写作大谈特谈的人很少有严肃的使用场景.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 这篇笔记我太认同了。网上一些所谓的生产力专家，全职做教学的，可能以前是专家，但当他脱离实际生产环境，全职搞教学后，他的产出会越来越不合实际，凭空捏造。这信息爆炸的时代，最幸运的是能遇到那些有实际成就的人，所产出的高价值文章或演讲，这种内容往往不多，因为他没有这么多时间高频输出内容。当一个人开始高频输出，反而我该警惕起来，这小子是不是已经不干当年让他成功的本质工作，开始全职搞培训了。"
        ],
        "createdAt": 1752259580490,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/如何将阅读标注处理成常青笔记.md": [
      {
        "id": "w71bekkpg",
        "text": "我的理解:: #todo/now 结合[[渐进式总结]]，可成系统。",
        "tags": [],
        "line": 12,
        "startOffset": 183,
        "endOffset": 221,
        "filePath": "Sources/Articles/常青笔记阅读笔记/如何将阅读标注处理成常青笔记.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: #todo/now 结合[[渐进式总结]]，可成系统。"
        ],
        "createdAt": 1752259580495,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/如何在阅读时整理所得.md": [
      {
        "id": "qa3kwc2kn",
        "text": "我的理解:: 哈哈，andy这块儿也还没有形成自己完美的工作流。[[» 文章笔记工作流]]",
        "tags": [],
        "line": 11,
        "startOffset": 167,
        "endOffset": 216,
        "filePath": "Sources/Articles/常青笔记阅读笔记/如何在阅读时整理所得.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 哈哈，andy这块儿也还没有形成自己完美的工作流。[[» 文章笔记工作流]]"
        ],
        "createdAt": 1752259580478,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/大多数人把笔记当作贮藏容器或思想草稿.md": [
      {
        "id": "sy1l3monp",
        "text": "我的理解:: 我以前的笔记就是如此，为了[[闭合开环]]，为了完成任务，为了当前。而不是[[增援未来]]。这不对。",
        "tags": [],
        "line": 11,
        "startOffset": 175,
        "endOffset": 236,
        "filePath": "Sources/Articles/常青笔记阅读笔记/大多数人把笔记当作贮藏容器或思想草稿.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 我以前的笔记就是如此，为了[[闭合开环]]，为了完成任务，为了当前。而不是[[增援未来]]。这不对。"
        ],
        "createdAt": 1752259580484,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/大多数人只写临时的笔记.md": [
      {
        "id": "r77bo6urn",
        "text": "我的理解:: 知识创作，要写常青笔记，不写临时笔记。平时场景，可能要写一些工作日志，充当工作台或暂时帮助记忆用的而已。",
        "tags": [],
        "line": 11,
        "startOffset": 168,
        "endOffset": 231,
        "filePath": "Sources/Articles/常青笔记阅读笔记/大多数人只写临时的笔记.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 知识创作，要写常青笔记，不写临时笔记。平时场景，可能要写一些工作日志，充当工作台或暂时帮助记忆用的而已。"
        ],
        "createdAt": 1752259580476,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/多数人的阅读成效不大.md": [
      {
        "id": "5amlh7ik2",
        "text": "我的理解:: 每每回想自己读书时期草草看过几百本书，却鲜有收获，就为自己那段耗费的时光痛心疾首，有那浪费的时间，多谈2个恋爱不香么。",
        "tags": [],
        "line": 11,
        "startOffset": 167,
        "endOffset": 237,
        "filePath": "Sources/Articles/常青笔记阅读笔记/多数人的阅读成效不大.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 每每回想自己读书时期草草看过几百本书，却鲜有收获，就为自己那段耗费的时光痛心疾首，有那浪费的时间，多谈2个恋爱不香么。"
        ],
        "createdAt": 1752259580474,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/在写作时创建推测性大纲.md": [
      {
        "id": "b4501121d",
        "text": "我的理解:: 大纲在此处类似于MOC。让[[∑ MOCs]]和[[TOC]]跟随自己笔记的成长而成长，不必在乎完备性，常青笔记本身就是不断发展的。而这些渐进式成长的MOC，就是将来某一时刻，成为某个主题写作时候的最好大纲参考。",
        "tags": [],
        "line": 11,
        "startOffset": 168,
        "endOffset": 285,
        "filePath": "Sources/Articles/常青笔记阅读笔记/在写作时创建推测性大纲.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 大纲在此处类似于MOC。让[[∑ MOCs]]和[[TOC]]跟随自己笔记的成长而成长，不必在乎完备性，常青笔记本身就是不断发展的。而这些渐进式成长的MOC，就是将来某一时刻，成为某个主题写作时候的最好大纲参考。"
        ],
        "createdAt": 1752259580474,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/可执行的写作策略.md": [
      {
        "id": "ks9fr14ox",
        "text": "我的理解:: [[自下而上]]进行创作。再也不想回到当初没有一类，几乎从0开始写硕士毕业论文的时候了。以后要写长文，至少要保证一大半内容都能从自己的知识库里，找到类似的卡片笔记。无痛且快乐的写作，就是将平时的积累，串起来，就像和好朋友聊天一样轻松且自然。",
        "tags": [],
        "line": 11,
        "startOffset": 165,
        "endOffset": 296,
        "filePath": "Sources/Articles/常青笔记阅读笔记/可执行的写作策略.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: [[自下而上]]进行创作。再也不想回到当初没有一类，几乎从0开始写硕士毕业论文的时候了。以后要写长文，至少要保证一大半内容都能从自己的知识库里，找到类似的卡片笔记。无痛且快乐的写作，就是将平时的积累，串起来，就像和好朋友聊天一样轻松且自然。"
        ],
        "createdAt": 1752259580470,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/反向链接可以用来隐式定义知识管理系统中的节点.md": [
      {
        "id": "qdrssfjrc",
        "text": "我的理解:: 卧槽，这不就是我在[[obsidian 是可以用一辈子不换的笔记软件吗]]提到的，用双链不断挖坑，并随着时间推移，有用的坑会自然而然被填上的神奇效果嘛。以及另一个效果就是把双向链接当标签使用：点开这个链接的时候，没有内容，但是可以从反向链接面板中看到引用了这个链接的所有页面。",
        "tags": [],
        "line": 11,
        "startOffset": 179,
        "endOffset": 328,
        "filePath": "Sources/Articles/常青笔记阅读笔记/反向链接可以用来隐式定义知识管理系统中的节点.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 卧槽，这不就是我在[[obsidian 是可以用一辈子不换的笔记软件吗]]提到的，用双链不断挖坑，并随着时间推移，有用的坑会自然而然被填上的神奇效果嘛。以及另一个效果就是把双向链接当标签使用：点开这个链接的时候，没有内容，但是可以从反向链接面板中看到引用了这个链接的所有页面。"
        ],
        "createdAt": 1752259580483,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/卓越洞见从之前的所思所想中涌现.md": [
      {
        "id": "q9fy3fl2w",
        "text": "我的想法:: 就像牛顿的万有引力定律，绝不是靠1个苹果掉头上而得来的，之前的所思所想和知识积累必不可少。引申联想：[[个人努力与社会进程]]。",
        "tags": [],
        "line": 11,
        "startOffset": 172,
        "endOffset": 247,
        "filePath": "Sources/Articles/常青笔记阅读笔记/卓越洞见从之前的所思所想中涌现.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的想法:: 就像牛顿的万有引力定律，绝不是靠1个苹果掉头上而得来的，之前的所思所想和知识积累必不可少。引申联想：[[个人努力与社会进程]]。"
        ],
        "createdAt": 1752259580474,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/助记媒介可以扩展到个人笔记上.md": [
      {
        "id": "pgucbdkn4",
        "text": "我的理解:: 就像[[Spaced Repetition]]插件和obsidian有机融合在一起。",
        "tags": [],
        "line": 11,
        "startOffset": 171,
        "endOffset": 224,
        "filePath": "Sources/Articles/常青笔记阅读笔记/助记媒介可以扩展到个人笔记上.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 就像[[Spaced Repetition]]插件和obsidian有机融合在一起。"
        ],
        "createdAt": 1752259580472,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/创建超链接到我的参考档案.md": [
      {
        "id": "ftleai3ha",
        "text": "我的理解:: 外部链接的不稳定性，导致资源失效。我也一直在寻求更好的方式，目前看，文件放到devonthink里面，是一个好选择，但无法实现很方便的分享给别人某篇笔记+若干个文件这种场景。[[Hook]]将是解决之道，可惜太贵了。",
        "tags": [],
        "line": 11,
        "startOffset": 169,
        "endOffset": 288,
        "filePath": "Sources/Articles/常青笔记阅读笔记/创建超链接到我的参考档案.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 外部链接的不稳定性，导致资源失效。我也一直在寻求更好的方式，目前看，文件放到devonthink里面，是一个好选择，但无法实现很方便的分享给别人某篇笔记+若干个文件这种场景。[[Hook]]将是解决之道，可惜太贵了。"
        ],
        "createdAt": 1752259580469,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/创制环境极大程度受作者的动机塑造.md": [
      {
        "id": "1i6acm7xo",
        "text": "我的理解:: 唯有热爱，创造奇迹。",
        "tags": [],
        "line": 11,
        "startOffset": 173,
        "endOffset": 194,
        "filePath": "Sources/Articles/常青笔记阅读笔记/创制环境极大程度受作者的动机塑造.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 唯有热爱，创造奇迹。"
        ],
        "createdAt": 1752259580473,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/写你所读，以求内化.md": [
      {
        "id": "58voysh1x",
        "text": "我的理解:: 正如[[卢曼]]所言：[[不写作，就无法思考]] ",
        "tags": [],
        "line": 11,
        "startOffset": 166,
        "endOffset": 202,
        "filePath": "Sources/Articles/常青笔记阅读笔记/写你所读，以求内化.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 正如[[卢曼]]所言：[[不写作，就无法思考]] "
        ],
        "createdAt": 1752259580465,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/优先选择明确的关联，而不是推断的关联.md": [
      {
        "id": "8k9h7mw4d",
        "text": " 这句话我没懂，或者说不认同。",
        "tags": [],
        "line": 23,
        "startOffset": 830,
        "endOffset": 849,
        "filePath": "Sources/Articles/常青笔记阅读笔记/优先选择明确的关联，而不是推断的关联.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " 这句话我没懂，或者说不认同。"
        ],
        "createdAt": 1752259581125,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/优先建立信息间的联系来分类，而非使用层级式分类法.md": [
      {
        "id": "sb14ws39s",
        "text": "我的理解:: 采用[[自下而上]]的创作方式，能让结构自然、有机地从创作中涌现。如果说适用人群的话，我觉得应该是已经具备一定知识储备的人这么做会比较好。如果肚子里没货，用这种方式会觉得很难受。而[[自上而下]]是我们从小到大，尚处于积累知识阶段，老师教给我们的方法，所以操作起来更符合我们的[[路径依赖]]和直觉，但这并不意味着这种方法依旧有优势。总的来说，根据自身水平和应用场景，二者结合，是为其道。",
        "tags": [],
        "line": 11,
        "startOffset": 181,
        "endOffset": 386,
        "filePath": "Sources/Articles/常青笔记阅读笔记/优先建立信息间的联系来分类，而非使用层级式分类法.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 采用[[自下而上]]的创作方式，能让结构自然、有机地从创作中涌现。如果说适用人群的话，我觉得应该是已经具备一定知识储备的人这么做会比较好。如果肚子里没货，用这种方式会觉得很难受。而[[自上而下]]是我们从小到大，尚处于积累知识阶段，老师教给我们的方法，所以操作起来更符合我们的[[路径依赖]]和直觉，但这并不意味着这种方法依旧有优势。总的来说，根据自身水平和应用场景，二者结合，是为其道。"
        ],
        "createdAt": 1752259580476,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/优先使用经过标注的关联.md": [
      {
        "id": "0gkqf7gkm",
        "text": "我的理解:: 让人想到[[🧑ryooo]]提出的[[KG笔记法]]，能让笔记更具语义化，回顾浏览这种笔记组成的知识图谱，才能更有效。",
        "tags": [],
        "line": 11,
        "startOffset": 168,
        "endOffset": 239,
        "filePath": "Sources/Articles/常青笔记阅读笔记/优先使用经过标注的关联.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 让人想到[[🧑ryooo]]提出的[[KG笔记法]]，能让笔记更具语义化，回顾浏览这种笔记组成的知识图谱，才能更有效。"
        ],
        "createdAt": 1752259580462,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/优先使用细粒度的关联.md": [
      {
        "id": "v8sfybizs",
        "text": "我的理解:: 这也是相比于[[Obsidian]]，我一直对[[Spaces/3-Resource/软件梳理/macos软件/Logseq]]的大纲式块引用笔记念念不忘的原因，更细粒度的引用，应该能发挥出更强大的力量。现在还没经过大量实践，还不清楚太多的细粒度的块引用会带来什么麻烦和缺点。#待办/某天 ",
        "tags": [],
        "line": 12,
        "startOffset": 178,
        "endOffset": 334,
        "filePath": "Sources/Articles/常青笔记阅读笔记/优先使用细粒度的关联.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 这也是相比于[[Obsidian]]，我一直对[[Spaces/3-Resource/软件梳理/macos软件/Logseq]]的大纲式块引用笔记念念不忘的原因，更细粒度的引用，应该能发挥出更强大的力量。现在还没经过大量实践，还不清楚太多的细粒度的块引用会带来什么麻烦和缺点。#待办/某天 "
        ],
        "createdAt": 1752261483592,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/为有潜在价值的参考引用建立一个阅读收件箱.md": [
      {
        "id": "5n8zhjmdk",
        "text": "我的理解:: 那些不需要做笔记的阅读内容，不应该成为真正的稍后读。我们需要的是一个有质量的稍后读inbox，其中的每天文章都要写点笔记。这样的阅读有闭环，才是有效的阅读。",
        "tags": [],
        "line": 11,
        "startOffset": 177,
        "endOffset": 266,
        "filePath": "Sources/Articles/常青笔记阅读笔记/为有潜在价值的参考引用建立一个阅读收件箱.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 那些不需要做笔记的阅读内容，不应该成为真正的稍后读。我们需要的是一个有质量的稍后读inbox，其中的每天文章都要写点笔记。这样的阅读有闭环，才是有效的阅读。"
        ],
        "createdAt": 1752259580469,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/为临时性的和不完整的笔记设置写作收件箱.md": [
      {
        "id": "oiki598q6",
        "text": "我的理解:: 用inbox进行[[一元化收集]]的理念，在知识管理和任务管理等领域都适用。现在这块儿我自己将临时的东西放到[[daily note]]中，也能流畅运行起来，但可能是因为inbox里面东西太少的缘故，仍需努力。",
        "tags": [],
        "line": 11,
        "startOffset": 176,
        "endOffset": 292,
        "filePath": "Sources/Articles/常青笔记阅读笔记/为临时性的和不完整的笔记设置写作收件箱.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 用inbox进行[[一元化收集]]的理念，在知识管理和任务管理等领域都适用。现在这块儿我自己将临时的东西放到[[daily note]]中，也能流畅运行起来，但可能是因为inbox里面东西太少的缘故，仍需努力。"
        ],
        "createdAt": 1752259580468,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/不应该设置多处收件箱.md": [
      {
        "id": "ym8wyoixm",
        "text": "我的理解:: 所以需要[[一元化收集]]",
        "tags": [],
        "line": 11,
        "startOffset": 156,
        "endOffset": 180,
        "filePath": "Sources/Articles/常青笔记阅读笔记/不应该设置多处收件箱.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 所以需要[[一元化收集]]"
        ],
        "createdAt": 1752687429615,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/常青笔记阅读笔记/上下文反向链接.md": [
      {
        "id": "8t90tbp7s",
        "text": "我的理解:: 正如[[反向链接#使用技巧]]所言，反向链接提供的上下文，有时候也是一种更细粒度的信息补充。",
        "tags": [],
        "line": 13,
        "startOffset": 188,
        "endOffset": 245,
        "filePath": "Sources/Articles/常青笔记阅读笔记/上下文反向链接.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "我的理解:: 正如[[反向链接#使用技巧]]所言，反向链接提供的上下文，有时候也是一种更细粒度的信息补充。"
        ],
        "createdAt": 1752259580478,
        "isNativeComment": true
      }
    ],
    "Sources/Articles/flomo101阅读笔记/输出究竟是什么.md": [
      {
        "id": "yu6nxdxj1",
        "text": "&mid=2650591453&idx=1&sn=936bae5caf69984e9aea45139fd3bc01&scene=21#wechat_redirect)》，其中有一段话很打动我：\r\n\r\n> 如果你想写一本80000字的小说，而你只写了80000字，这也许是可以接受的。但是如果你写了30万或者40万字，然后把它减少到8万字，几乎可以肯定这会是一本更好的小说。\r\n\r\n我们在 flomo 中记录的东西，势必有许多的内容是「用不到」，或者「孤零零」的。这并非有什么问题，就像我们的人生一样，总要做一些「无用」的事情，才能找到自己的意义，毕竟「**功不唐捐**」。\r\n\r\n从另一个角度来说，也许并不是我们不知道怎么输出，而是我们积累的并不够，看到的问题不够全面，无法形成自己的观点。倘若当一个领域积累了超过 1000 张 MEMO 的时候，许多问题就百忧冰解了——毕竟在[之前的周刊中 (opens new window)](https://mp.weixin.qq.com/s?__biz=MzI0MDA3MjQ2Mg",
        "tags": [],
        "line": 78,
        "startOffset": 2958,
        "endOffset": 3426,
        "filePath": "Sources/Articles/flomo101阅读笔记/输出究竟是什么.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259581244,
        "isNativeComment": false
      },
      {
        "id": "4dvh4x8gc",
        "text": "&mid=2650590221&idx=1&sn=163680dcfc769ed85980bb2770de9a82&chksm=87d6c7fab0a14eec8676fe983d5454a07e6b6a198d3f3a08f700f2cbdaf24a1383ce0ed161a7&token=1333198550&lang=zh_CN&scene=21#wechat_redirect)\r\n\r\n[Ponge：Testoday Newsletter No.008 (opens new window)](https://mp.weixin.qq.com/s?__biz=MzI0NzA4NjQzOQ",
        "tags": [],
        "line": 94,
        "startOffset": 4217,
        "endOffset": 4520,
        "filePath": "Sources/Articles/flomo101阅读笔记/输出究竟是什么.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259580503,
        "isNativeComment": false
      },
      {
        "id": "kthfu8osb",
        "text": "&mid=2247483860&idx=1&sn=3c78a327a6596ae64276d1d12770a7ba&scene=21#wechat_redirect)\r\n\r\n[一门：七月初的一周心情 (opens new window)](https://mp.weixin.qq.com/s?__biz=MzU5NzAwNjgzOA",
        "tags": [],
        "line": 98,
        "startOffset": 4690,
        "endOffset": 4861,
        "filePath": "Sources/Articles/flomo101阅读笔记/输出究竟是什么.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259580976,
        "isNativeComment": false
      }
    ],
    "Sources/Articles/flomo101阅读笔记/笔记的误区.md": [
      {
        "id": "gt96ps1iv",
        "text": "写作可以很好地提高一个人的思维能力，因为它迫使你从更深的层次去阅读。仅仅阅读的多并不意味着你有更多或更好的想法。**就像学游泳一样，你必须通过实践来学习，而不仅仅是通过在纸面上的学习**。因此，写作和学习的挑战不在于学习，而在于理解，因为你已经学会了你所理解的东西。当你真正理解某件事情的时候，它被放在在一个由相关的想法和意义组成的架构中，这使得它更容易被记住。",
        "tags": [],
        "line": 45,
        "startOffset": 1841,
        "endOffset": 2026,
        "filePath": "Sources/Articles/flomo101阅读笔记/笔记的误区.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259581126,
        "isNativeComment": false
      }
    ],
    "Sources/Articles/flomo101阅读笔记/为何收藏无用.md": [
      {
        "id": "voftexiki",
        "text": "记让我有极大触动的内容",
        "tags": [],
        "line": 20,
        "startOffset": 470,
        "endOffset": 485,
        "filePath": "Sources/Articles/flomo101阅读笔记/为何收藏无用.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259580748,
        "isNativeComment": false
      },
      {
        "id": "2636v49wa",
        "text": "但他的实验发现了与常识相反的结论：“存储与提取负相关”，也就是说，存入记忆越容易，提取出来越困难；反之，如果你有些吃力地存入，知识提取会更方便。",
        "tags": [],
        "line": 65,
        "startOffset": 2296,
        "endOffset": 2372,
        "filePath": "Sources/Articles/flomo101阅读笔记/为何收藏无用.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259580574,
        "isNativeComment": false
      },
      {
        "id": "3ntjvkogw",
        "text": "**引发情绪波动的信息更容易被记忆**，所以记录答案不如记录问题，因为问题就是冲突，冲突能让问题自动的前进。",
        "tags": [],
        "line": 75,
        "startOffset": 2706,
        "endOffset": 2764,
        "filePath": "Sources/Articles/flomo101阅读笔记/为何收藏无用.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259580984,
        "isNativeComment": false
      }
    ],
    "Sources/Articles/flomo101阅读笔记/∑ flomo101阅读笔记.md": [
      {
        "id": "klq8pnb8o",
        "text": "高亮",
        "tags": [],
        "line": 13,
        "startOffset": 316,
        "endOffset": 322,
        "filePath": "Sources/Articles/flomo101阅读笔记/∑ flomo101阅读笔记.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259580593,
        "isNativeComment": false
      }
    ],
    "Sources/AIGC/kubectl 命令执行流程图.md": [
      {
        "id": "jhg2bpsqc",
        "text": " 用户交互\r\n    U --> kubectl\r\n    kubectl --> API\r\n    \r\n    ",
        "tags": [],
        "line": 57,
        "startOffset": 1302,
        "endOffset": 1363,
        "filePath": "Sources/AIGC/kubectl 命令执行流程图.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " 用户交互\r\n    U --> kubectl\r\n    kubectl --> API\r\n    \r\n    "
        ],
        "createdAt": 1752259580571,
        "isNativeComment": true
      },
      {
        "id": "4utne1vyi",
        "text": " 数据面组件交互\r\n    API --> kubelet\r\n    API --> proxy\r\n    kubelet <--> CRI\r\n    kubelet --> API\r\n    \r\n    ",
        "tags": [],
        "line": 68,
        "startOffset": 1480,
        "endOffset": 1587,
        "filePath": "Sources/AIGC/kubectl 命令执行流程图.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " 数据面组件交互\r\n    API --> kubelet\r\n    API --> proxy\r\n    kubelet <--> CRI\r\n    kubelet --> API\r\n    \r\n    "
        ],
        "createdAt": 1752259580749,
        "isNativeComment": true
      }
    ],
    "Sources/AIGC/istio 架构与命令执行流程图.md": [
      {
        "id": "9ey189nby",
        "text": " 用户交互\r\n    U --> istioctl\r\n    U --> kubectl\r\n    istioctl <--> istiod\r\n    kubectl <--> istiod\r\n    \r\n    ",
        "tags": [],
        "line": 84,
        "startOffset": 2481,
        "endOffset": 2592,
        "filePath": "Sources/AIGC/istio 架构与命令执行流程图.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " 用户交互\r\n    U --> istioctl\r\n    U --> kubectl\r\n    istioctl <--> istiod\r\n    kubectl <--> istiod\r\n    \r\n    "
        ],
        "createdAt": 1752996470217,
        "isNativeComment": true
      },
      {
        "id": "g5x911aqw",
        "text": " 控制平面到数据平面\r\n    pilot --> envoy1\r\n    pilot --> envoy2\r\n    pilot --> gatewayenvoy\r\n    citadel --> envoy1\r\n    citadel --> envoy2\r\n    citadel --> gatewayenvoy\r\n    \r\n    ",
        "tags": [],
        "line": 95,
        "startOffset": 2682,
        "endOffset": 2858,
        "filePath": "Sources/AIGC/istio 架构与命令执行流程图.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " 控制平面到数据平面\r\n    pilot --> envoy1\r\n    pilot --> envoy2\r\n    pilot --> gatewayenvoy\r\n    citadel --> envoy1\r\n    citadel --> envoy2\r\n    citadel --> gatewayenvoy\r\n    \r\n    "
        ],
        "createdAt": 1752996470418,
        "isNativeComment": true
      },
      {
        "id": "ufz5eg9j4",
        "text": " 代理间通信\r\n    envoy1 <--> envoy2\r\n    gatewayenvoy <--> envoy1\r\n    gatewayenvoy <--> envoy2\r\n    \r\n    ",
        "tags": [],
        "line": 108,
        "startOffset": 2954,
        "endOffset": 3060,
        "filePath": "Sources/AIGC/istio 架构与命令执行流程图.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " 代理间通信\r\n    envoy1 <--> envoy2\r\n    gatewayenvoy <--> envoy1\r\n    gatewayenvoy <--> envoy2\r\n    \r\n    "
        ],
        "createdAt": 1752996470690,
        "isNativeComment": true
      },
      {
        "id": "8lwopwv1r",
        "text": " 命令流程\r\n    INSTALL --> istiod\r\n    STATUS --> istiod\r\n    CONFIG --> istiod\r\n    ANALYZE --> istiod\r\n    INJECT --> istiod\r\n    DASHBOARD --> istiod\r\n    \r\n    ",
        "tags": [],
        "line": 121,
        "startOffset": 3197,
        "endOffset": 3361,
        "filePath": "Sources/AIGC/istio 架构与命令执行流程图.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " 命令流程\r\n    INSTALL --> istiod\r\n    STATUS --> istiod\r\n    CONFIG --> istiod\r\n    ANALYZE --> istiod\r\n    INJECT --> istiod\r\n    DASHBOARD --> istiod\r\n    \r\n    "
        ],
        "createdAt": 1752996469933,
        "isNativeComment": true
      }
    ],
    "Sources/AIGC/docker 命令执行流程图.md": [
      {
        "id": "x9bjkck8i",
        "text": " 用户交互\r\n    U --> docker\r\n    docker <--> dockerd\r\n    \r\n    ",
        "tags": [],
        "line": 65,
        "startOffset": 1554,
        "endOffset": 1618,
        "filePath": "Sources/AIGC/docker 命令执行流程图.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " 用户交互\r\n    U --> docker\r\n    docker <--> dockerd\r\n    \r\n    "
        ],
        "createdAt": 1752259580822,
        "isNativeComment": true
      },
      {
        "id": "qyejjwror",
        "text": " 运行时层交互\r\n    containerd --> runc\r\n    containerd --> shim\r\n    runc --> shim\r\n    \r\n    ",
        "tags": [],
        "line": 73,
        "startOffset": 1693,
        "endOffset": 1785,
        "filePath": "Sources/AIGC/docker 命令执行流程图.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " 运行时层交互\r\n    containerd --> runc\r\n    containerd --> shim\r\n    runc --> shim\r\n    \r\n    "
        ],
        "createdAt": 1752259580961,
        "isNativeComment": true
      },
      {
        "id": "0vltgrv7q",
        "text": " 命令流程\r\n    PS --> dockerd\r\n    RUN --> dockerd\r\n    RM --> dockerd\r\n    LOGS --> dockerd\r\n    IMAGES --> dockerd\r\n    PULL --> dockerd\r\n    \r\n    ",
        "tags": [],
        "line": 82,
        "startOffset": 1861,
        "endOffset": 2011,
        "filePath": "Sources/AIGC/docker 命令执行流程图.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " 命令流程\r\n    PS --> dockerd\r\n    RUN --> dockerd\r\n    RM --> dockerd\r\n    LOGS --> dockerd\r\n    IMAGES --> dockerd\r\n    PULL --> dockerd\r\n    \r\n    "
        ],
        "createdAt": 1752259581129,
        "isNativeComment": true
      }
    ],
    "Sources/AIGC/LLM训练全流程详解 - 从基础到DeepSeek创新.md": [
      {
        "id": "e60ohcjcb",
        "text": " 样式定义\r\n    classDef dataNode fill:#e1f5fe,stroke:#01579b,stroke-width:2px\r\n    classDef processNode fill:#f3e5f5,stroke:#4a148c,stroke-width:2px\r\n    classDef modelNode fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px\r\n    classDef finalNode fill:#fff3e0,stroke:#e65100,stroke-width:3px\r\n    \r\n    ",
        "tags": [],
        "line": 46,
        "startOffset": 978,
        "endOffset": 1276,
        "filePath": "Sources/AIGC/LLM训练全流程详解 - 从基础到DeepSeek创新.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " 样式定义\r\n    classDef dataNode fill:#e1f5fe,stroke:#01579b,stroke-width:2px\r\n    classDef processNode fill:#f3e5f5,stroke:#4a148c,stroke-width:2px\r\n    classDef modelNode fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px\r\n    classDef finalNode fill:#fff3e0,stroke:#e65100,stroke-width:3px\r\n    \r\n    "
        ],
        "createdAt": 1752259581240,
        "isNativeComment": true
      },
      {
        "id": "c2w7xwez5",
        "text": " DeepSeek-R1-Zero 路径\r\n    C --> D1[\"DeepSeek-R1-Zero<br/>🚀 纯强化学习路径\"]\r\n    D1 --> E1[\"GRPO算法<br/>🎲 组相对策略优化<br/>无需评判模型\"]\r\n    E1 --> F1[\"规则奖励系统<br/>⚖️ 精度奖励 + 格式奖励<br/>R = R_acc + R_format\"]\r\n    F1 --> G1[\"涌现推理行为<br/>🧩 自我验证、反思<br/>'顿悟时刻'\"]\r\n    G1 --> H1[\"R1-Zero模型<br/>⭐ 71% AIME准确率<br/>但存在可读性问题\"]\r\n    \r\n    ",
        "tags": [],
        "line": 87,
        "startOffset": 2092,
        "endOffset": 2407,
        "filePath": "Sources/AIGC/LLM训练全流程详解 - 从基础到DeepSeek创新.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " DeepSeek-R1-Zero 路径\r\n    C --> D1[\"DeepSeek-R1-Zero<br/>🚀 纯强化学习路径\"]\r\n    D1 --> E1[\"GRPO算法<br/>🎲 组相对策略优化<br/>无需评判模型\"]\r\n    E1 --> F1[\"规则奖励系统<br/>⚖️ 精度奖励 + 格式奖励<br/>R = R_acc + R_format\"]\r\n    F1 --> G1[\"涌现推理行为<br/>🧩 自我验证、反思<br/>'顿悟时刻'\"]\r\n    G1 --> H1[\"R1-Zero模型<br/>⭐ 71% AIME准确率<br/>但存在可读性问题\"]\r\n    \r\n    "
        ],
        "createdAt": 1752259580354,
        "isNativeComment": true
      },
      {
        "id": "48jwfehy9",
        "text": " 知识蒸馏分支\r\n    I2 --> J[\"知识蒸馏<br/>🔄 80万样本训练小模型\"]\r\n    J --> K[\"蒸馏模型<br/>💎 7B模型超越32B<br/>高效推理能力传递\"]\r\n    \r\n    ",
        "tags": [],
        "line": 102,
        "startOffset": 2763,
        "endOffset": 2877,
        "filePath": "Sources/AIGC/LLM训练全流程详解 - 从基础到DeepSeek创新.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " 知识蒸馏分支\r\n    I2 --> J[\"知识蒸馏<br/>🔄 80万样本训练小模型\"]\r\n    J --> K[\"蒸馏模型<br/>💎 7B模型超越32B<br/>高效推理能力传递\"]\r\n    \r\n    "
        ],
        "createdAt": 1752259581025,
        "isNativeComment": true
      },
      {
        "id": "w8ch8xt51",
        "text": " 样式定义\r\n    classDef dataNode fill:#e1f5fe,stroke:#01579b,stroke-width:2px\r\n    classDef processNode fill:#f3e5f5,stroke:#4a148c,stroke-width:2px\r\n    classDef modelNode fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px\r\n    classDef zeroPath fill:#ffebee,stroke:#c62828,stroke-width:2px\r\n    classDef r1Path fill:#e3f2fd,stroke:#1565c0,stroke-width:2px\r\n    classDef finalNode fill:#fff3e0,stroke:#e65100,stroke-width:3px\r\n    classDef techNode fill:#f1f8e9,stroke:#33691e,stroke-width:2px\r\n    \r\n    ",
        "tags": [],
        "line": 109,
        "startOffset": 2967,
        "endOffset": 3467,
        "filePath": "Sources/AIGC/LLM训练全流程详解 - 从基础到DeepSeek创新.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " 样式定义\r\n    classDef dataNode fill:#e1f5fe,stroke:#01579b,stroke-width:2px\r\n    classDef processNode fill:#f3e5f5,stroke:#4a148c,stroke-width:2px\r\n    classDef modelNode fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px\r\n    classDef zeroPath fill:#ffebee,stroke:#c62828,stroke-width:2px\r\n    classDef r1Path fill:#e3f2fd,stroke:#1565c0,stroke-width:2px\r\n    classDef finalNode fill:#fff3e0,stroke:#e65100,stroke-width:3px\r\n    classDef techNode fill:#f1f8e9,stroke:#33691e,stroke-width:2px\r\n    \r\n    "
        ],
        "createdAt": 1752259581229,
        "isNativeComment": true
      },
      {
        "id": "n54ahlq9g",
        "text": " 连接优势\r\n    D5 --> A1\r\n    D5 --> A2\r\n    D5 --> A3\r\n    D5 --> A4\r\n    D5 --> A5\r\n    \r\n    ",
        "tags": [],
        "line": 201,
        "startOffset": 5445,
        "endOffset": 5541,
        "filePath": "Sources/AIGC/LLM训练全流程详解 - 从基础到DeepSeek创新.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " 连接优势\r\n    D5 --> A1\r\n    D5 --> A2\r\n    D5 --> A3\r\n    D5 --> A4\r\n    D5 --> A5\r\n    \r\n    "
        ],
        "createdAt": 1752259580707,
        "isNativeComment": true
      },
      {
        "id": "miqgfxtsv",
        "text": " 应用样式\r\n    class T1,T2,T3,T4,T5 traditionalStyle\r\n    class D1,D2,D3,D4,D5,D6 deepseekStyle\r\n    class A1,A2,A3,A4,A5 advantageStyle\r\n```\r\n\r\n| 方面 | 传统方法 | DeepSeek-R1 |\r\n|------|----------|-------------|\r\n| SFT依赖 | 高度依赖高质量标注数据 | 最小化或消除SFT |\r\n| 推理能力 | 有限的推理深度 | 自适应长链推理 |\r\n| 训练成本 | 需要大量人工标注 | 主要依靠自动奖励 |\r\n| 可扩展性 | 受限于人类认知边界 | 可超越人类思维模式 |\r\n| 测试时计算 | 固定计算资源 | 动态调整思考时间 |\r\n\r\n## 训练数据需求\r\n\r\n### 传统方法\r\n- 预训练：数万亿tokens\r\n- SFT：数万到数十万高质量对话\r\n- RLHF：数万条人类偏好数据\r\n\r\n### DeepSeek方法\r\n- 预训练：数万亿tokens(相同)\r\n- 冷启动：仅数千条CoT样本\r\n- RL：使用规则奖励，无需人工标注\r\n\r\n## 技术挑战与解决方案\r\n\r\n### 挑战1：输出可读性\r\n- **问题**: R1-Zero存在语言混用、可读性差\r\n- **解决**: R1引入语言一致性奖励\r\n\r\n### 挑战2：训练稳定性\r\n- **问题**: 纯RL训练容易不稳定\r\n- **解决**: 多阶段训练流程\r\n\r\n### 挑战3：通用能力\r\n- **问题**: 过度专注推理可能损害其他能力\r\n- **解决**: 最后阶段加入通用任务的RL训练\r\n\r\n## 知识蒸馏：小模型的福音\r\n\r\n### 什么是知识蒸馏\r\n\r\n知识蒸馏(Knowledge Distillation)是一种模型压缩技术，旨在将大型复杂模型（**教师模型**）的知识转移到小型模型（**学生模型**）中，从而在保持性能的同时大幅降低计算成本。\r\n\r\n### 知识蒸馏完整流程\r\n\r\n```mermaid\r\ngraph TD\r\n    subgraph teacher [\"教师模型阶段\"]\r\n        A[\"DeepSeek-R1<br/>🧠 671B参数<br/>强大推理能力\"] --> B[\"数据生成<br/>📝 生成推理路径<br/><think>...</think>格式\"]\r\n        B --> C[\"大规模数据集<br/>📊 80万高质量样本<br/>覆盖数学/编程/科学\"]\r\n    end\r\n    \r\n    subgraph processing [\"数据处理阶段\"]\r\n        C --> D[\"模板化输出<br/>🏗️ 结构化推理格式<br/><think>推理过程</think><br/><answer>最终答案</answer>\"]\r\n        D --> E[\"拒绝采样<br/>🎯 质量过滤<br/>去除错误/语言混用样本\"]\r\n        E --> F[\"数据配比<br/>⚖️ 80%推理数据<br/>20%通用数据\"]\r\n    end\r\n    \r\n    subgraph student [\"学生模型阶段\"]\r\n        F --> G[\"学生模型<br/>🎓 Qwen-32B/Llama-70B<br/>等开源基座模型\"]\r\n        G --> H[\"监督微调 (SFT)<br/>📚 基于教师生成的数据<br/>最小化交叉熵损失\"]\r\n        H --> I[\"蒸馏模型<br/>💎 DeepSeek-R1-Distill-Qwen-32B<br/>继承推理能力\"]\r\n    end\r\n    \r\n    subgraph optimization [\"优化阶段\"]\r\n        I --> J[\"分支训练<br/>🌿 数学/编程/科学<br/>专门化训练\"]\r\n        J --> K[\"模型合并<br/>🔀 Arcee Fusion<br/>结合多领域专长\"]\r\n        K --> L[\"最终模型<br/>🏆 TinyR1-32B<br/>全能推理模型\"]\r\n    end\r\n    \r\n    ",
        "tags": [],
        "line": 214,
        "startOffset": 5855,
        "endOffset": 7690,
        "filePath": "Sources/AIGC/LLM训练全流程详解 - 从基础到DeepSeek创新.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " 应用样式\r\n    class T1,T2,T3,T4,T5 traditionalStyle\r\n    class D1,D2,D3,D4,D5,D6 deepseekStyle\r\n    class A1,A2,A3,A4,A5 advantageStyle\r\n```\r\n\r\n| 方面 | 传统方法 | DeepSeek-R1 |\r\n|------|----------|-------------|\r\n| SFT依赖 | 高度依赖高质量标注数据 | 最小化或消除SFT |\r\n| 推理能力 | 有限的推理深度 | 自适应长链推理 |\r\n| 训练成本 | 需要大量人工标注 | 主要依靠自动奖励 |\r\n| 可扩展性 | 受限于人类认知边界 | 可超越人类思维模式 |\r\n| 测试时计算 | 固定计算资源 | 动态调整思考时间 |\r\n\r\n## 训练数据需求\r\n\r\n### 传统方法\r\n- 预训练：数万亿tokens\r\n- SFT：数万到数十万高质量对话\r\n- RLHF：数万条人类偏好数据\r\n\r\n### DeepSeek方法\r\n- 预训练：数万亿tokens(相同)\r\n- 冷启动：仅数千条CoT样本\r\n- RL：使用规则奖励，无需人工标注\r\n\r\n## 技术挑战与解决方案\r\n\r\n### 挑战1：输出可读性\r\n- **问题**: R1-Zero存在语言混用、可读性差\r\n- **解决**: R1引入语言一致性奖励\r\n\r\n### 挑战2：训练稳定性\r\n- **问题**: 纯RL训练容易不稳定\r\n- **解决**: 多阶段训练流程\r\n\r\n### 挑战3：通用能力\r\n- **问题**: 过度专注推理可能损害其他能力\r\n- **解决**: 最后阶段加入通用任务的RL训练\r\n\r\n## 知识蒸馏：小模型的福音\r\n\r\n### 什么是知识蒸馏\r\n\r\n知识蒸馏(Knowledge Distillation)是一种模型压缩技术，旨在将大型复杂模型（**教师模型**）的知识转移到小型模型（**学生模型**）中，从而在保持性能的同时大幅降低计算成本。\r\n\r\n### 知识蒸馏完整流程\r\n\r\n```mermaid\r\ngraph TD\r\n    subgraph teacher [\"教师模型阶段\"]\r\n        A[\"DeepSeek-R1<br/>🧠 671B参数<br/>强大推理能力\"] --> B[\"数据生成<br/>📝 生成推理路径<br/><think>...</think>格式\"]\r\n        B --> C[\"大规模数据集<br/>📊 80万高质量样本<br/>覆盖数学/编程/科学\"]\r\n    end\r\n    \r\n    subgraph processing [\"数据处理阶段\"]\r\n        C --> D[\"模板化输出<br/>🏗️ 结构化推理格式<br/><think>推理过程</think><br/><answer>最终答案</answer>\"]\r\n        D --> E[\"拒绝采样<br/>🎯 质量过滤<br/>去除错误/语言混用样本\"]\r\n        E --> F[\"数据配比<br/>⚖️ 80%推理数据<br/>20%通用数据\"]\r\n    end\r\n    \r\n    subgraph student [\"学生模型阶段\"]\r\n        F --> G[\"学生模型<br/>🎓 Qwen-32B/Llama-70B<br/>等开源基座模型\"]\r\n        G --> H[\"监督微调 (SFT)<br/>📚 基于教师生成的数据<br/>最小化交叉熵损失\"]\r\n        H --> I[\"蒸馏模型<br/>💎 DeepSeek-R1-Distill-Qwen-32B<br/>继承推理能力\"]\r\n    end\r\n    \r\n    subgraph optimization [\"优化阶段\"]\r\n        I --> J[\"分支训练<br/>🌿 数学/编程/科学<br/>专门化训练\"]\r\n        J --> K[\"模型合并<br/>🔀 Arcee Fusion<br/>结合多领域专长\"]\r\n        K --> L[\"最终模型<br/>🏆 TinyR1-32B<br/>全能推理模型\"]\r\n    end\r\n    \r\n    "
        ],
        "createdAt": 1752259581117,
        "isNativeComment": true
      },
      {
        "id": "vugksl6z5",
        "text": " 应用样式\r\n    class A,B,C teacherNode\r\n    class D,E,F processNode\r\n    class G,H,I studentNode\r\n    class J,K,L optimizeNode\r\n```\r\n\r\n### DeepSeek蒸馏技术详解\r\n\r\n#### 核心创新点\r\n\r\n1. **规则奖励系统**：避免传统神经网络奖励模型的\"奖励欺骗\"问题\r\n2. **测试时计算**：保留长链推理能力，模型可自适应思考时间\r\n3. **结构化输出**：通过`<think></think>`标签明确区分推理和答案\r\n4. **大规模数据生成**：80万高质量样本，成本远低于人工标注\r\n\r\n#### 蒸馏过程技术细节\r\n\r\n**数据生成阶段**：\r\n- DeepSeek-R1按照特定模板生成推理路径\r\n- 包含数学、编程、逻辑推理等多个领域\r\n- 每个样本包含完整的思维链过程\r\n\r\n**质量控制**：\r\n- **规则过滤**：自动验证数学答案正确性\r\n- **可读性检查**：移除语言混用、过长段落\r\n- **拒绝采样**：仅保留高质量推理样本\r\n\r\n**训练策略**：\r\n- 80%推理数据 + 20%通用数据\r\n- 使用监督微调对齐文本序列\r\n- 迭代训练确保知识有效转移\r\n\r\n### 蒸馏模型本质分析\r\n\r\n以`deepseek-ai/DeepSeek-R1-0528-Qwen3-8B`为例：\r\n\r\n#### 模型构成\r\n- **架构本质**: 基于Qwen3-8B的Transformer架构\r\n- **能力来源**: 通过DeepSeek-R1的80万样本训练获得推理能力\r\n- **参数规模**: 8B参数，适合本地部署\r\n\r\n#### 命名解析\r\n- `DeepSeek-R1-0528`: 表示基于2025年5月28日版本的DeepSeek-R1蒸馏\r\n- `Qwen3-8B`: 学生模型的基础架构和参数规模\r\n- 本质上是**Qwen架构 + DeepSeek推理能力**\r\n\r\n### 蒸馏效果对比\r\n\r\n| 模型类型 | 参数量 | AIME 2024 | LiveCodeBench | 特点 |\r\n|---------|--------|-----------|---------------|------|\r\n| DeepSeek-R1 | 671B | 79.8% | 65.9% | 原始教师模型 |\r\n| DeepSeek-R1-Distill-Qwen-32B | 32B | 72.6% | 57.2% | 直接蒸馏 |\r\n| TinyR1-32B-Preview | 32B | 78.1% | 61.6% | 分支合并蒸馏 |\r\n| DeepSeek-R1-Distill-Qwen-7B | 7B | 55.5% | - | 更小规模蒸馏 |\r\n\r\n### 蒸馏优势总结\r\n\r\n- **成本效益**: 减少90%的人工标注需求\r\n- **效果保持**: 7B模型在某些任务上超越32B传统模型  \r\n- **部署友好**: 显著降低硬件要求，支持本地部署\r\n- **知识传承**: 完整保留复杂推理模式和\"顿悟\"行为\r\n\r\n### 传统蒸馏 vs DeepSeek推理蒸馏\r\n\r\n```mermaid\r\ngraph LR\r\n    subgraph traditional [\"传统知识蒸馏\"]\r\n        T1[\"大模型<br/>Teacher\"] --> T2[\"输出概率分布<br/>Soft Labels\"]\r\n        T2 --> T3[\"小模型学习<br/>KL散度损失\"]\r\n        T3 --> T4[\"压缩模型<br/>保留性能60-80%\"]\r\n    end\r\n    \r\n    subgraph deepseek [\"DeepSeek推理蒸馏\"]\r\n        D1[\"DeepSeek-R1<br/>671B参数\"] --> D2[\"生成推理路径<br/>Chain of Thought\"]\r\n        D2 --> D3[\"结构化数据<br/><think>推理</think><br/><answer>答案</answer>\"]\r\n        D3 --> D4[\"质量过滤<br/>拒绝采样\"]\r\n        D4 --> D5[\"SFT训练<br/>Qwen/Llama架构\"]\r\n        D5 --> D6[\"推理能力模型<br/>保留性能90%+\"]\r\n    end\r\n    \r\n    subgraph comparison [\"性能对比\"]\r\n        C1[\"💰 成本<br/>DeepSeek: 1500美元<br/>传统: 10万+美元\"]\r\n        C2[\"⚡ 效率<br/>DeepSeek: 90%性能保留<br/>传统: 60-80%保留\"]\r\n        C3[\"🎯 专业性<br/>DeepSeek: 推理专门优化<br/>传统: 通用压缩\"]\r\n        C4[\"📱 部署<br/>DeepSeek: 7B可本地运行<br/>传统: 仍需较大资源\"]\r\n    end\r\n    \r\n    ",
        "tags": [],
        "line": 293,
        "startOffset": 7992,
        "endOffset": 10218,
        "filePath": "Sources/AIGC/LLM训练全流程详解 - 从基础到DeepSeek创新.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " 应用样式\r\n    class A,B,C teacherNode\r\n    class D,E,F processNode\r\n    class G,H,I studentNode\r\n    class J,K,L optimizeNode\r\n```\r\n\r\n### DeepSeek蒸馏技术详解\r\n\r\n#### 核心创新点\r\n\r\n1. **规则奖励系统**：避免传统神经网络奖励模型的\"奖励欺骗\"问题\r\n2. **测试时计算**：保留长链推理能力，模型可自适应思考时间\r\n3. **结构化输出**：通过`<think></think>`标签明确区分推理和答案\r\n4. **大规模数据生成**：80万高质量样本，成本远低于人工标注\r\n\r\n#### 蒸馏过程技术细节\r\n\r\n**数据生成阶段**：\r\n- DeepSeek-R1按照特定模板生成推理路径\r\n- 包含数学、编程、逻辑推理等多个领域\r\n- 每个样本包含完整的思维链过程\r\n\r\n**质量控制**：\r\n- **规则过滤**：自动验证数学答案正确性\r\n- **可读性检查**：移除语言混用、过长段落\r\n- **拒绝采样**：仅保留高质量推理样本\r\n\r\n**训练策略**：\r\n- 80%推理数据 + 20%通用数据\r\n- 使用监督微调对齐文本序列\r\n- 迭代训练确保知识有效转移\r\n\r\n### 蒸馏模型本质分析\r\n\r\n以`deepseek-ai/DeepSeek-R1-0528-Qwen3-8B`为例：\r\n\r\n#### 模型构成\r\n- **架构本质**: 基于Qwen3-8B的Transformer架构\r\n- **能力来源**: 通过DeepSeek-R1的80万样本训练获得推理能力\r\n- **参数规模**: 8B参数，适合本地部署\r\n\r\n#### 命名解析\r\n- `DeepSeek-R1-0528`: 表示基于2025年5月28日版本的DeepSeek-R1蒸馏\r\n- `Qwen3-8B`: 学生模型的基础架构和参数规模\r\n- 本质上是**Qwen架构 + DeepSeek推理能力**\r\n\r\n### 蒸馏效果对比\r\n\r\n| 模型类型 | 参数量 | AIME 2024 | LiveCodeBench | 特点 |\r\n|---------|--------|-----------|---------------|------|\r\n| DeepSeek-R1 | 671B | 79.8% | 65.9% | 原始教师模型 |\r\n| DeepSeek-R1-Distill-Qwen-32B | 32B | 72.6% | 57.2% | 直接蒸馏 |\r\n| TinyR1-32B-Preview | 32B | 78.1% | 61.6% | 分支合并蒸馏 |\r\n| DeepSeek-R1-Distill-Qwen-7B | 7B | 55.5% | - | 更小规模蒸馏 |\r\n\r\n### 蒸馏优势总结\r\n\r\n- **成本效益**: 减少90%的人工标注需求\r\n- **效果保持**: 7B模型在某些任务上超越32B传统模型  \r\n- **部署友好**: 显著降低硬件要求，支持本地部署\r\n- **知识传承**: 完整保留复杂推理模式和\"顿悟\"行为\r\n\r\n### 传统蒸馏 vs DeepSeek推理蒸馏\r\n\r\n```mermaid\r\ngraph LR\r\n    subgraph traditional [\"传统知识蒸馏\"]\r\n        T1[\"大模型<br/>Teacher\"] --> T2[\"输出概率分布<br/>Soft Labels\"]\r\n        T2 --> T3[\"小模型学习<br/>KL散度损失\"]\r\n        T3 --> T4[\"压缩模型<br/>保留性能60-80%\"]\r\n    end\r\n    \r\n    subgraph deepseek [\"DeepSeek推理蒸馏\"]\r\n        D1[\"DeepSeek-R1<br/>671B参数\"] --> D2[\"生成推理路径<br/>Chain of Thought\"]\r\n        D2 --> D3[\"结构化数据<br/><think>推理</think><br/><answer>答案</answer>\"]\r\n        D3 --> D4[\"质量过滤<br/>拒绝采样\"]\r\n        D4 --> D5[\"SFT训练<br/>Qwen/Llama架构\"]\r\n        D5 --> D6[\"推理能力模型<br/>保留性能90%+\"]\r\n    end\r\n    \r\n    subgraph comparison [\"性能对比\"]\r\n        C1[\"💰 成本<br/>DeepSeek: 1500美元<br/>传统: 10万+美元\"]\r\n        C2[\"⚡ 效率<br/>DeepSeek: 90%性能保留<br/>传统: 60-80%保留\"]\r\n        C3[\"🎯 专业性<br/>DeepSeek: 推理专门优化<br/>传统: 通用压缩\"]\r\n        C4[\"📱 部署<br/>DeepSeek: 7B可本地运行<br/>传统: 仍需较大资源\"]\r\n    end\r\n    \r\n    "
        ],
        "createdAt": 1752259581254,
        "isNativeComment": true
      },
      {
        "id": "2vvxblip2",
        "text": " 样式定义\r\n    classDef traditionalStyle fill:#ffebee,stroke:#c62828,stroke-width:2px\r\n    classDef deepseekStyle fill:#e3f2fd,stroke:#1565c0,stroke-width:2px\r\n    classDef comparisonStyle fill:#e8f5e8,stroke:#2e7d32,stroke-width:2px\r\n    \r\n    ",
        "tags": [],
        "line": 387,
        "startOffset": 10293,
        "endOffset": 10538,
        "filePath": "Sources/AIGC/LLM训练全流程详解 - 从基础到DeepSeek创新.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " 样式定义\r\n    classDef traditionalStyle fill:#ffebee,stroke:#c62828,stroke-width:2px\r\n    classDef deepseekStyle fill:#e3f2fd,stroke:#1565c0,stroke-width:2px\r\n    classDef comparisonStyle fill:#e8f5e8,stroke:#2e7d32,stroke-width:2px\r\n    \r\n    "
        ],
        "createdAt": 1752259580555,
        "isNativeComment": true
      }
    ],
    "Extras/Templates/其他/anki卡片模板.md": [
      {
        "id": "mc15yhyn9",
        "text": "正面描述，记忆，回忆钩子",
        "tags": [],
        "line": 8,
        "startOffset": 85,
        "endOffset": 101,
        "filePath": "Extras/Templates/其他/anki卡片模板.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "正面描述，记忆，回忆钩子"
        ],
        "createdAt": 1747345023336,
        "isNativeComment": true
      },
      {
        "id": "6mleou2h3",
        "text": "反面描述，事实、观点、立场、信仰",
        "tags": [],
        "line": 11,
        "startOffset": 121,
        "endOffset": 141,
        "filePath": "Extras/Templates/其他/anki卡片模板.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "反面描述，事实、观点、立场、信仰"
        ],
        "createdAt": 1747345023372,
        "isNativeComment": true
      }
    ],
    "Extras/Templates/Cards模板/Sources&Spaces卡片_标准模板.md": [
      {
        "id": "tr7twm45x",
        "text": "和[[Card卡片_标准模板]]相比，第一要素是原文链接和摘录，第二要素是我的记录。",
        "tags": [],
        "line": 7,
        "startOffset": 92,
        "endOffset": 138,
        "filePath": "Extras/Templates/Cards模板/Sources&Spaces卡片_标准模板.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "和[[Card卡片_标准模板]]相比，第一要素是原文链接和摘录，第二要素是我的记录。"
        ],
        "createdAt": 1752259580344,
        "isNativeComment": true
      }
    ],
    "Extras/Templates/Cards模板/Card卡片_标准模板.md": [
      {
        "id": "ktkfqv0z8",
        "text": "和[[Sources&Spaces卡片_标准模板]]相比，第一要素是我的想法和思考，第二要素是参考文献来源",
        "tags": [],
        "line": 7,
        "startOffset": 92,
        "endOffset": 149,
        "filePath": "Extras/Templates/Cards模板/Card卡片_标准模板.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "和[[Sources&Spaces卡片_标准模板]]相比，第一要素是我的想法和思考，第二要素是参考文献来源"
        ],
        "createdAt": 1752259580344,
        "isNativeComment": true
      }
    ],
    "Extras/Documents/Obsidian bases 规范.md": [
      {
        "id": "hpo0535nm",
        "text": " true\"\n    lat: lat\n    long: long\n    title: file.name\n```\n\n### Filters\n\nBy default a base includes every file in the vault. There is no `from` or `source` like in SQL or Dataview. The `filters` section lets you define conditions to narrow down the dataset.\n\n```yaml\nfilters:\n  or:\n    - tagged_with(file.file, \"tag\")\n    - and:\n        - tagged_with(file.file, \"book\")\n        - links_to(file.file, \"Textbook\")\n    - not:\n        - tagged_with(file.file, \"book\")\n        - in_folder(file.file, \"Required Reading\")\n```\n\nThere are two opportunities to apply filters:\n\n1. At the global `filters` level (shown above) where they apply to all views in the base.\n2. At the `view` level where apply only to a specific view.\n\nThese two sections are functionally equivalent and when evaluating for a view they will be concatenated with an `AND`.\n\nThe `filters` section contains either a single filter statement as a string, or a recursively defined filter object. Filter objects may contain one of `and`, `or`, or `not`. These keys are a heterogenous list of other filter objects or filter statements in strings. A filter statement is a line which evaluates to truthy or falsey when applied to a note. It can be one of the following:\n\n- A basic comparison using standard arithmetic operators.\n- A function. A variety of [functions](https://help.obsidian.md/bases/functions) are built-in, and plugins can add additional functions.\n\nThe syntax and available functions for filters and formulas are the same.\n\n### Formulas\n\nThe `formulas` section defines formula properties that can be displayed across all views in the base file.\n\n```yaml\nformulas:\n  price: \"concat(price, 'dollars')\"\n  ppu: \"price / age\"\n```\n\nFormula properties support basic arithmetic operators and a variety of built-in [functions](https://help.obsidian.md/bases/functions). In the future, plugins will be able to add functions for use in formulas.\n\nFormula properties can use values from other formula properties, as long as there is no circular reference. They are always defined as strings in the YAML, however the data type of the data and the function returns will be used to determine the output data type.\n\nNote the use of nested quotes necessary to include string literals in the YAML field.\n\n### Display\n\nThe `display` section allows renaming properties with friendlier names. It is up to the individual view how to use the display name. For example, in tables the display name is used for the column headers.\n\n```yaml\ndisplay:\n  status: Status\n  price: \"Price\"\n  \"file.ext\": Extension\n```\n\nDisplay names are not used in filters or formulas.\n\n### Views\n\nThe `views` section defines how the data can be rendered. Each entry in the `views` list defines a separate view of the same data, and there can be as many different views as needed.\n\n```yaml\nviews:\n  - type: table\n    name: \"My table\"\n    limit: 10\n    filters:\n      and:\n        - \"status != 'done'\"\n        - or:\n            - \"ppu > 5\"\n            - \"price > 2.1\"\n    order:\n      - file.name\n      - file.ext\n      - property.price\n      - property.age\n      - formula.ppu\n  - type: map\n    name: \"Example map\"\n    filters: \"has_coords ",
        "tags": [],
        "line": 51,
        "startOffset": 1402,
        "endOffset": 4571,
        "filePath": "Extras/Documents/Obsidian bases 规范.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1751982859251,
        "isNativeComment": false
      },
      {
        "id": "3p2nb2tyq",
        "text": " 'md'` will be true for all markdown files and false otherwise.\n\n| Property | Type | Description |\n| --- | --- | --- |\n| `file.file` | File | File object. Only usable in specific functions. |\n| `file.name` | String | File name |\n| `file.ctime` | Date | Created time |\n| `file.mtime` | Date | Modified time |\n| `file.ext` | String | File extension |\n| `file.size` | Number | File size |\n| `file.folder` | String | Path of the file folder |\n\n### Self-referential properties\n\nEmbedded bases can use `this` to access properties of the current file. For example, `this.file.name` will resolve to the name of the file which has embedded the base, instead of the file being evaluated.\n\nIn a sidebar, `this` takes on the special meaning of \"the currently active file\". This allows you to create contextual queries based on the active file in the main content area. For example, this can be used to replicate the backlinks pane with this filter: `links_to(file.file, this.file.path)`.\n\n## Arithmetic operators\n\n| Operator | Description |\n| --- | --- |\n| `+` | plus |\n| `-` | minus |\n| `*` | multiply |\n| `/` | divide |\n| `( )` | parenthesis |\n\n## Comparison operators\n\n| Operator | Description |\n| --- | --- |\n| `",
        "tags": [],
        "line": 160,
        "startOffset": 5734,
        "endOffset": 6942,
        "filePath": "Extras/Documents/Obsidian bases 规范.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1751982859583,
        "isNativeComment": false
      }
    ],
    "Cards/aliases and hotkey - 别名与快捷键.md": [
      {
        "id": "si0ti2do2",
        "text": "一键打开/呼出/隐藏",
        "tags": [],
        "line": 6,
        "startOffset": 71,
        "endOffset": 85,
        "filePath": "Cards/aliases and hotkey - 别名与快捷键.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752808925483,
        "isNativeComment": false
      }
    ],
    "Cards/小二后台体验日志.md": [
      {
        "id": "7pftbjnij",
        "text": " 以下业务开发过程中再去详细看",
        "tags": [],
        "line": 66,
        "startOffset": 758,
        "endOffset": 777,
        "filePath": "Cards/小二后台体验日志.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " 以下业务开发过程中再去详细看"
        ],
        "createdAt": 1752259580641,
        "isNativeComment": true
      }
    ],
    "Cards/存储强度与提取强度 - 记忆.md": [
      {
        "id": "zz59r6prv",
        "text": "但他的实验发现了与常识相反的结论：“存储与提取负相关”，也就是说，存入记忆越容易，提取出来越困难；反之，如果你有些吃力地存入，知识提取会更方便。",
        "tags": [],
        "line": 6,
        "startOffset": 190,
        "endOffset": 266,
        "filePath": "Cards/存储强度与提取强度 - 记忆.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1747345027240,
        "isNativeComment": false
      }
    ],
    "Cards/为什么要做笔记.md": [
      {
        "id": "tfonsgpfg",
        "text": "记笔记的目的，是为了让自己，更好地思考",
        "tags": [],
        "line": 11,
        "startOffset": 273,
        "endOffset": 296,
        "filePath": "Cards/为什么要做笔记.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1750014133913,
        "isNativeComment": false
      }
    ],
    "Cards/ssl证书备份.md": [
      {
        "id": "nebcccahl",
        "text": "\r\n-----END PRIVATE KEY-----\r\n```\r\n\r\n\r\n### pin-csr\r\n\r\n```\r\n-----BEGIN CERTIFICATE REQUEST-----\r\nMIIDFTCCAf0CAQAwgY8xFjAUBgNVBAMTDWFwaS55aW5ndHUuY28xGjAYBgNVBAgT\r\nEVpoZWppYW5nIFByb3ZpbmNlMRYwFAYDVQQHEw1IYW5nemhvdSBDaXR5MQswCQYD\r\nVQQLEwJJVDEnMCUGA1UECgwe5p2t5bee5pig5YWU56eR5oqA5pyJ6ZmQ5YWs5Y+4\r\nMQswCQYDVQQGEwJDTjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALuT\r\nuFpUyjWWgUDpXTODTHHW4swA4rl3KOErD9JGuj9jkfTsYYM7/K6Sesx8Vjk/XjvF\r\nlXvWQbIQCBMptMrPRzOwSjyHpK5xOMw7vRgSawWSCFHLvbJgrx+e51MZnyKaqZFV\r\nwBtMcZQjfwKE5C4cAZXLw6Z25tfN4ZVk13RuncB2wnBOoN0DJsZy4oII8M13jO4E\r\nEGYdhbRJQMnvMXwlVDamWrop4ga1oXdfY4Vw0MCxYz/1uX1IK6ZBjKXQCEIG0bK0\r\nR5J6IFSn3ZvPr3tnQF/BbA0YFDeDKv/UWtWmirUfWS6vqISUrZ+0k6A7gqmDpyDF\r\nsn0mFwz9JhzPdNP4LusCAwEAAaBAMD4GCSqGSIb3DQEJDjExMC8wLQYDVR0RBCYw\r\nJIIRb3BlbmFwaS55aW5ndHUuY2+CD3ZpZGVvLnlpbmd0dS5jbzANBgkqhkiG9w0B\r\nAQsFAAOCAQEAlL/tESWMGX6v3ia+SFm9qMv4aBHPYRc9HTS/3/KtHoevJOCwMq1H\r\ngjaG/Z/orDA7F2mhdikLVTkzEsCfvylKoVyVjAkARaMlTQNbCZyxrAZufXKbK0AN\r\nhoO6/D1SE1mCXHM2iwqnnq2sV5S16ZOG0/dgqXjYvUV4U9olzjhx2V2OYN24/Abi\r\nraz99b332bmMiSET9a1dbFJJmUg3LKs1G/nQVRK7EhtiIC2KSNFtXMrbDN/5FYUQ\r\nG3TauHieZPRjfLohpN1684p3a0vjK++C6euSj1U/PuzKcGkXSMMhHLAbkKvqd7B3\r\n+01E+VO6DI1vj1QG9SGZ6gvI+qTuv0Tl2A",
        "tags": [],
        "line": 50,
        "startOffset": 2716,
        "endOffset": 3905,
        "filePath": "Cards/ssl证书备份.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615146770,
        "isNativeComment": false
      }
    ],
    "Cards/minimal主题的publish.js参考.md": [
      {
        "id": "3g3da0rs2",
        "text": " null) continue;\r\n\r\n    moveItem = navItem.parentElement;\r\n\r\n    navContainer.prepend(moveItem);\r\n\r\n}\r\n\r\nfor (const item of navOrderDsc.reverse()){\r\n\r\n    querytext = '[data-path=\"' + item + '\"]';\r\n\r\n    navItem = navContainer.querySelector(querytext);\r\n\r\n    if (navItem ",
        "tags": [],
        "line": 32,
        "startOffset": 936,
        "endOffset": 1212,
        "filePath": "Cards/minimal主题的publish.js参考.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1748615145729,
        "isNativeComment": false
      }
    ],
    "Cards/dataviewjs常用使用示例范例.md": [
      {
        "id": "j2bu2k62x",
        "text": "y && String(p.file.cday).split(\"-\")[1]",
        "tags": [],
        "line": 24,
        "startOffset": 524,
        "endOffset": 566,
        "filePath": "Cards/dataviewjs常用使用示例范例.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259579849,
        "isNativeComment": false
      },
      {
        "id": "i8rkmy0i4",
        "text": "j.key).length;\r\n\r\n    if(data.every(p=>p",
        "tags": [],
        "line": 25,
        "startOffset": 720,
        "endOffset": 764,
        "filePath": "Cards/dataviewjs常用使用示例范例.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259580045,
        "isNativeComment": false
      }
    ],
    "Cards/clash 启用后无法打开Microsoft store的解决方案.md": [
      {
        "id": "aw3i75kd1",
        "text": " 以管理员方式打开 ",
        "tags": [],
        "line": 15,
        "startOffset": 420,
        "endOffset": 434,
        "filePath": "Cards/clash 启用后无法打开Microsoft store的解决方案.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " 以管理员方式打开 "
        ],
        "createdAt": 1752259348531,
        "isNativeComment": true
      }
    ],
    "Cards/PPV.md": [
      {
        "id": "zkonnfwdh",
        "text": "其实就是[[OKR]]+[[GTD]]",
        "tags": [],
        "line": 28,
        "startOffset": 543,
        "endOffset": 566,
        "filePath": "Cards/PPV.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "其实就是[[OKR]]+[[GTD]]"
        ],
        "createdAt": 1752259348518,
        "isNativeComment": true
      },
      {
        "id": "983hmfi3h",
        "text": "用[[P.A.R.A]]思路",
        "tags": [],
        "line": 39,
        "startOffset": 715,
        "endOffset": 733,
        "filePath": "Cards/PPV.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "用[[P.A.R.A]]思路"
        ],
        "createdAt": 1752259348690,
        "isNativeComment": true
      }
    ],
    "Cards/KB - 测试看板.md": [
      {
        "id": "kyql95t55",
        "text": " kanban:settings\n\n```\n{\"kanban-plugin\":\"basic\"}\n```\n\n",
        "tags": [],
        "line": 13,
        "startOffset": 110,
        "endOffset": 167,
        "filePath": "Cards/KB - 测试看板.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " kanban:settings\n\n```\n{\"kanban-plugin\":\"basic\"}\n```\n\n"
        ],
        "createdAt": 1749387792447,
        "isNativeComment": true
      }
    ],
    "Cards/KANBAN - 看板.md": [
      {
        "id": "sz5vfwpk0",
        "text": " kanban:settings\r\n\r\n```\r\n{\"kanban-plugin\":\"basic\",\"show-relative-date\":true,\"date-picker-week-start\":1,\"lane-width\":272,\"show-checkboxes\":false,\"hide-tags-in-title\":false,\"hide-tags-display\":false}\r\n```\r\n\r\n",
        "tags": [],
        "line": 30,
        "startOffset": 509,
        "endOffset": 719,
        "filePath": "Cards/KANBAN - 看板.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " kanban:settings\r\n\r\n```\r\n{\"kanban-plugin\":\"basic\",\"show-relative-date\":true,\"date-picker-week-start\":1,\"lane-width\":272,\"show-checkboxes\":false,\"hide-tags-in-title\":false,\"hide-tags-display\":false}\r\n```\r\n\r\n"
        ],
        "createdAt": 1752259348438,
        "isNativeComment": true
      }
    ],
    "Cards/Data Pipeline： 数据处理及清洗系统.md": [
      {
        "id": "mikzujt2x",
        "text": " ### 后续待解决\r\n\r\n## 如果后面上线后产生脏数据，怎么查询并清理。 建议 from [[陈德海|德海]] ",
        "tags": [],
        "line": 4,
        "startOffset": 21,
        "endOffset": 83,
        "filePath": "Cards/Data Pipeline： 数据处理及清洗系统.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " ### 后续待解决\r\n\r\n## 如果后面上线后产生脏数据，怎么查询并清理。 建议 from [[陈德海|德海]] "
        ],
        "createdAt": 1752259347909,
        "isNativeComment": true
      }
    ],
    "Cards/Advanced Slides.md": [
      {
        "id": "h57dsz7gs",
        "text": " fold ",
        "tags": [],
        "line": 57,
        "startOffset": 806,
        "endOffset": 816,
        "filePath": "Cards/Advanced Slides.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " fold "
        ],
        "createdAt": 1752300471286,
        "isNativeComment": true
      },
      {
        "id": "yyjuvx7rt",
        "text": " fold ",
        "tags": [],
        "line": 79,
        "startOffset": 1069,
        "endOffset": 1079,
        "filePath": "Cards/Advanced Slides.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " fold "
        ],
        "createdAt": 1752300470549,
        "isNativeComment": true
      },
      {
        "id": "9s02a960x",
        "text": " 我用的目的，应该就是基于现有的结构化的文档，进行分钟级的低时间成本改造，立马就可以达到 ppt 效果。",
        "tags": [],
        "line": 86,
        "startOffset": 1442,
        "endOffset": 1498,
        "filePath": "Cards/Advanced Slides.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " 我用的目的，应该就是基于现有的结构化的文档，进行分钟级的低时间成本改造，立马就可以达到 ppt 效果。"
        ],
        "createdAt": 1752300470922,
        "isNativeComment": true
      },
      {
        "id": "bvdboj59j",
        "text": " fold ",
        "tags": [],
        "line": 90,
        "startOffset": 1513,
        "endOffset": 1523,
        "filePath": "Cards/Advanced Slides.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " fold "
        ],
        "createdAt": 1752300470993,
        "isNativeComment": true
      },
      {
        "id": "xfcm62ldc",
        "text": " fold ",
        "tags": [],
        "line": 94,
        "startOffset": 1539,
        "endOffset": 1549,
        "filePath": "Cards/Advanced Slides.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " fold "
        ],
        "createdAt": 1752300471019,
        "isNativeComment": true
      },
      {
        "id": "w5o72phyb",
        "text": " fold ",
        "tags": [],
        "line": 99,
        "startOffset": 1682,
        "endOffset": 1692,
        "filePath": "Cards/Advanced Slides.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " fold "
        ],
        "createdAt": 1752300471162,
        "isNativeComment": true
      },
      {
        "id": "5x9vkrfzn",
        "text": " fold ",
        "tags": [],
        "line": 108,
        "startOffset": 1785,
        "endOffset": 1795,
        "filePath": "Cards/Advanced Slides.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " fold "
        ],
        "createdAt": 1752300471265,
        "isNativeComment": true
      },
      {
        "id": "kahvv13y2",
        "text": " fold ",
        "tags": [],
        "line": 131,
        "startOffset": 1954,
        "endOffset": 1964,
        "filePath": "Cards/Advanced Slides.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " fold "
        ],
        "createdAt": 1752300471434,
        "isNativeComment": true
      },
      {
        "id": "bya0jaz00",
        "text": " fold ",
        "tags": [],
        "line": 137,
        "startOffset": 2007,
        "endOffset": 2017,
        "filePath": "Cards/Advanced Slides.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " fold "
        ],
        "createdAt": 1752300470487,
        "isNativeComment": true
      },
      {
        "id": "3nm2r7dj8",
        "text": " fold ",
        "tags": [],
        "line": 147,
        "startOffset": 2223,
        "endOffset": 2233,
        "filePath": "Cards/Advanced Slides.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " fold "
        ],
        "createdAt": 1752300470703,
        "isNativeComment": true
      },
      {
        "id": "8xb2jxo7g",
        "text": " fold ",
        "tags": [],
        "line": 155,
        "startOffset": 2337,
        "endOffset": 2347,
        "filePath": "Cards/Advanced Slides.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " fold "
        ],
        "createdAt": 1752300470817,
        "isNativeComment": true
      },
      {
        "id": "bvrl61quw",
        "text": " fold ",
        "tags": [],
        "line": 181,
        "startOffset": 2442,
        "endOffset": 2452,
        "filePath": "Cards/Advanced Slides.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " fold "
        ],
        "createdAt": 1752300470922,
        "isNativeComment": true
      },
      {
        "id": "81bwl4vv0",
        "text": " fold ",
        "tags": [],
        "line": 204,
        "startOffset": 3096,
        "endOffset": 3106,
        "filePath": "Cards/Advanced Slides.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " fold "
        ],
        "createdAt": 1752300470576,
        "isNativeComment": true
      },
      {
        "id": "37ixypx8b",
        "text": " fold ",
        "tags": [],
        "line": 227,
        "startOffset": 3356,
        "endOffset": 3366,
        "filePath": "Cards/Advanced Slides.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " fold "
        ],
        "createdAt": 1752300470836,
        "isNativeComment": true
      },
      {
        "id": "f47ixtfhl",
        "text": " fold ",
        "tags": [],
        "line": 231,
        "startOffset": 3448,
        "endOffset": 3458,
        "filePath": "Cards/Advanced Slides.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " fold "
        ],
        "createdAt": 1752300470928,
        "isNativeComment": true
      },
      {
        "id": "wy2pmzq06",
        "text": " fold ",
        "tags": [],
        "line": 240,
        "startOffset": 3577,
        "endOffset": 3587,
        "filePath": "Cards/Advanced Slides.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " fold "
        ],
        "createdAt": 1752300471057,
        "isNativeComment": true
      },
      {
        "id": "srt8jbkei",
        "text": " fold ",
        "tags": [],
        "line": 250,
        "startOffset": 3653,
        "endOffset": 3663,
        "filePath": "Cards/Advanced Slides.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " fold "
        ],
        "createdAt": 1752300471133,
        "isNativeComment": true
      },
      {
        "id": "3blyvjptp",
        "text": " fold ",
        "tags": [],
        "line": 254,
        "startOffset": 3707,
        "endOffset": 3717,
        "filePath": "Cards/Advanced Slides.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " fold "
        ],
        "createdAt": 1752300471187,
        "isNativeComment": true
      },
      {
        "id": "rgsdk4d0u",
        "text": " fold ",
        "tags": [],
        "line": 260,
        "startOffset": 3778,
        "endOffset": 3788,
        "filePath": "Cards/Advanced Slides.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " fold "
        ],
        "createdAt": 1752300471258,
        "isNativeComment": true
      },
      {
        "id": "9wrelowpx",
        "text": " fold ",
        "tags": [],
        "line": 266,
        "startOffset": 3848,
        "endOffset": 3858,
        "filePath": "Cards/Advanced Slides.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " fold "
        ],
        "createdAt": 1752300471328,
        "isNativeComment": true
      },
      {
        "id": "rcphmqouj",
        "text": " fold ",
        "tags": [],
        "line": 359,
        "startOffset": 6311,
        "endOffset": 6321,
        "filePath": "Cards/Advanced Slides.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " fold "
        ],
        "createdAt": 1752300470791,
        "isNativeComment": true
      },
      {
        "id": "gdp6d96dd",
        "text": " fold ",
        "tags": [],
        "line": 429,
        "startOffset": 7119,
        "endOffset": 7129,
        "filePath": "Cards/Advanced Slides.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " fold "
        ],
        "createdAt": 1752300470599,
        "isNativeComment": true
      },
      {
        "id": "hb12nszrp",
        "text": " fold ",
        "tags": [],
        "line": 467,
        "startOffset": 7715,
        "endOffset": 7725,
        "filePath": "Cards/Advanced Slides.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " fold "
        ],
        "createdAt": 1752300471195,
        "isNativeComment": true
      }
    ],
    "Calendar/Daily notes/2025/2025-06-12.md": [
      {
        "id": "zjzbdhzz5",
        "text": " date(file.ctime).month && date(this.file.name).day ",
        "tags": [],
        "line": 13,
        "startOffset": 150,
        "endOffset": 206,
        "filePath": "Calendar/Daily notes/2025/2025-06-12.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259347918,
        "isNativeComment": false
      }
    ],
    "Calendar/Daily notes/2025/2025-06-11.md": [
      {
        "id": "io42g5xpo",
        "text": " date(file.name).month && date(this.file.name).day ",
        "tags": [],
        "line": 5,
        "startOffset": 66,
        "endOffset": 121,
        "filePath": "Calendar/Daily notes/2025/2025-06-11.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259347834,
        "isNativeComment": false
      }
    ],
    "Calendar/Daily notes/2024/2024-11-28.md": [
      {
        "id": "pcjau85vp",
        "text": " 商家流转\r\n  A1 --> A2\r\n  A2 --> B1\r\n\r\n  ",
        "tags": [],
        "line": 34,
        "startOffset": 409,
        "endOffset": 450,
        "filePath": "Calendar/Daily notes/2024/2024-11-28.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " 商家流转\r\n  A1 --> A2\r\n  A2 --> B1\r\n\r\n  "
        ],
        "createdAt": 1752259348123,
        "isNativeComment": true
      },
      {
        "id": "z0i29n464",
        "text": " 平台扣分与切播款\r\n  C1 --> C4\r\n  C2 --> C4\r\n  C3 --> C4\r\n  C4 -->|超过| C5\r\n```\r\n\r\nclaude\r\n\r\n```mermaid\r\ngraph LR\r\n    ",
        "tags": [],
        "line": 52,
        "startOffset": 631,
        "endOffset": 745,
        "filePath": "Calendar/Daily notes/2024/2024-11-28.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " 平台扣分与切播款\r\n  C1 --> C4\r\n  C2 --> C4\r\n  C3 --> C4\r\n  C4 -->|超过| C5\r\n```\r\n\r\nclaude\r\n\r\n```mermaid\r\ngraph LR\r\n    "
        ],
        "createdAt": 1752259348345,
        "isNativeComment": true
      },
      {
        "id": "npm4j43af",
        "text": " 审核分支\r\n    D --> E{待审稿\\n3天}\r\n    E -->|不通过| B\r\n    E -->|通过\\n默认通过| F[待修改\\n3天]\r\n    E -->|通过\\n默认通过| H[待发布\\n3天]\r\n    \r\n    ",
        "tags": [],
        "line": 68,
        "startOffset": 836,
        "endOffset": 961,
        "filePath": "Calendar/Daily notes/2024/2024-11-28.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " 审核分支\r\n    D --> E{待审稿\\n3天}\r\n    E -->|不通过| B\r\n    E -->|通过\\n默认通过| F[待修改\\n3天]\r\n    E -->|通过\\n默认通过| H[待发布\\n3天]\r\n    \r\n    "
        ],
        "createdAt": 1752259348550,
        "isNativeComment": true
      },
      {
        "id": "543gsfary",
        "text": " 发布路径\r\n    H --> J[测评逾期\\n扣100分]\r\n    H --> K[已发布]\r\n    J --> K\r\n    \r\n    ",
        "tags": [],
        "line": 78,
        "startOffset": 1030,
        "endOffset": 1108,
        "filePath": "Calendar/Daily notes/2024/2024-11-28.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " 发布路径\r\n    H --> J[测评逾期\\n扣100分]\r\n    H --> K[已发布]\r\n    J --> K\r\n    \r\n    "
        ],
        "createdAt": 1752259347744,
        "isNativeComment": true
      },
      {
        "id": "90hgo35g1",
        "text": " 时间标注\r\n    D -.->|14天| M\r\n    I -.->|30天| L\r\n    M -.->|30天| M\r\n    \r\n    ",
        "tags": [],
        "line": 90,
        "startOffset": 1207,
        "endOffset": 1285,
        "filePath": "Calendar/Daily notes/2024/2024-11-28.md",
        "footnoteCount": 1,
        "footnoteContents": [
          " 时间标注\r\n    D -.->|14天| M\r\n    I -.->|30天| L\r\n    M -.->|30天| M\r\n    \r\n    "
        ],
        "createdAt": 1752259347921,
        "isNativeComment": true
      }
    ],
    "Calendar/Daily notes/2024/2024-09-13.md": [
      {
        "id": "we6eqjf6o",
        "text": " -1?}\n    CheckMessageID -->|Yes| ReadLoop\n    CheckMessageID -->|No| ProcessEntries[Process Entries]\n\n    ProcessEntries --> ForEachEntry[For Each Entry in Message]\n    ForEachEntry --> SetNamespace[Set Namespace]\n    SetNamespace --> DevEnvCheck{Dev Env and Namespace Mismatch?}\n    DevEnvCheck -->|Yes| SkipEntry[Skip Entry]\n    SkipEntry --> NextEntry[Next Entry]\n    DevEnvCheck -->|No| ParseBinLogData[Parse BinLog Data]\n    ParseBinLogData --> SyncData[Synchronize Data]\n    SyncData --> SyncError{Error in Sync?}\n    SyncError -->|Yes| RollbackMessage[Roll Back Message]\n    RollbackMessage --> ReadLoop\n    SyncError -->|No| GenerateEvents[Generate Events]\n    GenerateEvents --> CollectEvents[Collect Events]\n    CollectEvents --> NextEntry\n    NextEntry --> EntriesLeft{Entries Left?}\n    EntriesLeft -->|Yes| ForEachEntry\n    EntriesLeft -->|No| SendEvents[Send Events to MQ]\n\n    SendEvents --> SendError{Error Sending Events?}\n    SendError -->|Yes| RollbackMessage\n    SendError -->|No| AckMessage[Acknowledge Message in Canal]\n    AckMessage --> LogEvents[Log Events]\n    LogEvents --> ReadLoop\n```\n\n```mermaid\nflowchart TD\n    开始 --> 初始化Consumer[初始化 Consumer]\n    初始化Consumer --> 初始化MQProducer[初始化 RocketMQ 生产者]\n    初始化MQProducer --> 连接Canal[连接到 Canal 服务器]\n    连接Canal --> 订阅表[订阅表]\n    订阅表 --> 读取循环[开始读取循环]\n    \n    读取循环 --> 检查上下文{上下文是否活跃？}\n    检查上下文 -->|是| 获取消息[从 Canal 获取消息]\n    检查上下文 -->|否| 关闭连接[关闭 Canal 连接]\n    关闭连接 --> 退出[退出循环]\n\n    获取消息 --> 检查获取错误{获取消息出错？}\n    检查获取错误 -->|是| 记录错误[记录错误，休眠，增加错误计数]\n    记录错误 --> 错误计数超限{错误计数 > 阈值？}\n    错误计数超限 -->|是| 关闭连接\n    错误计数超限 -->|否| 读取循环\n    检查获取错误 -->|否| 检查消息ID{消息 ID ",
        "tags": [],
        "line": 74,
        "startOffset": 1729,
        "endOffset": 3362,
        "filePath": "Calendar/Daily notes/2024/2024-09-13.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1747345028164,
        "isNativeComment": false
      }
    ],
    "Calendar/Daily notes/2023/2023-10-23.md": [
      {
        "id": "9jwfvauuy",
        "text": "ggggggg更",
        "tags": [],
        "line": 20,
        "startOffset": 569,
        "endOffset": 581,
        "filePath": "Calendar/Daily notes/2023/2023-10-23.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259348114,
        "isNativeComment": false
      }
    ],
    "Atlas/Draws/数字时代如何更好地工作与生活 - 图.md": [
      {
        "id": "qtdj4zf1u",
        "text": "⚠ Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠",
        "tags": [],
        "line": 8,
        "startOffset": 135,
        "endOffset": 211,
        "filePath": "Atlas/Draws/数字时代如何更好地工作与生活 - 图.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259347488,
        "isNativeComment": false
      },
      {
        "id": "bqah0dvg6",
        "text": "\r\n## Drawing\r\n```compressed-json\r\n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=\r\n```\r\n",
        "tags": [],
        "line": 68,
        "startOffset": 868,
        "endOffset": 28881,
        "filePath": "Atlas/Draws/数字时代如何更好地工作与生活 - 图.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "\r\n## Drawing\r\n```compressed-json\r\n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=\r\n```\r\n"
        ],
        "createdAt": 1752259348221,
        "isNativeComment": true
      }
    ],
    "Atlas/Draws/README 中的头图 - 图.md": [
      {
        "id": "m6fxldv9p",
        "text": "⚠ Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠",
        "tags": [],
        "line": 8,
        "startOffset": 115,
        "endOffset": 191,
        "filePath": "Atlas/Draws/README 中的头图 - 图.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752259347467,
        "isNativeComment": false
      },
      {
        "id": "p2p0zqc4q",
        "text": "\r\n## Drawing\r\n```compressed-json\r\n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\r\n```\r\n",
        "tags": [],
        "line": 30,
        "startOffset": 863,
        "endOffset": 6620,
        "filePath": "Atlas/Draws/README 中的头图 - 图.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "\r\n## Drawing\r\n```compressed-json\r\n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\r\n```\r\n"
        ],
        "createdAt": 1752259348215,
        "isNativeComment": true
      }
    ],
    "Spaces/_ Spaces Readme.md": [
      {
        "id": "ev90ss8c0",
        "text": "如果有需要，比如降低Resource或Archive目录中文档的优先级，则可以在Obsidian -> files and links -> excluded files里面将这个文件夹加入，降低搜索匹配优先级。",
        "tags": [],
        "line": 10,
        "startOffset": 181,
        "endOffset": 291,
        "filePath": "Spaces/_ Spaces Readme.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1752757342294,
        "isNativeComment": false
      }
    ],
    "Calendar/Daily notes/2025/2025-07-21.md": [
      {
        "id": "ja7h46q7a",
        "text": "人生",
        "tags": [],
        "line": 9,
        "startOffset": 93,
        "endOffset": 99,
        "filePath": "Calendar/Daily notes/2025/2025-07-21.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "命运颠沛流离"
        ],
        "createdAt": 1753101588283,
        "isNativeComment": false
      },
      {
        "id": "kqn4lg7b0",
        "text": "若只如初见",
        "tags": [],
        "line": 13,
        "startOffset": 108,
        "endOffset": 117,
        "filePath": "Calendar/Daily notes/2025/2025-07-21.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "的浮动"
        ],
        "createdAt": 1753102052603,
        "isNativeComment": false,
        "color": "#4ecdc4"
      },
      {
        "id": "rh6icx3mv",
        "text": "行行话行话",
        "tags": [],
        "line": 17,
        "startOffset": 147,
        "endOffset": 156,
        "filePath": "Calendar/Daily notes/2025/2025-07-21.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1753105040337,
        "isNativeComment": false
      }
    ],
    "📥 Inbox/AI代理的上下文工程：构建Manus的经验教训.excalidraw.md": [
      {
        "id": "4whcbn41a",
        "text": "⚠ Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠",
        "tags": [],
        "line": 4,
        "startOffset": 59,
        "endOffset": 135,
        "filePath": "📥 Inbox/AI代理的上下文工程：构建Manus的经验教训.excalidraw.md",
        "footnoteCount": 0,
        "footnoteContents": [],
        "createdAt": 1753197072442,
        "isNativeComment": false
      },
      {
        "id": "y7aqzqy78",
        "text": "\n## Drawing\n```json\n{\n\t\"type\": \"excalidraw\",\n\t\"version\": 2,\n\t\"source\": \"https://github.com/zsviczian/obsidian-excalidraw-plugin/releases/tag/2.13.0\",\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"main-title\",\n\t\t\t\"type\": \"text\",\n\t\t\t\"x\": 500,\n\t\t\t\"y\": 50,\n\t\t\t\"width\": 400,\n\t\t\t\"height\": 80,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1e1e1e\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a1\",\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 123456789,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 987654321,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"text\": \"AI代理的上下文工程  \\n构建Manus的经验教训\",\n\t\t\t\"rawText\": \"AI代理的上下文工程  \\n构建Manus的经验教训\",\n\t\t\t\"fontSize\": 28,\n\t\t\t\"fontFamily\": 5,\n\t\t\t\"textAlign\": \"center\",\n\t\t\t\"verticalAlign\": \"middle\",\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"AI代理的上下文工程  \\n构建Manus的经验教训\",\n\t\t\t\"autoResize\": true,\n\t\t\t\"lineHeight\": 1.25,\n\t\t\t\"link\": \"[[∑ 搞透 AI Agent 开发]]\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"center-circle\",\n\t\t\t\"type\": \"ellipse\",\n\t\t\t\"x\": 450,\n\t\t\t\"y\": 300,\n\t\t\t\"width\": 200,\n\t\t\t\"height\": 120,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1971c2\",\n\t\t\t\"backgroundColor\": \"#a5d8ff\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 3,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a2\",\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 234567890,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 876543210,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"link\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"center-text\",\n\t\t\t\"type\": \"text\",\n\t\t\t\"x\": 490,\n\t\t\t\"y\": 340,\n\t\t\t\"width\": 120,\n\t\t\t\"height\": 40,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1e1e1e\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a3\",\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 345678901,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 765432109,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"text\": \"上下文工程  \\n六大原则\",\n\t\t\t\"rawText\": \"上下文工程  \\n六大原则\",\n\t\t\t\"fontSize\": 18,\n\t\t\t\"fontFamily\": 5,\n\t\t\t\"textAlign\": \"center\",\n\t\t\t\"verticalAlign\": \"middle\",\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"上下文工程  \\n六大原则\",\n\t\t\t\"autoResize\": true,\n\t\t\t\"lineHeight\": 1.25,\n\t\t\t\"link\": \"[[AI代理的上下文工程：构建Manus的经验教训-2025-07-21]]\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"kv-cache-box\",\n\t\t\t\"type\": \"rectangle\",\n\t\t\t\"x\": 150,\n\t\t\t\"y\": 150,\n\t\t\t\"width\": 180,\n\t\t\t\"height\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#e03131\",\n\t\t\t\"backgroundColor\": \"#ffc9c9\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a4\",\n\t\t\t\"roundness\": {\"type\": 3},\n\t\t\t\"seed\": 456789012,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 654321098,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"link\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"kv-cache\",\n\t\t\t\"type\": \"text\",\n\t\t\t\"x\": 170,\n\t\t\t\"y\": 180,\n\t\t\t\"width\": 140,\n\t\t\t\"height\": 40,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1e1e1e\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a5\",\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 567890123,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 543210987,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"text\": \"围绕KV缓存设计  \\n• 保持前缀稳定  \\n• 只追加上下文\",\n\t\t\t\"rawText\": \"围绕KV缓存设计  \\n• 保持前缀稳定  \\n• 只追加上下文\",\n\t\t\t\"fontSize\": 14,\n\t\t\t\"fontFamily\": 5,\n\t\t\t\"textAlign\": \"left\",\n\t\t\t\"verticalAlign\": \"top\",\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"围绕KV缓存设计  \\n• 保持前缀稳定  \\n• 只追加上下文\",\n\t\t\t\"autoResize\": true,\n\t\t\t\"lineHeight\": 1.25,\n\t\t\t\"link\": \"[[AI代理的上下文工程：构建Manus的经验教训-2025-07-21]]\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"mask-tools-box\",\n\t\t\t\"type\": \"rectangle\",\n\t\t\t\"x\": 750,\n\t\t\t\"y\": 150,\n\t\t\t\"width\": 180,\n\t\t\t\"height\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#2f9e44\",\n\t\t\t\"backgroundColor\": \"#c3fae8\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a6\",\n\t\t\t\"roundness\": {\"type\": 3},\n\t\t\t\"seed\": 678901234,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 432109876,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"link\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"mask-tools\",\n\t\t\t\"type\": \"text\",\n\t\t\t\"x\": 770,\n\t\t\t\"y\": 180,\n\t\t\t\"width\": 140,\n\t\t\t\"height\": 40,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1e1e1e\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a7\",\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 789012345,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 321098765,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"text\": \"遮蔽，而非移除  \\n• 状态机管理  \\n• logits掩码\",\n\t\t\t\"rawText\": \"遮蔽，而非移除  \\n• 状态机管理  \\n• logits掩码\",\n\t\t\t\"fontSize\": 14,\n\t\t\t\"fontFamily\": 5,\n\t\t\t\"textAlign\": \"left\",\n\t\t\t\"verticalAlign\": \"top\",\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"遮蔽，而非移除  \\n• 状态机管理  \\n• logits掩码\",\n\t\t\t\"autoResize\": true,\n\t\t\t\"lineHeight\": 1.25,\n\t\t\t\"link\": \"[[AI代理的上下文工程：构建Manus的经验教训-2025-07-21]]\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"filesystem-box\",\n\t\t\t\"type\": \"rectangle\",\n\t\t\t\"x\": 150,\n\t\t\t\"y\": 450,\n\t\t\t\"width\": 180,\n\t\t\t\"height\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#7950f2\",\n\t\t\t\"backgroundColor\": \"#e5dbff\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a8\",\n\t\t\t\"roundness\": {\"type\": 3},\n\t\t\t\"seed\": 890123456,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 210987654,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"link\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"filesystem\",\n\t\t\t\"type\": \"text\",\n\t\t\t\"x\": 170,\n\t\t\t\"y\": 480,\n\t\t\t\"width\": 140,\n\t\t\t\"height\": 40,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1e1e1e\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a9\",\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 901234567,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 109876543,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"text\": \"文件系统作上下文  \\n• 外部记忆  \\n• 可恢复压缩\",\n\t\t\t\"rawText\": \"文件系统作上下文  \\n• 外部记忆  \\n• 可恢复压缩\",\n\t\t\t\"fontSize\": 14,\n\t\t\t\"fontFamily\": 5,\n\t\t\t\"textAlign\": \"left\",\n\t\t\t\"verticalAlign\": \"top\",\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"文件系统作上下文  \\n• 外部记忆  \\n• 可恢复压缩\",\n\t\t\t\"autoResize\": true,\n\t\t\t\"lineHeight\": 1.25,\n\t\t\t\"link\": \"[[AI代理的上下文工程：构建Manus的经验教训-2025-07-21]]\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"attention-box\",\n\t\t\t\"type\": \"rectangle\",\n\t\t\t\"x\": 750,\n\t\t\t\"y\": 450,\n\t\t\t\"width\": 180,\n\t\t\t\"height\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#fd7e14\",\n\t\t\t\"backgroundColor\": \"#ffd8a8\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a10\",\n\t\t\t\"roundness\": {\"type\": 3},\n\t\t\t\"seed\": 112345678,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 198765432,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"link\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"attention\",\n\t\t\t\"type\": \"text\",\n\t\t\t\"x\": 770,\n\t\t\t\"y\": 480,\n\t\t\t\"width\": 140,\n\t\t\t\"height\": 40,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1e1e1e\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a11\",\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 123450987,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 987654320,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"text\": \"复述操控注意力  \\n• todo.md文件  \\n• 目标复述\",\n\t\t\t\"rawText\": \"复述操控注意力  \\n• todo.md文件  \\n• 目标复述\",\n\t\t\t\"fontSize\": 14,\n\t\t\t\"fontFamily\": 5,\n\t\t\t\"textAlign\": \"left\",\n\t\t\t\"verticalAlign\": \"top\",\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"复述操控注意力  \\n• todo.md文件  \\n• 目标复述\",\n\t\t\t\"autoResize\": true,\n\t\t\t\"lineHeight\": 1.25,\n\t\t\t\"link\": \"[[AI代理的上下文工程：构建Manus的经验教训-2025-07-21]]\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"keep-errors-box\",\n\t\t\t\"type\": \"rectangle\",\n\t\t\t\"x\": 350,\n\t\t\t\"y\": 600,\n\t\t\t\"width\": 180,\n\t\t\t\"height\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#d6336c\",\n\t\t\t\"backgroundColor\": \"#ffdeeb\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a12\",\n\t\t\t\"roundness\": {\"type\": 3},\n\t\t\t\"seed\": 234509876,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 876543211,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"link\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"keep-errors\",\n\t\t\t\"type\": \"text\",\n\t\t\t\"x\": 370,\n\t\t\t\"y\": 630,\n\t\t\t\"width\": 140,\n\t\t\t\"height\": 40,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1e1e1e\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a13\",\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 345098765,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 765432108,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"text\": \"保留错误内容  \\n• 失败是学习  \\n• 更新内部信念\",\n\t\t\t\"rawText\": \"保留错误内容  \\n• 失败是学习  \\n• 更新内部信念\",\n\t\t\t\"fontSize\": 14,\n\t\t\t\"fontFamily\": 5,\n\t\t\t\"textAlign\": \"left\",\n\t\t\t\"verticalAlign\": \"top\",\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"保留错误内容  \\n• 失败是学习  \\n• 更新内部信念\",\n\t\t\t\"autoResize\": true,\n\t\t\t\"lineHeight\": 1.25,\n\t\t\t\"link\": \"[[AI代理的上下文工程：构建Manus的经验教训-2025-07-21]]\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"few-shot-box\",\n\t\t\t\"type\": \"rectangle\",\n\t\t\t\"x\": 580,\n\t\t\t\"y\": 600,\n\t\t\t\"width\": 180,\n\t\t\t\"height\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#495057\",\n\t\t\t\"backgroundColor\": \"#f1f3f4\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a14\",\n\t\t\t\"roundness\": {\"type\": 3},\n\t\t\t\"seed\": 450987654,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 654321097,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"link\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"few-shot\",\n\t\t\t\"type\": \"text\",\n\t\t\t\"x\": 600,\n\t\t\t\"y\": 630,\n\t\t\t\"width\": 140,\n\t\t\t\"height\": 40,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1e1e1e\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a15\",\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 509876543,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 543210986,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"text\": \"避免少样本陷阱  \\n• 增加多样性  \\n• 打破模式\",\n\t\t\t\"rawText\": \"避免少样本陷阱  \\n• 增加多样性  \\n• 打破模式\",\n\t\t\t\"fontSize\": 14,\n\t\t\t\"fontFamily\": 5,\n\t\t\t\"textAlign\": \"left\",\n\t\t\t\"verticalAlign\": \"top\",\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"避免少样本陷阱  \\n• 增加多样性  \\n• 打破模式\",\n\t\t\t\"autoResize\": true,\n\t\t\t\"lineHeight\": 1.25,\n\t\t\t\"link\": \"[[AI代理的上下文工程：构建Manus的经验教训-2025-07-21]]\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"arrow1\",\n\t\t\t\"type\": \"arrow\",\n\t\t\t\"x\": 330,\n\t\t\t\"y\": 240,\n\t\t\t\"width\": 150,\n\t\t\t\"height\": 120,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1e1e1e\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a16\",\n\t\t\t\"roundness\": {\"type\": 2},\n\t\t\t\"seed\": 198765432,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 432109875,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"startBinding\": null,\n\t\t\t\"endBinding\": null,\n\t\t\t\"lastCommittedPoint\": null,\n\t\t\t\"startArrowhead\": null,\n\t\t\t\"endArrowhead\": \"arrow\",\n\t\t\t\"points\": [[0, 0], [150, 120]],\n\t\t\t\"link\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"arrow2\",\n\t\t\t\"type\": \"arrow\",\n\t\t\t\"x\": 620,\n\t\t\t\"y\": 360,\n\t\t\t\"width\": 130,\n\t\t\t\"height\": -120,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1e1e1e\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a17\",\n\t\t\t\"roundness\": {\"type\": 2},\n\t\t\t\"seed\": 987654322,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 321098764,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"startBinding\": null,\n\t\t\t\"endBinding\": null,\n\t\t\t\"lastCommittedPoint\": null,\n\t\t\t\"startArrowhead\": null,\n\t\t\t\"endArrowhead\": \"arrow\",\n\t\t\t\"points\": [[0, 0], [130, -120]],\n\t\t\t\"link\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"arrow3\",\n\t\t\t\"type\": \"arrow\",\n\t\t\t\"x\": 480,\n\t\t\t\"y\": 420,\n\t\t\t\"width\": -150,\n\t\t\t\"height\": 80,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1e1e1e\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a18\",\n\t\t\t\"roundness\": {\"type\": 2},\n\t\t\t\"seed\": 876543211,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 210987653,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"startBinding\": null,\n\t\t\t\"endBinding\": null,\n\t\t\t\"lastCommittedPoint\": null,\n\t\t\t\"startArrowhead\": null,\n\t\t\t\"endArrowhead\": \"arrow\",\n\t\t\t\"points\": [[0, 0], [-150, 80]],\n\t\t\t\"link\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"arrow4\",\n\t\t\t\"type\": \"arrow\",\n\t\t\t\"x\": 580,\n\t\t\t\"y\": 420,\n\t\t\t\"width\": 120,\n\t\t\t\"height\": 80,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1e1e1e\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a19\",\n\t\t\t\"roundness\": {\"type\": 2},\n\t\t\t\"seed\": 765432108,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 109876542,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"startBinding\": null,\n\t\t\t\"endBinding\": null,\n\t\t\t\"lastCommittedPoint\": null,\n\t\t\t\"startArrowhead\": null,\n\t\t\t\"endArrowhead\": \"arrow\",\n\t\t\t\"points\": [[0, 0], [120, 80]],\n\t\t\t\"link\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"arrow5\",\n\t\t\t\"type\": \"arrow\",\n\t\t\t\"x\": 510,\n\t\t\t\"y\": 470,\n\t\t\t\"width\": 50,\n\t\t\t\"height\": 130,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1e1e1e\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a20\",\n\t\t\t\"roundness\": {\"type\": 2},\n\t\t\t\"seed\": 654321097,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 198765431,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"startBinding\": null,\n\t\t\t\"endBinding\": null,\n\t\t\t\"lastCommittedPoint\": null,\n\t\t\t\"startArrowhead\": null,\n\t\t\t\"endArrowhead\": \"arrow\",\n\t\t\t\"points\": [[0, 0], [-60, 130]],\n\t\t\t\"link\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"arrow6\",\n\t\t\t\"type\": \"arrow\",\n\t\t\t\"x\": 570,\n\t\t\t\"y\": 470,\n\t\t\t\"width\": 50,\n\t\t\t\"height\": 130,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1e1e1e\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a21\",\n\t\t\t\"roundness\": {\"type\": 2},\n\t\t\t\"seed\": 543210986,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 987654320,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"startBinding\": null,\n\t\t\t\"endBinding\": null,\n\t\t\t\"lastCommittedPoint\": null,\n\t\t\t\"startArrowhead\": null,\n\t\t\t\"endArrowhead\": \"arrow\",\n\t\t\t\"points\": [[0, 0], [50, 130]],\n\t\t\t\"link\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"highlight-box\",\n\t\t\t\"type\": \"rectangle\",\n\t\t\t\"x\": 400,\n\t\t\t\"y\": 750,\n\t\t\t\"width\": 300,\n\t\t\t\"height\": 80,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#fab005\",\n\t\t\t\"backgroundColor\": \"#fff3bf\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 3,\n\t\t\t\"strokeStyle\": \"dashed\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a22\",\n\t\t\t\"roundness\": {\"type\": 3},\n\t\t\t\"seed\": 432109875,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 876543211,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"link\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"highlight-text\",\n\t\t\t\"type\": \"text\",\n\t\t\t\"x\": 420,\n\t\t\t\"y\": 770,\n\t\t\t\"width\": 260,\n\t\t\t\"height\": 40,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#e67700\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a23\",\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 321098764,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 765432108,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"text\": \"💡 核心观点：上下文工程决定AI代理的  \\n行为方式、运行速度和扩展能力\",\n\t\t\t\"rawText\": \"💡 核心观点：上下文工程决定AI代理的  \\n行为方式、运行速度和扩展能力\",\n\t\t\t\"fontSize\": 16,\n\t\t\t\"fontFamily\": 5,\n\t\t\t\"textAlign\": \"center\",\n\t\t\t\"verticalAlign\": \"middle\",\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"💡 核心观点：上下文工程决定AI代理的  \\n行为方式、运行速度和扩展能力\",\n\t\t\t\"autoResize\": true,\n\t\t\t\"lineHeight\": 1.25,\n\t\t\t\"link\": \"[[AI代理的上下文工程：构建Manus的经验教训-2025-07-21]]\"\n\t\t}\n\t],\n\t\"appState\": {\n\t\t\"theme\": \"light\",\n\t\t\"viewBackgroundColor\": \"#ffffff\",\n\t\t\"currentItemStrokeColor\": \"#1e1e1e\",\n\t\t\"currentItemBackgroundColor\": \"transparent\",\n\t\t\"currentItemFillStyle\": \"solid\",\n\t\t\"currentItemStrokeWidth\": 2,\n\t\t\"currentItemStrokeStyle\": \"solid\",\n\t\t\"currentItemRoughness\": 1,\n\t\t\"currentItemOpacity\": 100,\n\t\t\"currentItemFontFamily\": 5,\n\t\t\"currentItemFontSize\": 16,\n\t\t\"currentItemTextAlign\": \"left\",\n\t\t\"currentItemStartArrowhead\": null,\n\t\t\"currentItemEndArrowhead\": \"arrow\",\n\t\t\"scrollX\": 0,\n\t\t\"scrollY\": 0,\n\t\t\"zoom\": {\n\t\t\t\"value\": 1\n\t\t},\n\t\t\"currentItemRoundness\": \"round\",\n\t\t\"gridSize\": null,\n\t\t\"gridColor\": {\n\t\t\t\"Bold\": \"#C9C9C9FF\",\n\t\t\t\"Regular\": \"#EDEDEDFF\"\n\t\t},\n\t\t\"currentStrokeOptions\": null,\n\t\t\"previousGridSize\": null,\n\t\t\"frameRendering\": {\n\t\t\t\"enabled\": true,\n\t\t\t\"clip\": true,\n\t\t\t\"name\": true,\n\t\t\t\"outline\": true\n\t\t},\n\t\t\"objectsSnapModeEnabled\": false,\n\t\t\"activeTool\": {\n\t\t\t\"type\": \"selection\",\n\t\t\t\"customType\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"lastActiveTool\": null\n\t\t}\n\t},\n\t\"files\": {}\n}\n```\n",
        "tags": [],
        "line": 21,
        "startOffset": 696,
        "endOffset": 19012,
        "filePath": "📥 Inbox/AI代理的上下文工程：构建Manus的经验教训.excalidraw.md",
        "footnoteCount": 1,
        "footnoteContents": [
          "\n## Drawing\n```json\n{\n\t\"type\": \"excalidraw\",\n\t\"version\": 2,\n\t\"source\": \"https://github.com/zsviczian/obsidian-excalidraw-plugin/releases/tag/2.13.0\",\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"main-title\",\n\t\t\t\"type\": \"text\",\n\t\t\t\"x\": 500,\n\t\t\t\"y\": 50,\n\t\t\t\"width\": 400,\n\t\t\t\"height\": 80,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1e1e1e\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a1\",\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 123456789,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 987654321,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"text\": \"AI代理的上下文工程  \\n构建Manus的经验教训\",\n\t\t\t\"rawText\": \"AI代理的上下文工程  \\n构建Manus的经验教训\",\n\t\t\t\"fontSize\": 28,\n\t\t\t\"fontFamily\": 5,\n\t\t\t\"textAlign\": \"center\",\n\t\t\t\"verticalAlign\": \"middle\",\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"AI代理的上下文工程  \\n构建Manus的经验教训\",\n\t\t\t\"autoResize\": true,\n\t\t\t\"lineHeight\": 1.25,\n\t\t\t\"link\": \"[[∑ 搞透 AI Agent 开发]]\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"center-circle\",\n\t\t\t\"type\": \"ellipse\",\n\t\t\t\"x\": 450,\n\t\t\t\"y\": 300,\n\t\t\t\"width\": 200,\n\t\t\t\"height\": 120,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1971c2\",\n\t\t\t\"backgroundColor\": \"#a5d8ff\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 3,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a2\",\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 234567890,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 876543210,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"link\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"center-text\",\n\t\t\t\"type\": \"text\",\n\t\t\t\"x\": 490,\n\t\t\t\"y\": 340,\n\t\t\t\"width\": 120,\n\t\t\t\"height\": 40,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1e1e1e\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a3\",\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 345678901,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 765432109,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"text\": \"上下文工程  \\n六大原则\",\n\t\t\t\"rawText\": \"上下文工程  \\n六大原则\",\n\t\t\t\"fontSize\": 18,\n\t\t\t\"fontFamily\": 5,\n\t\t\t\"textAlign\": \"center\",\n\t\t\t\"verticalAlign\": \"middle\",\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"上下文工程  \\n六大原则\",\n\t\t\t\"autoResize\": true,\n\t\t\t\"lineHeight\": 1.25,\n\t\t\t\"link\": \"[[AI代理的上下文工程：构建Manus的经验教训-2025-07-21]]\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"kv-cache-box\",\n\t\t\t\"type\": \"rectangle\",\n\t\t\t\"x\": 150,\n\t\t\t\"y\": 150,\n\t\t\t\"width\": 180,\n\t\t\t\"height\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#e03131\",\n\t\t\t\"backgroundColor\": \"#ffc9c9\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a4\",\n\t\t\t\"roundness\": {\"type\": 3},\n\t\t\t\"seed\": 456789012,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 654321098,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"link\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"kv-cache\",\n\t\t\t\"type\": \"text\",\n\t\t\t\"x\": 170,\n\t\t\t\"y\": 180,\n\t\t\t\"width\": 140,\n\t\t\t\"height\": 40,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1e1e1e\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a5\",\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 567890123,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 543210987,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"text\": \"围绕KV缓存设计  \\n• 保持前缀稳定  \\n• 只追加上下文\",\n\t\t\t\"rawText\": \"围绕KV缓存设计  \\n• 保持前缀稳定  \\n• 只追加上下文\",\n\t\t\t\"fontSize\": 14,\n\t\t\t\"fontFamily\": 5,\n\t\t\t\"textAlign\": \"left\",\n\t\t\t\"verticalAlign\": \"top\",\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"围绕KV缓存设计  \\n• 保持前缀稳定  \\n• 只追加上下文\",\n\t\t\t\"autoResize\": true,\n\t\t\t\"lineHeight\": 1.25,\n\t\t\t\"link\": \"[[AI代理的上下文工程：构建Manus的经验教训-2025-07-21]]\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"mask-tools-box\",\n\t\t\t\"type\": \"rectangle\",\n\t\t\t\"x\": 750,\n\t\t\t\"y\": 150,\n\t\t\t\"width\": 180,\n\t\t\t\"height\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#2f9e44\",\n\t\t\t\"backgroundColor\": \"#c3fae8\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a6\",\n\t\t\t\"roundness\": {\"type\": 3},\n\t\t\t\"seed\": 678901234,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 432109876,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"link\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"mask-tools\",\n\t\t\t\"type\": \"text\",\n\t\t\t\"x\": 770,\n\t\t\t\"y\": 180,\n\t\t\t\"width\": 140,\n\t\t\t\"height\": 40,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1e1e1e\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a7\",\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 789012345,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 321098765,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"text\": \"遮蔽，而非移除  \\n• 状态机管理  \\n• logits掩码\",\n\t\t\t\"rawText\": \"遮蔽，而非移除  \\n• 状态机管理  \\n• logits掩码\",\n\t\t\t\"fontSize\": 14,\n\t\t\t\"fontFamily\": 5,\n\t\t\t\"textAlign\": \"left\",\n\t\t\t\"verticalAlign\": \"top\",\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"遮蔽，而非移除  \\n• 状态机管理  \\n• logits掩码\",\n\t\t\t\"autoResize\": true,\n\t\t\t\"lineHeight\": 1.25,\n\t\t\t\"link\": \"[[AI代理的上下文工程：构建Manus的经验教训-2025-07-21]]\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"filesystem-box\",\n\t\t\t\"type\": \"rectangle\",\n\t\t\t\"x\": 150,\n\t\t\t\"y\": 450,\n\t\t\t\"width\": 180,\n\t\t\t\"height\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#7950f2\",\n\t\t\t\"backgroundColor\": \"#e5dbff\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a8\",\n\t\t\t\"roundness\": {\"type\": 3},\n\t\t\t\"seed\": 890123456,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 210987654,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"link\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"filesystem\",\n\t\t\t\"type\": \"text\",\n\t\t\t\"x\": 170,\n\t\t\t\"y\": 480,\n\t\t\t\"width\": 140,\n\t\t\t\"height\": 40,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1e1e1e\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a9\",\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 901234567,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 109876543,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"text\": \"文件系统作上下文  \\n• 外部记忆  \\n• 可恢复压缩\",\n\t\t\t\"rawText\": \"文件系统作上下文  \\n• 外部记忆  \\n• 可恢复压缩\",\n\t\t\t\"fontSize\": 14,\n\t\t\t\"fontFamily\": 5,\n\t\t\t\"textAlign\": \"left\",\n\t\t\t\"verticalAlign\": \"top\",\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"文件系统作上下文  \\n• 外部记忆  \\n• 可恢复压缩\",\n\t\t\t\"autoResize\": true,\n\t\t\t\"lineHeight\": 1.25,\n\t\t\t\"link\": \"[[AI代理的上下文工程：构建Manus的经验教训-2025-07-21]]\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"attention-box\",\n\t\t\t\"type\": \"rectangle\",\n\t\t\t\"x\": 750,\n\t\t\t\"y\": 450,\n\t\t\t\"width\": 180,\n\t\t\t\"height\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#fd7e14\",\n\t\t\t\"backgroundColor\": \"#ffd8a8\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a10\",\n\t\t\t\"roundness\": {\"type\": 3},\n\t\t\t\"seed\": 112345678,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 198765432,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"link\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"attention\",\n\t\t\t\"type\": \"text\",\n\t\t\t\"x\": 770,\n\t\t\t\"y\": 480,\n\t\t\t\"width\": 140,\n\t\t\t\"height\": 40,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1e1e1e\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a11\",\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 123450987,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 987654320,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"text\": \"复述操控注意力  \\n• todo.md文件  \\n• 目标复述\",\n\t\t\t\"rawText\": \"复述操控注意力  \\n• todo.md文件  \\n• 目标复述\",\n\t\t\t\"fontSize\": 14,\n\t\t\t\"fontFamily\": 5,\n\t\t\t\"textAlign\": \"left\",\n\t\t\t\"verticalAlign\": \"top\",\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"复述操控注意力  \\n• todo.md文件  \\n• 目标复述\",\n\t\t\t\"autoResize\": true,\n\t\t\t\"lineHeight\": 1.25,\n\t\t\t\"link\": \"[[AI代理的上下文工程：构建Manus的经验教训-2025-07-21]]\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"keep-errors-box\",\n\t\t\t\"type\": \"rectangle\",\n\t\t\t\"x\": 350,\n\t\t\t\"y\": 600,\n\t\t\t\"width\": 180,\n\t\t\t\"height\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#d6336c\",\n\t\t\t\"backgroundColor\": \"#ffdeeb\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a12\",\n\t\t\t\"roundness\": {\"type\": 3},\n\t\t\t\"seed\": 234509876,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 876543211,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"link\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"keep-errors\",\n\t\t\t\"type\": \"text\",\n\t\t\t\"x\": 370,\n\t\t\t\"y\": 630,\n\t\t\t\"width\": 140,\n\t\t\t\"height\": 40,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1e1e1e\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a13\",\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 345098765,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 765432108,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"text\": \"保留错误内容  \\n• 失败是学习  \\n• 更新内部信念\",\n\t\t\t\"rawText\": \"保留错误内容  \\n• 失败是学习  \\n• 更新内部信念\",\n\t\t\t\"fontSize\": 14,\n\t\t\t\"fontFamily\": 5,\n\t\t\t\"textAlign\": \"left\",\n\t\t\t\"verticalAlign\": \"top\",\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"保留错误内容  \\n• 失败是学习  \\n• 更新内部信念\",\n\t\t\t\"autoResize\": true,\n\t\t\t\"lineHeight\": 1.25,\n\t\t\t\"link\": \"[[AI代理的上下文工程：构建Manus的经验教训-2025-07-21]]\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"few-shot-box\",\n\t\t\t\"type\": \"rectangle\",\n\t\t\t\"x\": 580,\n\t\t\t\"y\": 600,\n\t\t\t\"width\": 180,\n\t\t\t\"height\": 100,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#495057\",\n\t\t\t\"backgroundColor\": \"#f1f3f4\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a14\",\n\t\t\t\"roundness\": {\"type\": 3},\n\t\t\t\"seed\": 450987654,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 654321097,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"link\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"few-shot\",\n\t\t\t\"type\": \"text\",\n\t\t\t\"x\": 600,\n\t\t\t\"y\": 630,\n\t\t\t\"width\": 140,\n\t\t\t\"height\": 40,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1e1e1e\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a15\",\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 509876543,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 543210986,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"text\": \"避免少样本陷阱  \\n• 增加多样性  \\n• 打破模式\",\n\t\t\t\"rawText\": \"避免少样本陷阱  \\n• 增加多样性  \\n• 打破模式\",\n\t\t\t\"fontSize\": 14,\n\t\t\t\"fontFamily\": 5,\n\t\t\t\"textAlign\": \"left\",\n\t\t\t\"verticalAlign\": \"top\",\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"避免少样本陷阱  \\n• 增加多样性  \\n• 打破模式\",\n\t\t\t\"autoResize\": true,\n\t\t\t\"lineHeight\": 1.25,\n\t\t\t\"link\": \"[[AI代理的上下文工程：构建Manus的经验教训-2025-07-21]]\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"arrow1\",\n\t\t\t\"type\": \"arrow\",\n\t\t\t\"x\": 330,\n\t\t\t\"y\": 240,\n\t\t\t\"width\": 150,\n\t\t\t\"height\": 120,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1e1e1e\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a16\",\n\t\t\t\"roundness\": {\"type\": 2},\n\t\t\t\"seed\": 198765432,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 432109875,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"startBinding\": null,\n\t\t\t\"endBinding\": null,\n\t\t\t\"lastCommittedPoint\": null,\n\t\t\t\"startArrowhead\": null,\n\t\t\t\"endArrowhead\": \"arrow\",\n\t\t\t\"points\": [[0, 0], [150, 120]],\n\t\t\t\"link\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"arrow2\",\n\t\t\t\"type\": \"arrow\",\n\t\t\t\"x\": 620,\n\t\t\t\"y\": 360,\n\t\t\t\"width\": 130,\n\t\t\t\"height\": -120,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1e1e1e\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a17\",\n\t\t\t\"roundness\": {\"type\": 2},\n\t\t\t\"seed\": 987654322,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 321098764,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"startBinding\": null,\n\t\t\t\"endBinding\": null,\n\t\t\t\"lastCommittedPoint\": null,\n\t\t\t\"startArrowhead\": null,\n\t\t\t\"endArrowhead\": \"arrow\",\n\t\t\t\"points\": [[0, 0], [130, -120]],\n\t\t\t\"link\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"arrow3\",\n\t\t\t\"type\": \"arrow\",\n\t\t\t\"x\": 480,\n\t\t\t\"y\": 420,\n\t\t\t\"width\": -150,\n\t\t\t\"height\": 80,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1e1e1e\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a18\",\n\t\t\t\"roundness\": {\"type\": 2},\n\t\t\t\"seed\": 876543211,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 210987653,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"startBinding\": null,\n\t\t\t\"endBinding\": null,\n\t\t\t\"lastCommittedPoint\": null,\n\t\t\t\"startArrowhead\": null,\n\t\t\t\"endArrowhead\": \"arrow\",\n\t\t\t\"points\": [[0, 0], [-150, 80]],\n\t\t\t\"link\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"arrow4\",\n\t\t\t\"type\": \"arrow\",\n\t\t\t\"x\": 580,\n\t\t\t\"y\": 420,\n\t\t\t\"width\": 120,\n\t\t\t\"height\": 80,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1e1e1e\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a19\",\n\t\t\t\"roundness\": {\"type\": 2},\n\t\t\t\"seed\": 765432108,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 109876542,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"startBinding\": null,\n\t\t\t\"endBinding\": null,\n\t\t\t\"lastCommittedPoint\": null,\n\t\t\t\"startArrowhead\": null,\n\t\t\t\"endArrowhead\": \"arrow\",\n\t\t\t\"points\": [[0, 0], [120, 80]],\n\t\t\t\"link\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"arrow5\",\n\t\t\t\"type\": \"arrow\",\n\t\t\t\"x\": 510,\n\t\t\t\"y\": 470,\n\t\t\t\"width\": 50,\n\t\t\t\"height\": 130,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1e1e1e\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a20\",\n\t\t\t\"roundness\": {\"type\": 2},\n\t\t\t\"seed\": 654321097,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 198765431,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"startBinding\": null,\n\t\t\t\"endBinding\": null,\n\t\t\t\"lastCommittedPoint\": null,\n\t\t\t\"startArrowhead\": null,\n\t\t\t\"endArrowhead\": \"arrow\",\n\t\t\t\"points\": [[0, 0], [-60, 130]],\n\t\t\t\"link\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"arrow6\",\n\t\t\t\"type\": \"arrow\",\n\t\t\t\"x\": 570,\n\t\t\t\"y\": 470,\n\t\t\t\"width\": 50,\n\t\t\t\"height\": 130,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#1e1e1e\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a21\",\n\t\t\t\"roundness\": {\"type\": 2},\n\t\t\t\"seed\": 543210986,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 987654320,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"startBinding\": null,\n\t\t\t\"endBinding\": null,\n\t\t\t\"lastCommittedPoint\": null,\n\t\t\t\"startArrowhead\": null,\n\t\t\t\"endArrowhead\": \"arrow\",\n\t\t\t\"points\": [[0, 0], [50, 130]],\n\t\t\t\"link\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"highlight-box\",\n\t\t\t\"type\": \"rectangle\",\n\t\t\t\"x\": 400,\n\t\t\t\"y\": 750,\n\t\t\t\"width\": 300,\n\t\t\t\"height\": 80,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#fab005\",\n\t\t\t\"backgroundColor\": \"#fff3bf\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 3,\n\t\t\t\"strokeStyle\": \"dashed\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a22\",\n\t\t\t\"roundness\": {\"type\": 3},\n\t\t\t\"seed\": 432109875,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 876543211,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"link\": null\n\t\t},\n\t\t{\n\t\t\t\"id\": \"highlight-text\",\n\t\t\t\"type\": \"text\",\n\t\t\t\"x\": 420,\n\t\t\t\"y\": 770,\n\t\t\t\"width\": 260,\n\t\t\t\"height\": 40,\n\t\t\t\"angle\": 0,\n\t\t\t\"strokeColor\": \"#e67700\",\n\t\t\t\"backgroundColor\": \"transparent\",\n\t\t\t\"fillStyle\": \"solid\",\n\t\t\t\"strokeWidth\": 2,\n\t\t\t\"strokeStyle\": \"solid\",\n\t\t\t\"roughness\": 1,\n\t\t\t\"opacity\": 100,\n\t\t\t\"groupIds\": [],\n\t\t\t\"frameId\": null,\n\t\t\t\"index\": \"a23\",\n\t\t\t\"roundness\": null,\n\t\t\t\"seed\": 321098764,\n\t\t\t\"version\": 1,\n\t\t\t\"versionNonce\": 765432108,\n\t\t\t\"isDeleted\": false,\n\t\t\t\"boundElements\": [],\n\t\t\t\"updated\": 1751928342106,\n\t\t\t\"locked\": false,\n\t\t\t\"text\": \"💡 核心观点：上下文工程决定AI代理的  \\n行为方式、运行速度和扩展能力\",\n\t\t\t\"rawText\": \"💡 核心观点：上下文工程决定AI代理的  \\n行为方式、运行速度和扩展能力\",\n\t\t\t\"fontSize\": 16,\n\t\t\t\"fontFamily\": 5,\n\t\t\t\"textAlign\": \"center\",\n\t\t\t\"verticalAlign\": \"middle\",\n\t\t\t\"containerId\": null,\n\t\t\t\"originalText\": \"💡 核心观点：上下文工程决定AI代理的  \\n行为方式、运行速度和扩展能力\",\n\t\t\t\"autoResize\": true,\n\t\t\t\"lineHeight\": 1.25,\n\t\t\t\"link\": \"[[AI代理的上下文工程：构建Manus的经验教训-2025-07-21]]\"\n\t\t}\n\t],\n\t\"appState\": {\n\t\t\"theme\": \"light\",\n\t\t\"viewBackgroundColor\": \"#ffffff\",\n\t\t\"currentItemStrokeColor\": \"#1e1e1e\",\n\t\t\"currentItemBackgroundColor\": \"transparent\",\n\t\t\"currentItemFillStyle\": \"solid\",\n\t\t\"currentItemStrokeWidth\": 2,\n\t\t\"currentItemStrokeStyle\": \"solid\",\n\t\t\"currentItemRoughness\": 1,\n\t\t\"currentItemOpacity\": 100,\n\t\t\"currentItemFontFamily\": 5,\n\t\t\"currentItemFontSize\": 16,\n\t\t\"currentItemTextAlign\": \"left\",\n\t\t\"currentItemStartArrowhead\": null,\n\t\t\"currentItemEndArrowhead\": \"arrow\",\n\t\t\"scrollX\": 0,\n\t\t\"scrollY\": 0,\n\t\t\"zoom\": {\n\t\t\t\"value\": 1\n\t\t},\n\t\t\"currentItemRoundness\": \"round\",\n\t\t\"gridSize\": null,\n\t\t\"gridColor\": {\n\t\t\t\"Bold\": \"#C9C9C9FF\",\n\t\t\t\"Regular\": \"#EDEDEDFF\"\n\t\t},\n\t\t\"currentStrokeOptions\": null,\n\t\t\"previousGridSize\": null,\n\t\t\"frameRendering\": {\n\t\t\t\"enabled\": true,\n\t\t\t\"clip\": true,\n\t\t\t\"name\": true,\n\t\t\t\"outline\": true\n\t\t},\n\t\t\"objectsSnapModeEnabled\": false,\n\t\t\"activeTool\": {\n\t\t\t\"type\": \"selection\",\n\t\t\t\"customType\": null,\n\t\t\t\"locked\": false,\n\t\t\t\"lastActiveTool\": null\n\t\t}\n\t},\n\t\"files\": {}\n}\n```\n"
        ],
        "createdAt": 1753197206019,
        "isNativeComment": true
      }
    ]
  },
  "collections": {},
  "groupingMode": "none",
  "showFilenames": true,
  "showTimestamps": true,
  "showHighlightActions": true,
  "showToolbar": true,
  "useInlineFootnotes": false,
  "selectTextOnCommentClick": false,
  "excludeExcalidraw": true,
  "excludedFiles": [],
  "dateFormat": "YYYY-MM-DD HH:mm",
  "customColors": {
    "yellow": "#ffd700",
    "red": "#ff6b6b",
    "teal": "#4ecdc4",
    "blue": "#45b7d1",
    "green": "#96ceb4"
  },
  "customColorNames": {
    "yellow": "",
    "red": "",
    "teal": "",
    "blue": "",
    "green": ""
  }
}